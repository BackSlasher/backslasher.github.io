<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>BackSlasher - Microsoft</title><link href="https://blog.backslasher.net/" rel="alternate"></link><link href="https://blog.backslasher.net/feeds/microsoft.atom.xml" rel="self"></link><id>https://blog.backslasher.net/</id><updated>2016-08-27T12:00:00+02:00</updated><entry><title>Keeping Windows Awake (with PowerShell)</title><link href="https://blog.backslasher.net/windows-awake-ps.html" rel="alternate"></link><published>2016-08-27T12:00:00+02:00</published><updated>2016-08-27T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-08-27:/windows-awake-ps.html</id><summary type="html">&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I got a new game on Steam and got set to downloading it.&lt;br&gt;
For some reason, Steam and Windows have decided that it's better to save some electricity and put my computer to sleep, rather than finish my game.&lt;br&gt;
Today I discovered that instead of playing my game â€¦&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I got a new game on Steam and got set to downloading it.&lt;br&gt;
For some reason, Steam and Windows have decided that it's better to save some electricity and put my computer to sleep, rather than finish my game.&lt;br&gt;
Today I discovered that instead of playing my game I have to &lt;strong&gt;wait&lt;/strong&gt; for it to finish downloading.&lt;br&gt;
This will be the last time.&lt;/p&gt;
&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;I wrote &lt;a href="https://blog.backslasher.net/putting-your-windows-to-sleep.html"&gt;a post&lt;/a&gt; about sleep. Basically, sleep is a middle ground between saving power (by turning off components) and staying ready to work in short notice (by keeping RAM alive).&lt;br&gt;
Some programs can tell Windows "I'm doing something, don't sleep now.". This can be your media player playing a movie, or your BitTorrent client downloading something.&lt;br&gt;
These "requests" can be shown using &lt;code&gt;powercfg -requests&lt;/code&gt; (as admin). This is an example of my Steam client behaving and asking Windows to keep awake:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Windows\system32&amp;gt;powercfg -requests
DISPLAY:
None.

SYSTEM:
[PROCESS] \Device\HarddiskVolume2\Program Files (x86)\Steam\Steam.exe

AWAYMODE:
None.

EXECUTION:
None.

PERFBOOST:
None.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;What I want to do is write a PowerShell script that does this request from Windows, waits for the user and then terminates. I wanted this as a PS script because it means there is no compilation involved, so people that can't code can see what's going on and run it without installing weird stuff on their system.&lt;br&gt;
The API I found for this is &lt;a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa373208(v=vs.85).aspx"&gt;SetThreadExecutionState&lt;/a&gt;, which can be used &lt;a href="http://stackoverflow.com/a/6302309"&gt;like this&lt;/a&gt;.&lt;br&gt;
I had my work practically done by &lt;a href="https://github.com/stefanstranger"&gt;Stefan Stranger&lt;/a&gt; in &lt;a href="https://github.com/stefanstranger/PowerShell/blob/master/Examples/SuspendPowerPlan.ps1"&gt;SuspendPowerPlan.ps1&lt;/a&gt;, to which I added a "main" behaviour &lt;a href="http://stackoverflow.com/q/22310114"&gt;like here&lt;/a&gt; that defaults to running the method doing nothing.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# ---------------------------------------------------&lt;/span&gt;
&lt;span class="c"&gt;# Script: C:\Users\stefstr\Documents\GitHub\PowerShell\Examples\SuspendPowerPlan.ps1&lt;/span&gt;
&lt;span class="c"&gt;# Version: 0.1&lt;/span&gt;
&lt;span class="c"&gt;# Author: Stefan Stranger&lt;/span&gt;
&lt;span class="c"&gt;# Date: 07/05/2014 15:01:57&lt;/span&gt;
&lt;span class="c"&gt;# Description: Helper Function to Suspend Power Plan when running PowerShell scripts&lt;/span&gt;
&lt;span class="c"&gt;# Comments:&lt;/span&gt;
&lt;span class="c"&gt;# Disclamer: This Sample Code is provided for the purpose of illustration only and is not intended to be used in a production environment.&lt;/span&gt;
&lt;span class="c"&gt;# ---------------------------------------------------&lt;/span&gt;


&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.Synopsis&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;   Function to suspend your current Power Plan settings when running a PowerShell script.&lt;/span&gt;
&lt;span class="sd"&gt;.DESCRIPTION&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;   Function to suspend your current Power Plan settings when running a PowerShell script.&lt;/span&gt;
&lt;span class="cm"&gt;   Scenario: When downloading files using Robocopy from PowerShell you don&amp;#39;t want your&lt;/span&gt;
&lt;span class="cm"&gt;   laptop to go into sleep mode.&lt;/span&gt;
&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;   Suspend-PowerPlan -script c:\scripts\mylongrunningscript.ps1&lt;/span&gt;
&lt;span class="cm"&gt;   Run mylongrunningscript with sleep idle timeout prevented&lt;/span&gt;
&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;   Suspend-Powerplan -script c:\scripts\mylongrunningscript.ps1 -option Display -Verbose&lt;/span&gt;
&lt;span class="cm"&gt;   Run mylongrunningscript with Display idle timeout prevented and verbose messages&lt;/span&gt;
&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;  http://www.microsofttranslator.com/bv.aspx?from=ru&amp;amp;to=en&amp;amp;a=http%3A%2F%2Fsocial.technet.microsoft.com%2FForums%2Fen-US%2F1f4754cb-37bf-4e1d-a59f-ec0f1aaf9d1c%2Fsetthreadexecutionstate-powershell%3FThread%3A1f4754cb-37bf-4e1d-a59f-ec0f1aaf9d1c%3DMicrosoft.Forums.Data.Models.Discussion%26ThreadViewModel%3A1f4754cb-37bf-4e1d-a59f-ec0f1aaf9d1c%3DMicrosoft.Forums.CachedViewModels.ThreadPageViewModel%26forum%3Dscrlangru&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Suspend-Powerplan&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;CmdletBinding&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Alias&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OutputType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;Param&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="c"&gt;# Param1 help description&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                   &lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="nv"&gt;$script&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ValidateSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Away&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Display&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;System&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$option&lt;/span&gt;

    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nv"&gt;$code&lt;/span&gt;&lt;span class="p"&gt;=@&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &lt;/span&gt;
&lt;span class="s1"&gt;[DllImport(&amp;quot;kernel32.dll&amp;quot;, CharSet = CharSet.Auto,SetLastError = true)]&lt;/span&gt;
&lt;span class="s1"&gt;  public static extern void SetThreadExecutionState(uint esFlags);&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;

    &lt;span class="nv"&gt;$ste&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Add-Type&lt;/span&gt; &lt;span class="n"&gt;-memberDefinition&lt;/span&gt; &lt;span class="nv"&gt;$code&lt;/span&gt; &lt;span class="n"&gt;-name&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt; &lt;span class="n"&gt;-namespace&lt;/span&gt; &lt;span class="n"&gt;Win32&lt;/span&gt; &lt;span class="n"&gt;-passThru&lt;/span&gt; 
    &lt;span class="nv"&gt;$ES_CONTINUOUS&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[uint32]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x80000000&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;#Requests that the other EXECUTION_STATE flags set remain in effect until SetThreadExecutionState is called again with the ES_CONTINUOUS flag set and one of the other EXECUTION_STATE flags cleared.&lt;/span&gt;
    &lt;span class="nv"&gt;$ES_AWAYMODE_REQUIRED&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[uint32]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x00000040&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;#Requests Away Mode to be enabled.&lt;/span&gt;
    &lt;span class="nv"&gt;$ES_DISPLAY_REQUIRED&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[uint32]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x00000002&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;#Requests display availability (display idle timeout is prevented).&lt;/span&gt;
    &lt;span class="nv"&gt;$ES_SYSTEM_REQUIRED&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[uint32]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x00000001&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;#Requests system availability (sleep idle timeout is prevented).&lt;/span&gt;

    &lt;span class="k"&gt;Switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$option&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;Away&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ES_AWAYMODE_REQUIRED&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;Display&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ES_DISPLAY_REQUIRED&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;System&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ES_SYSTEM_REQUIRED&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;Default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ES_SYSTEM_REQUIRED&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Power Plan suspended with option: $option&amp;quot;&lt;/span&gt;

    &lt;span class="nv"&gt;$ste&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;SetThreadExecutionState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ES_CONTINUOUS&lt;/span&gt; &lt;span class="o"&gt;-bor&lt;/span&gt; &lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


    &lt;span class="c"&gt;#do something&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Executing $script&amp;quot;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$script&lt;/span&gt;

    &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Power Plan suspension ended&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$ste&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;SetThreadExecutionState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ES_CONTINUOUS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# __main__&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyInvocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InvocationName&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Suspend-Powerplan&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;press enter to terminate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When taking another look in &lt;code&gt;powercfg -requests&lt;/code&gt; after running the script, we can see it in action:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Windows\system32&amp;gt;powercfg -requests
DISPLAY:
None.

SYSTEM:
[PROCESS] \Device\HarddiskVolume2\Program Files (x86)\Steam\Steam.exe
[PROCESS] \Device\HarddiskVolume2\Windows\System32\WindowsPowerShell\v1.0\powershell.exe

AWAYMODE:
None.

EXECUTION:
None.

PERFBOOST:
None.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let me know if it works / breaks!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Windows"></category><category term="Power Management"></category><category term="Performance"></category><category term="Scripts"></category><category term="PowerShell"></category></entry><entry><title>Detecting Invalid External References in Group Policy Preferences</title><link href="https://blog.backslasher.net/gpp-external-references.html" rel="alternate"></link><published>2015-11-03T22:54:00+01:00</published><updated>2015-11-03T22:54:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-11-03:/gpp-external-references.html</id><summary type="html">&lt;h2&gt;Guest post&lt;/h2&gt;
&lt;p&gt;This is a post written by my former colleague, &lt;a href="https://il.linkedin.com/pub/ofri-sherf/108/295/6a0"&gt;Ofri Sherf&lt;/a&gt;.&lt;br&gt;
I've been bugging her to upload her script and write how it works because it sounded interesting to me.&lt;/p&gt;
&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I was asked to arrange Group Policy in one of our networks - e.g delete all â€¦&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Guest post&lt;/h2&gt;
&lt;p&gt;This is a post written by my former colleague, &lt;a href="https://il.linkedin.com/pub/ofri-sherf/108/295/6a0"&gt;Ofri Sherf&lt;/a&gt;.&lt;br&gt;
I've been bugging her to upload her script and write how it works because it sounded interesting to me.&lt;/p&gt;
&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I was asked to arrange Group Policy in one of our networks - e.g delete all unneccessary GPOs.&lt;br&gt;
That sounded like it was going to be a tedious, frustrating, I-wanna-stab-my-neck-with-a-fork kind of work, so naturally I wanted to make my job a little bit easier by scripting it.&lt;/p&gt;
&lt;p&gt;I divided my work into three stages:&lt;/p&gt;
&lt;h3&gt;1. Obvious cases&lt;/h3&gt;
&lt;p&gt;To find the following, first we need to retrieve all Group Policy Objects:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$GPOs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="n"&gt;-All&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;GUID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-GPOReport&lt;/span&gt; &lt;span class="n"&gt;-Guid&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-ReportType&lt;/span&gt; &lt;span class="n"&gt;XML&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;GPO&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I searched for GPOs (Group Policy objects) that are either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Unlinked (a GPO that has no links in the AD, so it doesn't apply anywhere):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$GPOs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LinksTo&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Empty (a GPO that contains no definition, so even if applied it contains nothing):  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$GPOs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ExtensionData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ExtensionData&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both "Computer settings" and "User settings" segments are disabled:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/gpp-external-references/disabled-example.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$GPOs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Enabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Enabled&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2. Invalid "Administrative Templates" / "Windows Settings":&lt;/h3&gt;
&lt;p&gt;Here I targeted GPOs that have bad settings in either the "Administrative Templates" or "Windows Settings" segments. I have a script for this, but it's cumbersome and not fit for release. I might publish it after I clean it up.&lt;/p&gt;
&lt;h3&gt;3. Invalid Group Policy Preferences&lt;/h3&gt;
&lt;p&gt;The same invalid settings could be found in &lt;a href="https://technet.microsoft.com/en-us/library/dn581922.aspx"&gt;Group Policy Preference&lt;/a&gt;. However, preferences don't show up properly in the XML document generated by &lt;a href="https://technet.microsoft.com/en-us/library/ee461057.aspx"&gt;&lt;code&gt;Get-GPOReport&lt;/code&gt;&lt;/a&gt;, so I didn't handle them in phase 2.&lt;br&gt;
My script solved this issue by directly checking the XML files used to define these settings in the SYSVOL.&lt;br&gt;
It produces a list of GPOs and the path to the file marking them as problematic by checking every XML and searching for something that looks like a path / AD SID, and checking it actually exists.&lt;/p&gt;
&lt;p&gt;Note that if you're using a version of powershell &amp;lt; 3, you need to add these two lines to the start of the script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Import-Module&lt;/span&gt; &lt;span class="n"&gt;ActiveDirectory&lt;/span&gt;
&lt;span class="nb"&gt;Import-Module&lt;/span&gt; &lt;span class="n"&gt;GroupPolicy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And here is the script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# This script searches for GPOs who refer to something that does not exist&lt;/span&gt;
&lt;span class="c"&gt;# Ofri Sherf&lt;/span&gt;
&lt;span class="c"&gt;# sherf.ofri@gmail.com&lt;/span&gt;

&lt;span class="c"&gt;#region Params&lt;/span&gt;
&lt;span class="c"&gt;# Domain to be checked. Defaults to the current domain&lt;/span&gt;
&lt;span class="nv"&gt;$domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADDomain&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;NetBIOSName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# FQDN of domain to be checked&lt;/span&gt;
&lt;span class="nv"&gt;$fullDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADDomain&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DNSRoot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Policy segments to check. E.g. modify to &amp;quot;Machine&amp;quot; to avoid checking the user segment&lt;/span&gt;
&lt;span class="nv"&gt;$type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Machine&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c"&gt;#endregion&lt;/span&gt;

&lt;span class="nv"&gt;$ErrorActionPreference&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SilentlyContinue&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Group Policy Preference to go over&lt;/span&gt;
&lt;span class="nv"&gt;$preferenceType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Drives&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;path=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Files&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fromPath=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Groups&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Member name=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;NetworkShares&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;path=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Shortcuts&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;targetPath=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;IniFiles&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;path=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$preferenceType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetEnumerator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;

    &lt;span class="nv"&gt;$currPreference&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;
    &lt;span class="nv"&gt;$pattern&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;

    &lt;span class="c"&gt;# Analyze segment&lt;/span&gt;
    &lt;span class="nv"&gt;$type&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="nv"&gt;$currType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
        &lt;span class="c"&gt;# Find all GPOs&lt;/span&gt;
        &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;\\&lt;/span&gt;&lt;span class="nv"&gt;$fullDomain&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sysvol&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="nv"&gt;$fullDomain&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Policies&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;GPGuid&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt; 
            &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\{|\}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;GPName&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt; 
            &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GPGuid&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="n"&gt;-Guid&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DisplayName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;Preference&lt;/span&gt; &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$currPreference&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt; &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;$GPName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;

        &lt;span class="c"&gt;# Check if GPO contains relevant GPP&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$fullDomain\sysvol\$fullDomain\Policies\$GPName\$currType\Preferences\$currPreference\$currPreference.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-Content&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$fullDomain\sysvol\$fullDomain\Policies\$GPName\$currType\Preferences\$currPreference\$currPreference.xml&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Encoding&lt;/span&gt; &lt;span class="n"&gt;UTF8&lt;/span&gt;
            &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
                &lt;span class="c"&gt;# If GPP file matches the pattern of &amp;quot;external references&amp;quot;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="nv"&gt;$pattern&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$currPreference&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;Groups&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c"&gt;# This is a SID reference. Look for it in AD&lt;/span&gt;
                            &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
                            &lt;span class="nv"&gt;$group&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$domain*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                                &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$domain\\&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
                                &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADUser&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;
                                &lt;span class="nv"&gt;$group&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADGroup&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;
                                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$group&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                                    &lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,$name&amp;quot;&lt;/span&gt;
                                &lt;span class="p"&gt;}&lt;/span&gt;
                                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;Shortcuts&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c"&gt;# This is a shortcut. It can point to a URL (http://)&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;targetPath=&amp;quot;(http.+?)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                                &lt;span class="nv"&gt;$web&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;-UseDefaultCredentials&lt;/span&gt;
                                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$web&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                                    &lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                &lt;span class="p"&gt;}&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt;
                            &lt;span class="c"&gt;# If it&amp;#39;s not HTTP, fall-through&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="c"&gt;# This is a path&lt;/span&gt;
                            &lt;span class="c"&gt;# Check if the path is a network path&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                                &lt;span class="c"&gt;# Check if path is accessible&lt;/span&gt;
                                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt; &lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])){&lt;/span&gt;
                                    &lt;span class="c"&gt;# Check if path exists yet inaccessible&lt;/span&gt;
                                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nv"&gt;$Error&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Access is denied&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                                        &lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                    &lt;span class="p"&gt;}&lt;/span&gt;
                                &lt;span class="p"&gt;}&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;

                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c"&gt;# If the GPO has invalid settings, pipe it out&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="Group Policy"></category><category term="Powershell"></category></entry><entry><title>Disabling "generate Publisher Evidence" using scripts</title><link href="https://blog.backslasher.net/disabling-generate-publisher-evidence.html" rel="alternate"></link><published>2014-01-28T10:35:00+01:00</published><updated>2014-01-28T10:35:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-28:/disabling-generate-publisher-evidence.html</id><summary type="html">&lt;p&gt;I found the script we were using to disable authenticode on our machines, &lt;a href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html"&gt;a feature that causes great suffering&lt;/a&gt; (and dll-loading-delays) to workstations not connected to the Internet when using various Microsoft products (i.e. SQL Management Studio, SharePoint).&lt;br&gt;
Note the line at the end - the script tries to find â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I found the script we were using to disable authenticode on our machines, &lt;a href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html"&gt;a feature that causes great suffering&lt;/a&gt; (and dll-loading-delays) to workstations not connected to the Internet when using various Microsoft products (i.e. SQL Management Studio, SharePoint).&lt;br&gt;
Note the line at the end - the script tries to find all &lt;code&gt;machine.config&lt;/code&gt;
files on the local machine, but you might want to modify other files
(remote machines, only version 4 etc.).&lt;br&gt;
Also, this script modifies windows configuration files, so make sure to
test critical systems afterwards (perhaps reboot the
server).&lt;a name="more"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Modify-Config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$backupDir&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Loading XML $filename&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;$doc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;xml&lt;/span&gt;
 &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Locating parent node (/configuration/runtime)&amp;#39;&lt;/span&gt;
 &lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectSingleNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/configuration/runtime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Non-default xml. Stopping&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Locating child node (generatePublisherEvidence)&amp;#39;&lt;/span&gt;
  &lt;span class="nv"&gt;$child&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generatePublisherEvidence&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Creating child node&amp;#39;&lt;/span&gt;
   &lt;span class="nv"&gt;$child&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;generatePublisherEvidence&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AppendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Checking attribute &amp;quot;enabled&amp;quot;&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Creating node &amp;quot;enabled&amp;quot;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$att&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;enabled&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$att&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Setting &amp;quot;enabled&amp;quot; to &amp;quot;false&amp;quot;&amp;#39;&lt;/span&gt;
   &lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;

   &lt;span class="c"&gt;# If modified, save&lt;/span&gt;
   &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Backing up file&amp;#39;&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$backupDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;cp &lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="n"&gt;-dest&lt;/span&gt; &lt;span class="nv"&gt;$backupDir&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Saving file&amp;#39;&lt;/span&gt;
   &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Framework&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Framework64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$env:windir\Microsoft.NET\$_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;test-path&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;v*&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;fullname&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$_\CONFIG\machine.config&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;test-path&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="n"&gt;Modify-Config&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="Windows"></category><category term=".NET framework"></category><category term="XML"></category><category term="PowerShell"></category></entry><entry><title>Finding Accounts Trusted for Delegation</title><link href="https://blog.backslasher.net/finding-accounts-trusted-for-delegation.html" rel="alternate"></link><published>2014-01-23T13:10:00+01:00</published><updated>2014-01-23T13:10:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-23:/finding-accounts-trusted-for-delegation.html</id><summary type="html">&lt;p&gt;As part of a security audit, I was asked to help in finding all accounts
marked with "Trusted for Delegation"  &lt;/p&gt;
&lt;h3&gt;What is "Trust for Delegation"&lt;/h3&gt;
&lt;p&gt;You can try reading the &lt;a href="http://technet.microsoft.com/en-us/library/cc739740%28v=ws.10%29.aspx"&gt;TechNet Article&lt;/a&gt;,
but in short - delegation (also known as kerberos double-hop) is
allowing a service to impersonate clients in order â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;As part of a security audit, I was asked to help in finding all accounts
marked with "Trusted for Delegation"  &lt;/p&gt;
&lt;h3&gt;What is "Trust for Delegation"&lt;/h3&gt;
&lt;p&gt;You can try reading the &lt;a href="http://technet.microsoft.com/en-us/library/cc739740%28v=ws.10%29.aspx"&gt;TechNet Article&lt;/a&gt;,
but in short - delegation (also known as kerberos double-hop) is
allowing a service to impersonate clients in order to access other
services, e.g. allowing an ASP.NET site to pull CRM records via CRM web
service, using the client's credentials (and so showing only records
relevant to the client).&lt;a name="more"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;The Risk&lt;/h3&gt;
&lt;p&gt;Accounts that are trusted for delegation can access other services in
the domain (e.g. Active Directory, Exchange, in-house software that uses
kerberos authentication, external software using ADFS) without the
user's explicit action or consent (sometimes without him even accessing
the system, see next paragraph) and without any limits or indication
that it's not the original user.&lt;br&gt;
Some configurations also allow the delegate access to any service in the
domain (as opposed to specified ones) or giving the delegate access
without the user actually accessing the delegate in the first place
(read on).&lt;br&gt;
To sum it up, delegation must be used sparingly due to its dangerous
nature.  &lt;/p&gt;
&lt;h3&gt;Technical Implementation and Quirks&lt;/h3&gt;
&lt;p&gt;Delegation is all about an application getting a kerberos TGS (Ticket
Granting Service) for another resource, using the client's identity
(allowing the server to impersonate the client for that resource).&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/finding-accounts-trusted-for-delegation/kerbDelegationDialog.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;Delegation configuration is saved like that:  &lt;/p&gt;
&lt;style type="text/css"&gt;
.borderline table td,th { border: 1px solid #000; }
&lt;/style&gt;
&lt;div class="borderline"&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Configuration&lt;/th&gt;
&lt;th&gt;UserAccountControl &amp;amp; 0x80000 (TRUSTED_FOR_DELEGATION)&lt;/th&gt;
&lt;th&gt;UserAccountControl &amp;amp; 0x100000 (TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION)&lt;/th&gt;
&lt;th&gt;msDS-AllowedToDelegateTo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Do not trust this user for delegation&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Trust this user for delegation to any service (Kerberos only)&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Trust this user for delegation for specified services only (Kerberos protocol)&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V (List of SPNs)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Trust this user for delegation for specified services only (Any authentication protocol)&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;V (List of SPNs)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;When "Any protocol" is enabled&lt;/strong&gt;, services don't need to present an existing kerberos TGS, but can fabricate one using only the user's id. (Source: &lt;a href="http://msdn.microsoft.com/en-us/library/ff650469.aspx"&gt;Technet&lt;/a&gt;)&lt;br&gt;
   This method is designed to accommodate services that don't use kerberos authentication (e.g. websites that use forms authentication), but has a very serious implication - accounts allowed to do so don't have to present any proof that a specific user has even accessed the system - they can create any TGS out of thin air.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When constrained to specific services&lt;/strong&gt;, the resulting TGS is itself delegation-constrained to those services, so to allow a "triple hop" like this:&lt;br&gt;
&lt;code&gt;S1 &amp;gt; S2 &amp;gt; S3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;S1&lt;/code&gt; must be configured either to allow delegation to &lt;code&gt;any service&lt;/code&gt; or to &lt;code&gt;S2&lt;/code&gt; &lt;strong&gt;AND&lt;/strong&gt; &lt;code&gt;S3&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;For really sensitive accounts&lt;/strong&gt; (such as domain admins), one can mark "Account is sensitive and cannot be delegated" to prevent AD allowing any form of delegation with this account. This account will suffer from reduced functionality on applications requiring delegation to work (like the site described earlier).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Finding Allowed Accounts&lt;/h3&gt;
&lt;p&gt;Although PowerShell's module for Active Directory has some calculated variables for delegation (e.g. &lt;code&gt;TrustedForDelegation&lt;/code&gt;), they can't be used to filter &lt;code&gt;ADObject&lt;/code&gt; (only &lt;code&gt;ADUSer&lt;/code&gt; or &lt;code&gt;ADComputer&lt;/code&gt;), so I built my own script
to find trusted-for-delegation accounts:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ADObject&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="n"&gt;msDS-AllowedToDelegateTo&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserAccountControl&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="n"&gt;0x0080000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserAccountControl&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="n"&gt;0x1000000&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;samAccountName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;msDS-AllowedToBeDelegateTo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;servicePrincipalName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;userAccountControl&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;DistinguishedName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ObjectClass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;samAccountName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;servicePrincipalName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DelegationStatus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserAccountControl&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="n"&gt;0x80000&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AllServices&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SpecificServices&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}},&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AllowedProtocols&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserAccountControl&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="n"&gt;0x1000000&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Any&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Kerberos&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}},&lt;/span&gt;
&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DestinationServices&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msDS-AllowedToDelegateTo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Security"></category><category term="Scripts"></category><category term="Windows"></category><category term="Delegation"></category><category term="PowerShell"></category><category term="One-Liner"></category><category term="Active Directory"></category></entry><entry><title>Some PowerShell Snippets for Network Scanning</title><link href="https://blog.backslasher.net/some-powershell-snippets-for-network-scanning.html" rel="alternate"></link><published>2014-01-21T13:11:00+01:00</published><updated>2014-01-21T13:11:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-21:/some-powershell-snippets-for-network-scanning.html</id><summary type="html">&lt;p&gt;I recently had to improvise some network scanning using PowerShell. The
security guys got somewhat excited, so I decided to upload these
snippets.&lt;br&gt;
I think all of them require PowerShell v2+  &lt;/p&gt;
&lt;h3&gt;Checking ping for one IP address&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Test-Connection&lt;/span&gt; &lt;span class="nv"&gt;$target&lt;/span&gt; &lt;span class="n"&gt;-count&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt; &lt;span class="n"&gt;-quiet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Checking if a TCP port is listening&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I recently had to improvise some network scanning using PowerShell. The
security guys got somewhat excited, so I decided to upload these
snippets.&lt;br&gt;
I think all of them require PowerShell v2+  &lt;/p&gt;
&lt;h3&gt;Checking ping for one IP address&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Test-Connection&lt;/span&gt; &lt;span class="nv"&gt;$target&lt;/span&gt; &lt;span class="n"&gt;-count&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt; &lt;span class="n"&gt;-quiet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Checking if a TCP port is listening&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;TryOpen-TCPPort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$port&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$socket&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sockets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TcpClient&lt;/span&gt;
  &lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Scanning a list of addresses for predefined ports&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Map-Ports&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$targets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="no"&gt;[int[]]&lt;/span&gt;&lt;span class="nv"&gt;$tcpPorts&lt;/span&gt;
 &lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="nv"&gt;$targets&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$target&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IP&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HasPing&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="nv"&gt;$tcpPorts&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;TCP$_&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$ip&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$ip&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="no"&gt;[System.Net.Dns]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$target&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;AddressList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;IPAddressToString&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="no"&gt;[Net.Sockets.SocketException]&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IP&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$ip&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ip&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nv"&gt;$ret&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HasPing&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Test-Connection&lt;/span&gt; &lt;span class="nv"&gt;$ip&lt;/span&gt; &lt;span class="n"&gt;-Quiet&lt;/span&gt; &lt;span class="n"&gt;-Count&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;$tcpPorts&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$ret&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TCP$_&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TryOpen-TCPPort&lt;/span&gt; &lt;span class="nv"&gt;$ip&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Scanning some subnet for web servers&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Map-Ports&lt;/span&gt; &lt;span class="n"&gt;-targets&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;254&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.0.$_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-tcpPorts&lt;/span&gt; &lt;span class="n"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;443&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Scanning my immediate subnet for common MS ports&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# Fabricate IP Addresses&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Fabricate-IPAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$header&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nv"&gt;$queue&lt;/span&gt;&lt;span class="p"&gt;=@(&lt;/span&gt;&lt;span class="nv"&gt;$header&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;--){&lt;/span&gt;
  &lt;span class="nv"&gt;$newQueue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$queue&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$q&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;254&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$q.$_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
  &lt;span class="nv"&gt;$queue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$newQueue&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nv"&gt;$queue&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Scan Immediate Addresses&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Scan-MySubnet&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$myIps&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;win32_networkAdapterConfiguration&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IPEnabled=True&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IPAddress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;++){&lt;/span&gt;
   &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[System.Net.IPAddress]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IPAddress&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;])}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Subnet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[System.Net.IPAddress]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IPSubnet&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;])}}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$myIPs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
  &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;# Worst range calculation ever, but it works for standard subnets&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Subnet&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="s1"&gt;&amp;#39;225.255.255.0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="s1"&gt;&amp;#39;225.255.0.0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="s1"&gt;&amp;#39;225.0.0.0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Too lazy to calculate range&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$header&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetAddressBytes&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;..(&lt;/span&gt;&lt;span class="n"&gt;4&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt; &lt;span class="n"&gt;-join&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;Fabricate-IPAddress&lt;/span&gt; &lt;span class="nv"&gt;$header&lt;/span&gt; &lt;span class="nv"&gt;$levels&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;Map-Ports&lt;/span&gt; &lt;span class="n"&gt;-targets&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Scan-MySubnet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-tcpPorts&lt;/span&gt; &lt;span class="n"&gt;135&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;445&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Testing a web page on a server&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Get-WebResponseCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[switch]&lt;/span&gt;&lt;span class="nv"&gt;$UseDefaultCredentials&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nv"&gt;$req&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.Net.WebRequest]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseDefaultCredentials&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$UseDefaultCredentials&lt;/span&gt;
 &lt;span class="c"&gt;# Avoid downloading the whole page&lt;/span&gt;
 &lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HEAD&amp;#39;&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetResponse&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
 &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="no"&gt;[System.Net.WebException]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;{0}: {1}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusDescription&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Testing common webpages on a server&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Test-WebPages&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$targets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="no"&gt;[uri[]]&lt;/span&gt;&lt;span class="nv"&gt;$paths&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$schemes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="no"&gt;[switch]&lt;/span&gt;&lt;span class="nv"&gt;$UseDefaultCredentials&lt;/span&gt;
 &lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="nv"&gt;$targets&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
  &lt;span class="nb"&gt;Write-Progress&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Testing Servers&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Id&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
  &lt;span class="nv"&gt;$target&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
  &lt;span class="nv"&gt;$schemes&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
   &lt;span class="nb"&gt;Write-Progress&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Testing Schemes&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Id&lt;/span&gt; &lt;span class="n"&gt;2&lt;/span&gt;
   &lt;span class="nv"&gt;$scheme&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
   &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$new&lt;/span&gt;&lt;span class="n"&gt;-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
   &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$target&lt;/span&gt;
   &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Scheme&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$scheme&lt;/span&gt;
   &lt;span class="nv"&gt;$paths&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="nv"&gt;$pu&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${scheme}://$target&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;$paths&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$u&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="nv"&gt;$pu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Progress&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Testing Url&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$u&lt;/span&gt; &lt;span class="n"&gt;-Id&lt;/span&gt; &lt;span class="n"&gt;3&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-WebResponseCode&lt;/span&gt; &lt;span class="nv"&gt;$u&lt;/span&gt; &lt;span class="n"&gt;-UseDefaultCredentials&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$UseDefaultCredentials&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$ret&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;Test-WebPages&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SharePointDev&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ExchangeCAS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AnotherServer&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-paths&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/owa&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/sites&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-schemes&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-UseDefaultCredentials&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="TCP"></category><category term="Security"></category><category term="HTTP"></category><category term="Scripts"></category><category term="Windows"></category><category term="PowerShell"></category><category term="One-Liner"></category></entry><entry><title>List all Group Policy Extensions Registered</title><link href="https://blog.backslasher.net/list-all-group-policy-extensions-registered.html" rel="alternate"></link><published>2014-01-09T20:25:00+01:00</published><updated>2014-01-09T20:25:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-09:/list-all-group-policy-extensions-registered.html</id><summary type="html">&lt;p&gt;I use this script to see all GP extensions that my computer can
process:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\GPExtensions&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Guid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pschildname&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DllName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DllName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ProcessWhenNoChanges&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={!&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NoGPOListChanges&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IsUserPolicy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I use this script to see all GP extensions that my computer can
process:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\GPExtensions&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Guid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pschildname&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DllName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DllName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ProcessWhenNoChanges&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={!&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NoGPOListChanges&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IsUserPolicy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={!&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NoUserPolicy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Group Policy Extensions are the parts that apply the information found in Group Policy objects to the computer / user.&lt;br&gt;
While most settings are
done via "Administrative Templates", there are other extensions (48
counted on my Windows 8 workstation).&lt;br&gt;
Each extension registers a dll (the code that reads data from the GPO
and actually applies it), a GUID, a friendly name (some don't) and
instructions whether it's also a user policy (like "Deployed Printers",
unlike "IPsec") and if it wants to process the Group Policy even if no
settings were changed since last time ("Folder Redirection" does,
"Internet Explorer Branding" doesn't).&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; The last two values are stored as inversions (e.g.
&lt;code&gt;NoUserPolicy&lt;/code&gt;) but I "fixed" them when parsing the key.   &lt;/p&gt;
&lt;p&gt;Further reading:&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/aa375118%28v=vs.85%29.aspx"&gt;Writing a Group Policy Extension&lt;/a&gt;
(not our case, but still has some useful data)&lt;/p&gt;
&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Scripts"></category><category term="Windows"></category><category term="PowerShell"></category><category term="Registry"></category><category term="One-Liner"></category><category term="Active Directory"></category></entry><entry><title>setspn Duplicates and Case Sensitivity</title><link href="https://blog.backslasher.net/setspn-duplicates-and-case-sensitivity.html" rel="alternate"></link><published>2014-01-07T17:06:00+01:00</published><updated>2014-01-07T17:06:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-07:/setspn-duplicates-and-case-sensitivity.html</id><summary type="html">&lt;p&gt;Today I found out that the command I use to find duplicate SPNs, &lt;code&gt;setspn -x&lt;/code&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/setspn-duplicates-and-case-sensitivity/SetspnX.png"&gt;&lt;br&gt;
is case sensitive, meaning that the following SPNs don't count as
duplicates:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;HOST/bla
HOST/BLA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This makes sense when using UNIX systems for TGS creation.&lt;br&gt;
However, Active Directory Domain Controllers, being Windows systems, are â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I found out that the command I use to find duplicate SPNs, &lt;code&gt;setspn -x&lt;/code&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/setspn-duplicates-and-case-sensitivity/SetspnX.png"&gt;&lt;br&gt;
is case sensitive, meaning that the following SPNs don't count as
duplicates:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;HOST/bla
HOST/BLA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This makes sense when using UNIX systems for TGS creation.&lt;br&gt;
However, Active Directory Domain Controllers, being Windows systems, are
case-insensitive and don't differentiate between the two. You could even
get &lt;a href="http://technet.microsoft.com/en-us/library/cc733945%28v=ws.10%29.aspx"&gt;event 11&lt;/a&gt;
because of such duplication.&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/setspn-duplicates-and-case-sensitivity/Event11.png"&gt;&lt;br&gt;
Since &lt;code&gt;setspn&lt;/code&gt; didn't work, I wrote a few lines of my own that search the
current domain for duplicate SPNs.&lt;br&gt;
Since PowerShell can be made case sensitive, it can find different-cased duplicate SPNs easily.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ADObject&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;serviceprincipalname&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;serviceprincipalname&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DistinguishedName&lt;/span&gt;
    &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServicePrincipalName&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SPN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}},@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;group &lt;/span&gt;&lt;span class="n"&gt;SPN&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SPN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;}},@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Group &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DN&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Images from &lt;a href="http://blogs.technet.com/b/sharepoint_foxhole/archive/2012/02/03/kerberos-fatfingeritis-how-to-set-your-kerby-spns-the-safe-way.aspx"&gt;SharePoint FoxHole&lt;/a&gt;&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Security"></category><category term="Scripts"></category><category term="Windows"></category><category term="Power Management"></category><category term="One-Liner"></category><category term="Event Log"></category><category term="Active Directory"></category></entry><entry><title>Backing up BitLocker to ActiveDirectory - My Additions</title><link href="https://blog.backslasher.net/backing-up-bitlocker-to-activedirectory.html" rel="alternate"></link><published>2013-11-25T20:14:00+01:00</published><updated>2013-11-25T20:14:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-11-25:/backing-up-bitlocker-to-activedirectory.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;If you thought about deploying BitLocker in your enterprise, you probably came across the recovery issue - if you lose the encrypting smart card, corrupt the key file, forget the password or the TPM breaks down - how can you access the data?&lt;br&gt;
For small organizations, manual recovery can be â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;If you thought about deploying BitLocker in your enterprise, you probably came across the recovery issue - if you lose the encrypting smart card, corrupt the key file, forget the password or the TPM breaks down - how can you access the data?&lt;br&gt;
For small organizations, manual recovery can be enough - when bitlocker is enabled through the UI (or via cli with &lt;code&gt;RecoveryPasswordProtector&lt;/code&gt;), bitlocker keeps one password numeric, like &lt;code&gt;123456-123456-123456-123456-123456-123456-123456-123456&lt;/code&gt;, and urges you to save this password externally, so you can use it in
emergencies.  &lt;/p&gt;
&lt;p&gt;For large organizations, documenting these keys (and making sure they're kept safe) is difficult.&lt;br&gt;
Because such organizations are probably good with keeping their primary store of confidential data (the Active Directory) safe, it makes sense to keep the BitLocker recovery passwords there. It's also available out-of-the-box.  &lt;/p&gt;
&lt;p&gt;There is a &lt;a href="http://technet.microsoft.com/en-us/library/cc766015%28v=ws.10%29.aspx"&gt;TechNet article&lt;/a&gt; about this, but I think my steps are better:  &lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;h4&gt;1. Extend the AD schema&lt;/h4&gt;
&lt;p&gt;Only needed if you don't have 2008+ DCs, because their schema includes the required objects  &lt;/p&gt;
&lt;h4&gt;2. Set AD permissions&lt;/h4&gt;
&lt;p&gt;Recovery passwords are saved as objects inside the computer objects, so you have to give the computers permissions to create such objects.&lt;br&gt;
I think that in 2008+ domains they're already present, but it you might want to add them anyway, to make sure  &lt;/p&gt;
&lt;h4&gt;3. Set GP to replicate to AD&lt;/h4&gt;
&lt;p&gt;The GP location is &lt;code&gt;Computer Configuration&amp;gt;Administrative Templates&amp;gt;Windows Components&amp;gt;BitLocker Drive Encryption&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;For NT6&lt;/strong&gt; (Server 2008 / Vista), the setting is global and called "Store BitLocker recovery information in Active Directory Domain Services":&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/backing-up-bitlocker-to-activedirectory/BitLockerGP1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For newer versions&lt;/strong&gt;, there are different settings for OS drives ("C:"), fixed data drives (additional HDs) and removable data drives (e.g. Disk-On-Keys), each under the relevant folder and called "Choose how BitLocker-protected XXX drives can be recovered":&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/backing-up-bitlocker-to-activedirectory/BitLockerGP2.png"&gt;&lt;/p&gt;
&lt;p&gt;Both GPs have settings in common:&lt;br&gt;
&lt;strong&gt;Passwords or Packages?&lt;/strong&gt; Each drive is actually encrypted with a long key which in turn is encrypted by the password. This negates the security vulnerabilities of encrypting large amounts of data with human-memorable passwords. As long as the drive is healthy, the password suffices to read the data because the key can be decrypted. But if the drive is damaged and the part containing the key can't be read, the password is useless.&lt;br&gt;
Storing the entire key package in AD allows reading data even from a key-damaged drive.&lt;br&gt;
On the other hand, storing only the password is safer (since the password can be easily changed without re-encrypting the disk, if the AD is compromised).&lt;br&gt;
&lt;strong&gt;No Encryption Before Backup Completion:&lt;/strong&gt; AD backup is among the first things that happen during a drive encryption (right after password and key package generation). Both GPs have a checkbox to stop the encryption process if the backup fails, saving the sysadmin (you!) from one day finding an encrypted drive with no valid AD-backed key.  &lt;/p&gt;
&lt;h4&gt;4. Trigger Backup&lt;/h4&gt;
&lt;p&gt;Backups to AD only happen when BitLocker passwords are modified (so if some drive was encrypted before you completed the previous steps, the container won't be backed up). To trigger backups manually, use &lt;code&gt;manage-bde&lt;/code&gt;, as explained &lt;a href="http://blogs.technet.com/b/askcore/archive/2010/04/06/how-to-backup-recovery-information-in-ad-after-bitlocker-is-turned-on-in-windows-7.aspx"&gt;here&lt;/a&gt;.&lt;br&gt;
If you're on Windows 8 and want a simple script to backup whatever key you have, here:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$drive&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-BitLockerVolume&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtector&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtectorType&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;RecoveryPassword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$drive&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;KeyProtector&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtectorType&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;RecoveryPassword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
&lt;span class="nb"&gt;Backup-BitLockerKeyProtector&lt;/span&gt; &lt;span class="nv"&gt;$drive&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MountPoint&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtectorId&lt;/span&gt;
&lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Backing up drive $drive, key &lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtectorId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;, password &lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecoveryPassword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;5. Test Search:&lt;/h4&gt;
&lt;p&gt;Use the command "Find BitLocker recovery password" under &lt;code&gt;dsa.msc&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/backing-up-bitlocker-to-activedirectory/BitLockerAD1.gif"&gt;&lt;/p&gt;
&lt;p&gt;Then enter the first "box" from the recovery guid, and make sure the
password is found:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/backing-up-bitlocker-to-activedirectory/BitLockerAD2.png"&gt;&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="BitLocker"></category><category term="Scripts"></category><category term="Windows"></category><category term="FileSystem"></category><category term="PowerShell"></category><category term="Ramblings"></category><category term="Active Directory"></category></entry><entry><title>Adding SSL to a SharePoint 2010 Web Application, the Right Way</title><link href="https://blog.backslasher.net/adding-ssl-to-sharepoint-2010-web.html" rel="alternate"></link><published>2013-11-11T18:52:00+01:00</published><updated>2013-11-11T18:52:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-11-11:/adding-ssl-to-sharepoint-2010-web.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I haven't touched SharePoint in a while, but I've been asked by a friend to help him do something "the right way".&lt;br&gt;
We were looking for a way to add an HTTPS binding to an existing SharePoint 2010 site. Google is full of ways of doing that, but â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I haven't touched SharePoint in a while, but I've been asked by a friend to help him do something "the right way".&lt;br&gt;
We were looking for a way to add an HTTPS binding to an existing SharePoint 2010 site. Google is full of ways of doing that, but they
involve adding another binding manually via IIS, like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/adding-ssl-to-sharepoint-2010-web/SharePointSSL1.png"&gt;&lt;/p&gt;
&lt;p&gt;Everyone who's familiar with SharePoint (and especially with cleaning after poor SharePoint infrastructure work) can see the issue immediately - even if this method works (and it might, with some added configuration) it will only apply to the current SharePoint front-end server - it won't be reflected in:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Other servers in the farm&lt;/li&gt;
&lt;li&gt;This server if it's rejoined (as a troubleshooting measure)&lt;/li&gt;
&lt;li&gt;Future servers added to the farm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This happens because SharePoint is not informed of the new
configuration. The right way is through Web Application Extension  &lt;/p&gt;
&lt;h3&gt;What is Web Application Extension&lt;/h3&gt;
&lt;p&gt;Having more than one binding (a port the IIS site is listening to) is new to IIS 7 (until then, each site had one HTTP port and one HTTPS port). Since SharePoint 2010 is in this mindset (maybe left-overs from 2007), each SharePoint web application is contained in one IIS site, which has only one port.&lt;br&gt;
However, an administrator can "extend" a web application to a child-web application, allowing the same SharePoint sites to be served using different authentication mechanisms, ports etc.&lt;br&gt;
More about extending &lt;a href="http://technet.microsoft.com/en-us/library/cc261698%28v=office.14%29.aspx"&gt;here.&lt;/a&gt;&lt;br&gt;
Basically, you supply SharePoint with information about the new Web Application you want (name, port, SSL, authentication etc.) and the zone it's capturing (for &lt;a href="http://technet.microsoft.com/en-us/library/cc261814%28v=office.12%29.aspx"&gt;alternate access
mappings&lt;/a&gt;
- other URLs that the application might be viewed from).  &lt;/p&gt;
&lt;h3&gt;Via Central Administration (GUI):&lt;/h3&gt;
&lt;p&gt;Open "Web Applications Management" and select the Web Application you wish to extend  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/adding-ssl-to-sharepoint-2010-web/SharePointSSL2.png"&gt;&lt;/p&gt;
&lt;p&gt;Hit "Extend" (under "Contribute") and fill the form to match the configuration of the &lt;strong&gt;new&lt;/strong&gt; web application you wish to create. If you've used alternate access mappings before with this web application, make sure not to choose a zone you didn't use already (if you're not familiar with this term, you're probably OK with using "Intranet")  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/adding-ssl-to-sharepoint-2010-web/SharePointSSL3.png"&gt;&lt;/p&gt;
&lt;p&gt;Make sure the IIS site has been created. If you did choose SSL, you probably want to configure the certificate.&lt;br&gt;
Unfortunately, this is done via IIS console (and has to be repeated for every server).&lt;br&gt;
Open IIS console, find your new site and select "bindings". Choose the only binding there, select "edit" and choose your favorite certificate.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/adding-ssl-to-sharepoint-2010-web/SharePointSSL4.png"&gt;&lt;/p&gt;
&lt;p&gt;Make sure everything works!  &lt;/p&gt;
&lt;h3&gt;Via PowerShell:&lt;/h3&gt;
&lt;p&gt;It's much quicker and even included in the official examples.&lt;br&gt;
Straight from the &lt;a href="http://technet.microsoft.com/en-us/library/ff607551%28v=office.14%29.aspx"&gt;Snap-in's documentation&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-SPWebApplication&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://sitename&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;New-SPWebApplicationExtension&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ExtranetSite&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-SecureSocketsLayer&lt;/span&gt; &lt;span class="n"&gt;-Zone&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Extranet&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-URL&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://extranet.sitename.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;"This example extends the given Web application at http://sitename to
the Extranet zone for SSL use."&lt;br&gt;
You still have to configure the SSL certificate and make sure everything works.   &lt;/p&gt;
&lt;h3&gt;Undoing&lt;/h3&gt;
&lt;p&gt;To reverse the process, see &lt;a href="http://technet.microsoft.com/en-us/library/cc288561%28v=office.14%29.aspx"&gt;"Unextend a Web application"&lt;/a&gt; for both GUI and PowerShell methods.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="HTTP"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="IIS"></category><category term="PowerShell"></category><category term="One-Liner"></category></entry><entry><title>Using Remote Desktop Client without Network Level Authentication</title><link href="https://blog.backslasher.net/using-remote-desktop-client-without-network-level-authentication.html" rel="alternate"></link><published>2013-11-11T18:07:00+01:00</published><updated>2013-11-11T18:07:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-11-11:/using-remote-desktop-client-without-network-level-authentication.html</id><summary type="html">&lt;p&gt;Whenever I use Remote Desktop to connect to an NT6+ (Windows Vista /
Windows Server 2008 and later) machine, I use Network Level
Authentication, meaning that authentication with the server is performed
before session is created (contrary to first connecting to the server
and using its GUI to enter the credentials â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Whenever I use Remote Desktop to connect to an NT6+ (Windows Vista /
Windows Server 2008 and later) machine, I use Network Level
Authentication, meaning that authentication with the server is performed
before session is created (contrary to first connecting to the server
and using its GUI to enter the credentials). Usually this is a good
behavior, saving me from man-in-the-middle attacks.&lt;br&gt;
However, sometimes I wish to disable it at the client level, usually for
troubleshooting.&lt;br&gt;
Turns out it's not that easy. One can mandate NLA by using the
&lt;code&gt;Advanced&lt;/code&gt; tab, under &lt;code&gt;Server Authentication&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/using-remote-desktop-client-without-network-level-authentication/RDPwithoutNLA1.png"&gt;&lt;/p&gt;
&lt;p&gt;but in order to avoid using it completely, you have to save your
connection as an RDP file using "Save As":  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/using-remote-desktop-client-without-network-level-authentication/RDPwithoutNLA2.png"&gt;&lt;/p&gt;
&lt;p&gt;And then edit the file using notepad and add the line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;enablecredsspsupport:i:0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Sources&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://technet.microsoft.com/en-us/library/ff393716%28v=ws.10%29.aspx"&gt;http://technet.microsoft.com/en-us/library/ff393716%28v=ws.10%29.aspx&lt;/a&gt;&lt;br&gt;
&lt;a href="http://support.microsoft.com/kb/941641"&gt;http://support.microsoft.com/kb/941641&lt;/a&gt;&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Windows"></category><category term="Terminal Server"></category></entry><entry><title>Parsing Event Log Subscription Runtime Status using PowerShell and Regex</title><link href="https://blog.backslasher.net/parsing-event-log-subscription-runtime-status.html" rel="alternate"></link><published>2013-10-12T16:00:00+02:00</published><updated>2013-10-12T16:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-10-12:/parsing-event-log-subscription-runtime-status.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;Since Event Log Subscription doesn't have a module or a .NET class,
interacting with its settings and status has to be done either via UI or
the command line utility, &lt;code&gt;wecutil.exe&lt;/code&gt;&lt;br&gt;
I was especially interested in getting the computers runtime status, to
see which machines are failing â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;Since Event Log Subscription doesn't have a module or a .NET class,
interacting with its settings and status has to be done either via UI or
the command line utility, &lt;code&gt;wecutil.exe&lt;/code&gt;&lt;br&gt;
I was especially interested in getting the computers runtime status, to
see which machines are failing (and why).&lt;br&gt;
Letâ€™s look at the output generated by &lt;code&gt;wecutil gr&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/parsing-event-log-subscription-runtime/WecutilOutput.png"&gt;&lt;/p&gt;
&lt;p&gt;As we can see, every server's status is represented by multiple lines,
which rules out easy one-line-at-a-time parsing.&lt;br&gt;
Since Wecutil has no script-friendly output (e.g. CSV), I had to use multiline regex parsing.&lt;br&gt;
This is done by joining the lines using &lt;code&gt;`n&lt;/code&gt; (since PowerShell returns
an array of rows rather than the complete string), using the .NET class
&lt;code&gt;Regex&lt;/code&gt; (&lt;a href="http://msdn.microsoft.com/en-us/library/system.text.regularexpressions.regex.aspx"&gt;System.Text.RegularExpressions.Regex&lt;/a&gt;)
and creating a complicated regex pattern to parse by.&lt;br&gt;
My full script also supports remoting (using
&lt;a href="http://technet.microsoft.com/en-us/library/hh849719.aspx"&gt;Invoke-Command&lt;/a&gt;)
and parsing all of the fields into meaningful objects (e.g. extracting
the error messages out of the XML).&lt;br&gt;
The really interseting part is the regex pattern, especially these
parts:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nonecapturing groups:&lt;/strong&gt; Using &lt;code&gt;(?:)&lt;/code&gt; means the group isn't kept for
    data extraction&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Positive lookbehind:&lt;/strong&gt; both the beginning and the end of my string
    contain line-breaks, so I had to use lookbehind &lt;code&gt;(?\&amp;lt;=)&lt;/code&gt; or lookahead
    &lt;code&gt;(?=)&lt;/code&gt; (or both) groups to avoid "competition" for the same line-break
    between two close matches.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Capturing ALL characters:&lt;/strong&gt; apperantly, &lt;code&gt;.&lt;/code&gt; captures every
    character except &lt;code&gt;\n&lt;/code&gt; (newline) so &lt;code&gt;(?:.|\\n)&lt;/code&gt; will match every
    character. Although this difference isn't visible when dealing with
    single line expressions (since you don't encounter line breaks),
    it's vital when handling multiline ones.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optional segments:&lt;/strong&gt; The fields &lt;code&gt;ErrorMessage&lt;/code&gt;, &lt;code&gt;ErrorTime&lt;/code&gt; and
    &lt;code&gt;NextRetryTime&lt;/code&gt; only appear when &lt;code&gt;LastError&lt;/code&gt; isn't 0, so we can't
    mandate them in the pattern. On the other hand, we do want to
    capture them when they're present. Surrounding them all with
    &lt;code&gt;(?:&lt;/code&gt;text&lt;code&gt;)?&lt;/code&gt; will ensure that the entire expression won't fall if
    they're not present but populate the right capturing groups if they
    are.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reaching the real end:&lt;/strong&gt; The last line isn't terminated with a
    newline but rather with End-Of-String, so our string ends with
    &lt;code&gt;(?:\n|$)&lt;/code&gt; to match either.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;The Script&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$subscriptionName&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$wecUtil&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="n"&gt;wecutil&lt;/span&gt; &lt;span class="n"&gt;gr&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="nv"&gt;$splatTable&lt;/span&gt;&lt;span class="p"&gt;=@{}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$computeRName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$splatTable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ComputerName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]=&lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$in&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Invoke-Command&lt;/span&gt; &lt;span class="nv"&gt;@splatTable&lt;/span&gt; &lt;span class="nv"&gt;$wecUtil&lt;/span&gt; &lt;span class="n"&gt;-ArgumentList&lt;/span&gt; &lt;span class="nv"&gt;$subscriptionName&lt;/span&gt;
&lt;span class="nv"&gt;$in2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$in&lt;/span&gt; &lt;span class="n"&gt;-join&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$pattern&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(?&amp;lt;=\n)\t{2}(?!\t)(.+)\n\t{3}RunTimeStatus: (.+)\n\t{3}LastError: (.+)(?:\n\t{3}ErrorMessage: ((?:\n|.)+?)\n\t{3}ErrorTime: (.+)\n\t{3}NextRetryTime: (.+))?(?:\n|$)&amp;#39;&lt;/span&gt;
&lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$in2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Multiline&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$arr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Groups&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-s&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt; &lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="n"&gt;5&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RunTimeStatus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LastError&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ErrorMessage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;
        &lt;span class="nv"&gt;$msg&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="n"&gt;WSManFault&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt; &lt;span class="o"&gt;-is&lt;/span&gt; &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProviderFault&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProviderError&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ErrorTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NextRetryTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Further Reading&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;MSDN:&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/az24scfc.aspx"&gt;Regular Expression Language - Quick Reference&lt;/a&gt;&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/bs2twtah.aspx"&gt;Grouping Constructs in Regular
Expressions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="Regular Expressions"></category><category term="Windows"></category><category term="PowerShell"></category><category term="Event Log"></category></entry><entry><title>Finding Superseding WSUS updates in PowerShell</title><link href="https://blog.backslasher.net/finding-superseding-wsus-updates-in-wsus-powershell.html" rel="alternate"></link><published>2013-09-25T16:11:00+02:00</published><updated>2013-09-25T16:11:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-09-25:/finding-superseding-wsus-updates-in-wsus-powershell.html</id><summary type="html">&lt;p&gt;Whenever I see a superseded update, I usually want to know which update
supersedes it.&lt;br&gt;
Finding it from the console is easy enough:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/finding-superseding-wsus-updates-in-wsus/WsusSuper.png"&gt;&lt;/p&gt;
&lt;p&gt;But of course, working through the UI is no fun.&lt;br&gt;
After you got an update object through PowerShell, like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$wsus&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-WsusServer&lt;/span&gt; &lt;span class="n"&gt;WSUS2&lt;/span&gt; &lt;span class="n"&gt;-PortNumber&lt;/span&gt; &lt;span class="n"&gt;8530&lt;/span&gt;
&lt;span class="nv"&gt;$update&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wsus â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Whenever I see a superseded update, I usually want to know which update
supersedes it.&lt;br&gt;
Finding it from the console is easy enough:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/finding-superseding-wsus-updates-in-wsus/WsusSuper.png"&gt;&lt;/p&gt;
&lt;p&gt;But of course, working through the UI is no fun.&lt;br&gt;
After you got an update object through PowerShell, like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$wsus&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-WsusServer&lt;/span&gt; &lt;span class="n"&gt;WSUS2&lt;/span&gt; &lt;span class="n"&gt;-PortNumber&lt;/span&gt; &lt;span class="n"&gt;8530&lt;/span&gt;
&lt;span class="nv"&gt;$update&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wsus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SearchUpdates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2847204&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt;
          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductTitles&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Windows 7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt;
          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LegacyName&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;KB2847204-Win7-SP1-X86*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use the method &lt;code&gt;GetRelatedUpdates&lt;/code&gt; to find related updates. The relationships relevant to us are &lt;code&gt;UpdatesThatSupersedeThisUpdate&lt;/code&gt; and &lt;code&gt;UpdatesSupersededByThisUpdate&lt;/code&gt;.&lt;br&gt;
If we use this code:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$update&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetRelatedUpdates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UpdatesThatSupersedeThisUpdate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;KnowledgebaseArticles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;KnowledgebaseArticles
---------------------
{2838727}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We get the KB of updates that directly supersede the one we have.
Remember, there can be updates that supersede these!  &lt;/p&gt;
&lt;p&gt;Enjoy your relationships.&lt;/p&gt;
&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="WSUS"></category><category term="One-Liner"></category></entry><entry><title>Reading Daylight Saving Time Data in Windows</title><link href="https://blog.backslasher.net/reading-daylight-saving-time-data-in-windows.html" rel="alternate"></link><published>2013-09-04T16:48:00+02:00</published><updated>2013-09-04T16:48:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-09-04:/reading-daylight-saving-time-data-in-windows.html</id><summary type="html">&lt;p&gt;When it comes to DST complexity, Israel has it worst (I think). We have
our DST definition changed on a yearly basis, and consequently we have
to repeat the DST deployment cycle (install update, check for timezone
data, test DST-sensitive resources like Outlook calendars...) twice a
year.&lt;br&gt;
Even simple users â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;When it comes to DST complexity, Israel has it worst (I think). We have
our DST definition changed on a yearly basis, and consequently we have
to repeat the DST deployment cycle (install update, check for timezone
data, test DST-sensitive resources like Outlook calendars...) twice a
year.&lt;br&gt;
Even simple users are familiar with the UI reminder for DST (when it
starts / ends) that appears about 2 weeks before the due date, and looks
something like this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/reading-daylight-saving-time-data-in-windows/dstUI.jpg"&gt;&lt;/p&gt;
&lt;p&gt;There are two alternatives that are easier to script and are not
date-dependent, but they're harder to understand:  &lt;/p&gt;
&lt;h4&gt;CMD - &lt;code&gt;W32tm /tz&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This command will give you the computer's timezone configuration,
including the DST data - the bias, beginning and end of Standard/DST times:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/reading-daylight-saving-time-data-in-windows/dstW32tm.png"&gt;&lt;/p&gt;
&lt;h4&gt;PowerShell - WMI&lt;/h4&gt;
&lt;p&gt;Using the class &lt;code&gt;win32_timezone&lt;/code&gt; you can get the same data (and you can
even access it remotely). Just select the relevant fields:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/reading-daylight-saving-time-data-in-windows/dstPowerShell.png"&gt;&lt;/p&gt;
&lt;h3&gt;Readability&lt;/h3&gt;
&lt;p&gt;The problem with those two methods is that the output is not trivially
understood (unlike "DST ends on XXXX/XX/XX, the clock goes back 1 hour")
After finding &lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa394498%28v=vs.85%29.aspx"&gt;this page&lt;/a&gt;
explaining about the WMI class, I hope I can save you some effort:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;w32tm letter&lt;/th&gt;
&lt;th&gt;WMI field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;StandardMonth / DaylightMonth&lt;/td&gt;
&lt;td&gt;1-based-index (1=Jan,12=Dec) of the month in which the time is applied.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DoW&lt;/td&gt;
&lt;td&gt;StandardDayOfWeek / DaylightDayOfWeek&lt;/td&gt;
&lt;td&gt;0-based-index (0=Sun,1=Mon,6=Sat) of the day-of-the-week in which the time is applied&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;StandardDay / DaylightDay&lt;/td&gt;
&lt;td&gt;The occurrence of the day-of-week in the month in which the time is applied.&lt;br/&gt;&lt;code&gt;5&lt;/code&gt; is the last instance.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Examples&lt;/h4&gt;
&lt;p&gt;If &lt;code&gt;M=10,D=2,W=0&lt;/code&gt;, the time will be applied on the &lt;strong&gt;second&lt;/strong&gt; &lt;strong&gt;Sunday&lt;/strong&gt;  of &lt;strong&gt;October&lt;/strong&gt;.&lt;br&gt;
If &lt;code&gt;M=12,D=1,W=0&lt;/code&gt; then time will be applied on the &lt;strong&gt;first&lt;/strong&gt; &lt;strong&gt;Sunday&lt;/strong&gt; of &lt;strong&gt;December.&lt;/strong&gt;&lt;br&gt;
If &lt;code&gt;M=10,D=5,W=0&lt;/code&gt; means the &lt;strong&gt;last&lt;/strong&gt; &lt;strong&gt;Sunday&lt;/strong&gt; of &lt;strong&gt;October&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;And there you have it.&lt;br&gt;
FYI, the latest DST update is &lt;a href="http://support.microsoft.com/kb/2863058"&gt;kb2863058&lt;/a&gt;&lt;/p&gt;</content><category term="Microsoft"></category><category term="WMI"></category><category term="Calendar"></category><category term="Windows"></category><category term="W32tm"></category><category term="PowerShell"></category><category term="DST"></category></entry><entry><title>Network Monitor capture filter limitations</title><link href="https://blog.backslasher.net/network-monitor-capture-filter-limitations.html" rel="alternate"></link><published>2013-08-30T09:11:00+02:00</published><updated>2013-08-30T09:11:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-08-30:/network-monitor-capture-filter-limitations.html</id><summary type="html">&lt;p&gt;I recently had to deal with some network traffic issues, so naturally I turned to NetMon.&lt;br&gt;
My problem was with some TCP packets not reaching their destination.&lt;br&gt;
Since TCP has packet acknowledgements (meaning the receiving end says "packet received" or the packet is sent again), the issue was detectable as â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently had to deal with some network traffic issues, so naturally I turned to NetMon.&lt;br&gt;
My problem was with some TCP packets not reaching their destination.&lt;br&gt;
Since TCP has packet acknowledgements (meaning the receiving end says "packet received" or the packet is sent again), the issue was detectable as "retransmits" on the sending side.&lt;br&gt;
While some retransmits are acceptable, I had an unreasonable amount of these.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/network-monitor-capture-filter/NetMonRetransmit.png"&gt;&lt;br&gt;
This is a &lt;code&gt;SynRetransmit&lt;/code&gt; (and not &lt;code&gt;TCPRetransmit&lt;/code&gt;) because it's easier to recreate, but the idea is the same.&lt;/p&gt;
&lt;p&gt;Filtering for retransmits can be done using "Property.TCPRetransmit" or
"Property.TCPSynRetransmit" (depending on what you're looking for):&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/network-monitor-capture-filter/NetMonFilter.png"&gt;  &lt;/p&gt;
&lt;p&gt;As any NetMon novice knows, there are two filters you can use during a
capture:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Capture Filter&lt;/strong&gt;, affecting the packets being collected and parsed into NetMon&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Filter&lt;/strong&gt;, controlling which collected packets are presented on screen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After learning the difference, it's common sense that as much filtering as possible should be done using the capture filter, to save NetMon the job of collecting and parsing unneeded packets. So I spent 30 minutes trying to understand why filtering for &lt;code&gt;TCPRetransmit&lt;/code&gt;s using the capture filter yielded no packets whatsoever.&lt;br&gt;
Eventually, after reading up on &lt;code&gt;TCPRetransmit&lt;/code&gt;s and the way NetMon parses them (file &lt;code&gt;tcp.npl&lt;/code&gt;, around row 239), I realised:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/network-monitor-capture-filter/NetMonTCPDefinition.png"&gt;&lt;/p&gt;
&lt;p&gt;The retransmits have no special identifying property - NetMon just looks for previous packets in the conversation that have the same sequence number, so if it doesn't capture the original packet, it has nothing to compare the sequence number to, so it won't find the retransmits as well.  &lt;/p&gt;
&lt;h3&gt;To sum up:&lt;/h3&gt;
&lt;p&gt;You can't detect retransmits using the capture filter. You should use the capture filter to narrow the packet options using other properties (like &lt;code&gt;IPv4.Address&lt;/code&gt;) and filter for retransmits only using the display filter.&lt;/p&gt;</content><category term="Microsoft"></category><category term="TCP"></category><category term="Mysteries Solved"></category><category term="Firewall"></category><category term="Network Monitor"></category></entry><entry><title>Putting your Windows to sleep</title><link href="https://blog.backslasher.net/putting-your-windows-to-sleep.html" rel="alternate"></link><published>2013-08-09T13:01:00+02:00</published><updated>2013-08-09T13:01:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-08-09:/putting-your-windows-to-sleep.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerZoe.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Although there are many blog posts about configuring standby ("sleep")
in Windows, each one with its own insomnia joke, I thought I'd share my
methodology .  &lt;/p&gt;
&lt;h3&gt;&lt;code&gt;PowerCfg -energy&lt;/code&gt;:Â  The one tool to sort it all&lt;/h3&gt;
&lt;p&gt;I only learnt about this command near the end of my testing, but it
still managed â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerZoe.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Although there are many blog posts about configuring standby ("sleep")
in Windows, each one with its own insomnia joke, I thought I'd share my
methodology .  &lt;/p&gt;
&lt;h3&gt;&lt;code&gt;PowerCfg -energy&lt;/code&gt;:Â  The one tool to sort it all&lt;/h3&gt;
&lt;p&gt;I only learnt about this command near the end of my testing, but it
still managed to save me a lot of work.&lt;br&gt;
Execute this command (as an administrator) when the computer is idling.
It will run for 60 seconds, profile the system and generate an HTML
report about energy-related problems.&lt;br&gt;
Some will be irrelevant for sleeping (e.g. "Processor utilization is high") but some will save you
valuable time. Try reading the report before following my guide, because
you may find some instant problem solvers.&lt;/p&gt;
&lt;h3&gt;What is Sleep&lt;/h3&gt;
&lt;p&gt;Microsoft defines in this article 6 sleeping states - S0 to S5&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/windows/hardware/ff564575%28v=vs.85%29.aspx"&gt;http://msdn.microsoft.com/en-us/library/windows/hardware/ff564575%28v=vs.85%29.aspx&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;S0&lt;/strong&gt; is a fully working computer.&lt;br&gt;
&lt;strong&gt;S1&lt;/strong&gt;..&lt;strong&gt;S3&lt;/strong&gt; are standby states, in which some parts of the computer
are turned off to conserve power but resuming to S0 is relatively quick
(2-30sec). These states differ by how many parts are shut down - in S1
only the processor clock and buses are shut down, and in S3 the entire
processor and some parts of the motherboard are shut down.&lt;br&gt;
&lt;strong&gt;S4&lt;/strong&gt; is hibernation - the computer is shut down, but the operating
system context (memory, running services etc.) is saved to the
hibernation file. When the computer is turned on, the operating system
detects that it has been hibernated and loads its context from the
hibernation file instead of starting fresh&lt;br&gt;
&lt;strong&gt;S5&lt;/strong&gt; is shutting the computer down completely.&lt;br&gt;
When people refer to sleeping, they usually refer to S3.&lt;br&gt;
You can see in the energy report which states are supported:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerEnergyReport.png"&gt;&lt;/p&gt;
&lt;h3&gt;How Sleep Works&lt;/h3&gt;
&lt;p&gt;When sleep is enabled, after the computer idles for a set time (e.g. 15
minutes), it will stop working and turn off some of its components to
save power. The user can "wake" the computer to full power in order to
resume work.  &lt;/p&gt;
&lt;h3&gt;GP Settings&lt;/h3&gt;
&lt;p&gt;There are several ways to configure Windows' sleep settings.&lt;br&gt;
Assuming you manage Windows 7+ workstations, the most convenient way is
to use the Administrative Templates found in&lt;br&gt;
&lt;code&gt;Administrative Templates &amp;gt; System &amp;gt; Power Management &amp;gt; Sleep Settings&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerSleepGP.png"&gt;&lt;/p&gt;
&lt;p&gt;Some things to note:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some interesting settings (such as "Turn off the display") are found
    in other folders inside "Power Management".&lt;/li&gt;
&lt;li&gt;"Unattended sleep" is the computer returning to sleep after being
    woken up using an automated method (like a scheduled task, magic
    packet etc.), as opposed to being woken up from user interaction,
    like a mouse move.&lt;/li&gt;
&lt;li&gt;Hybrid sleep is a new-ish power saving option for laptops (or other
    battery-equipped computers). The computer turns off the screen
    immediately while creating a hibernation file. After creating the
    file, it goes to standby (instead of shutting down like normal S4).
    If the computer doesn't lose power, it will resume quickly from
    standby. If it does, it will resume from the hibernation file.&lt;/li&gt;
&lt;li&gt;Disabling "Allow standby states (S1-S3) when sleeping" will prevent
    the computer from sleeping. UI options for sleep will disappear (as
    if the computer didn't have that capability) and sleeping through
    command line (see ahead) will cause the computer to hibernate
    instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Why Won't it Sleep&lt;/h3&gt;
&lt;p&gt;The reasons for computers not sleeping as expected are divided into 3
main categories:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows Won't Try&lt;/strong&gt;&lt;br&gt;
  Try putting the computer to sleep manually, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;%windir%&lt;/span&gt;\System32\rundll32.exe powrprof.dll,SetSuspendState Standby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the computer still won't sleep, check if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sleep is unavailable on the hardware level (really old hardware, not
    enabled on BIOSâ€¦)&lt;/li&gt;
&lt;li&gt;Sleep is disabled by GP. Check the registry key:&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKLM\Software\Policies\Microsoft\Power\PowerSettings\abfc2519-3608-4c2a-94ea-171b0ed546ab:ACSettingIndex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows is Busy&lt;br&gt;
  If the computer will sleep when manually instructed but won't sleep by
  itself, it might be busy doing something that mustn't be interrupted.&lt;br&gt;
  For example, media players will usually ask Windows not to sleep when
  they're playing.&lt;br&gt;
  Current requests can be viewed using &lt;code&gt;PowerCfg -requests&lt;/code&gt; and they look a little like this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerRequests.png"&gt;&lt;/p&gt;
&lt;p&gt;The usual suspect list contains media players, IM software with voice
chat, AV software and indexing software (like google desktop).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows Keeps Getting Bothered&lt;/strong&gt;&lt;br&gt;
    Windows allows different devices and software to wake it up from sleep.&lt;br&gt;
    For example, scheduled tasks can wake Windows up to execute:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerTask.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Or network cards can wake up the computer, either by any incoming
activity or a special "magic packet":  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerNIC.png"&gt;&lt;/p&gt;
&lt;p&gt;And of course, you can usually tap your keyboard to wake your computer up:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerKeyboard.png"&gt;&lt;/p&gt;
&lt;p&gt;Some of those devices / features may be misbehaving and keep waking
windows up.&lt;br&gt;
You can try:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Using this command to see which hardware devices can wake the
computer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;powercfg.exe -devicequery wake_armed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using this command to see what caused the computer to wake up the
last time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;powercfg.exe /lastwake
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disconnecting some devices and disabling some tasks to see if the
computer suddenly goes to sleep&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now go get a good night's sleep.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Mysteries Solved"></category><category term="Windows"></category><category term="Power Management"></category><category term="Ramblings"></category><category term="Registry"></category><category term="Performance"></category></entry><entry><title>Adding .net 3.5 to a Windows Server 2012 template</title><link href="https://blog.backslasher.net/adding-net-35-to-windows-server-2012-template.html" rel="alternate"></link><published>2013-06-28T10:48:00+02:00</published><updated>2013-06-28T10:48:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-06-28:/adding-net-35-to-windows-server-2012-template.html</id><summary type="html">&lt;p&gt;I was approached by some colleagues building a new VM template for
Windows Server 2012 who wanted some help with .NET framework 3.5.  &lt;/p&gt;
&lt;h3&gt;The .NET oddity&lt;/h3&gt;
&lt;p&gt;As anyone who messed a bit with Windows Server 2012 knows, the .NET
framework 3.5 is one of two features (along with â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was approached by some colleagues building a new VM template for
Windows Server 2012 who wanted some help with .NET framework 3.5.  &lt;/p&gt;
&lt;h3&gt;The .NET oddity&lt;/h3&gt;
&lt;p&gt;As anyone who messed a bit with Windows Server 2012 knows, the .NET
framework 3.5 is one of two features (along with PowerShell v2, contrary
to v3) whose status is &lt;code&gt;removed&lt;/code&gt;, meaning it's not installed &lt;strong&gt;and&lt;/strong&gt; the installation sources aren't
available in the Windows directory, so that in order to install it you
have to supply an installation source - either the "sources" folder from
the CD or access to the Microsoft Update service (and no, WSUS won't do
for now).&lt;/p&gt;
&lt;p&gt;&lt;img alt="AA" src="https://blog.backslasher.net/images/adding-net-35-to-windows-server-2012/AddNet1.png"&gt;&lt;/p&gt;
&lt;h3&gt;Why I care&lt;/h3&gt;
&lt;p&gt;Contrary to Microsoft's optimistic view of the software world, almost
all modern .NET-based software run on version 3.5-, not on 4+, so I'm
going to have to install this feature on a lot of servers.&lt;/p&gt;
&lt;h3&gt;What we did&lt;/h3&gt;
&lt;p&gt;At first I saw two options:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid installing the feature, causing myself a serious amount of
    work (either some manual action or complicated scripting) every time
    I want to create a VM with .NET 3.5,&lt;/li&gt;
&lt;li&gt;Install the feature on the template, causing all VMs to come
    equipped with the feature and relying on my colleagues (and
    future-self) to remove the feature where it's not needed (requires a
    restart) or expose the VM to unnecessary security/performance
    issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After some thinking and tinkering, I came up with a 3rd option - I'll
install the feature on the template then immediately remove it, changing
its state from &lt;code&gt;removed&lt;/code&gt; to &lt;code&gt;available&lt;/code&gt;, thus making the feature itself
unavailable, but the installation sources present in Windows' "sources"
folder, meaning it can be easily installed in the future without
external media!&lt;/p&gt;
&lt;h3&gt;The Steps&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Get a model VM (clean setup of Windows Server 2012 is best)&lt;/li&gt;
&lt;li&gt;Make sure you have the additional sources. If you're connected to
    the internet, you're set. If not, get the "sources\sxs" directory
    from the installation CD&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the feature and immediately remove it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Add-WindowsFeature&lt;/span&gt; &lt;span class="n"&gt;Net-Framework-Core&lt;/span&gt; &lt;span class="n"&gt;-Sources&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SXSDIRECTORY&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;Remove-WindowsFeature&lt;/span&gt; &lt;span class="n"&gt;Net-Framework-Core&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="Step 2" src="https://blog.backslasher.net/images/adding-net-35-to-windows-server-2012/AddNet2.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart the machine, e.g. using &lt;code&gt;Restart-Computer&lt;/code&gt; and verify:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-WindowsFeature&lt;/span&gt; &lt;span class="n"&gt;Net-Framework-Core&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="Step 3" src="https://blog.backslasher.net/images/adding-net-35-to-windows-server-2012/AddNet3.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it!   &lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="Windows"></category><category term="Virtualization"></category><category term="PowerShell"></category></entry><entry><title>Remotely changing DNS server list through registry</title><link href="https://blog.backslasher.net/remotely-changing-dns-server-list.html" rel="alternate"></link><published>2013-06-21T09:51:00+02:00</published><updated>2013-06-21T09:51:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-06-21:/remotely-changing-dns-server-list.html</id><summary type="html">&lt;p&gt;Recently I was called to help some some friends who had an unusual problem:&lt;br&gt;
They demoted an old DC because they needed to raise the domain functional level, and after doing so many of their servers stopped working - they wouldn't allow remote logins, the Exchange services wouldn't start, while showing â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I was called to help some some friends who had an unusual problem:&lt;br&gt;
They demoted an old DC because they needed to raise the domain functional level, and after doing so many of their servers stopped working - they wouldn't allow remote logins, the Exchange services wouldn't start, while showing this message when trying to connect:&lt;br&gt;
&lt;code&gt;There are currently no logon servers available to service the logon request.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/remotely-changing-dns-server-list/NoLogonServers.gif"&gt;&lt;/p&gt;
&lt;p&gt;We quickly realized the issue - these servers had a static list of DNS servers configured. The list was out of date, and the only working server was the one they demoted.&lt;br&gt;
Connection to AD requires a working DNS server, because the first step in locating a DC is querying DNS for &lt;code&gt;_ldap._tcp.DOMAIN&lt;/code&gt;.&lt;br&gt;
We had some ideas that would normally work, but not this time:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Repromote the old DC&lt;/strong&gt; - Functional level has already been raised, so we couldn't just run it through DCPromo again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Crate a cache-only DNS server&lt;/strong&gt; - the server was expected to be rebooted and generally unavailable for the following week, so we couldn't rely on it to be available.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create a new DC and steal the old DC's IP&lt;/strong&gt; - some application was running on the old DC and needed its IP.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Eventually we realized something interesting - although the server couldn't authenticate to the DCs (because of the non-functional DNS), connections &lt;strong&gt;to the server&lt;/strong&gt; worked fine, because Kerberos ticket validation happens locally. Therefore, we used &lt;code&gt;regedit&lt;/code&gt; to remotely
connect to the servers and give them new DNS server addresses.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/remotely-changing-dns-server-list/RemoteRegedit.png"&gt;&lt;/p&gt;
&lt;p&gt;The configuration for network adapters can be found under:&lt;br&gt;
&lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\{DEVICEGUID}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/remotely-changing-dns-server-list/TCPRegistry.png"&gt;&lt;/p&gt;
&lt;p&gt;If you have more than one NIC, just choose the key with the value &lt;code&gt;NameServer&lt;/code&gt; already configured. Replace &lt;code&gt;NameServer&lt;/code&gt; with a comma-separated list of your DNS servers' IPs, and reboot (remotely, using &lt;code&gt;shutdown -m&lt;/code&gt;).  &lt;/p&gt;
&lt;p&gt;That's it!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="DNS"></category><category term="Mysteries Solved"></category><category term="Exchange"></category><category term="Registry"></category><category term="Active Directory"></category></entry><entry><title>Filtering Windows Event Log using XPath</title><link href="https://blog.backslasher.net/filtering-windows-event-log-using-xpath.html" rel="alternate"></link><published>2013-05-19T15:24:00+02:00</published><updated>2013-05-19T15:24:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-05-19:/filtering-windows-event-log-using-xpath.html</id><summary type="html">&lt;p&gt;When I want to search for events in Windows Event Log, I can usually make do with searching / filtering through the Event Viewer. For instance, to see all 4624 events (successful logon), I can fill the UI filter dialog like this:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Event Logs:&lt;/strong&gt; Security&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Event IDs:&lt;/strong&gt; 4624&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/EventFilterUI.png"&gt;&lt;/p&gt;
&lt;p&gt;But sometimes I â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I want to search for events in Windows Event Log, I can usually make do with searching / filtering through the Event Viewer. For instance, to see all 4624 events (successful logon), I can fill the UI filter dialog like this:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Event Logs:&lt;/strong&gt; Security&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Event IDs:&lt;/strong&gt; 4624&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/EventFilterUI.png"&gt;&lt;/p&gt;
&lt;p&gt;But sometimes I need higher granularity. That's when XPath comes in.  &lt;/p&gt;
&lt;h3&gt;What is XPath&lt;/h3&gt;
&lt;p&gt;Xpath is a method for selecting specific XML nodes from an XML document.&lt;br&gt;
Given a list of books in XML, one can select the third book, the book with the most pages or the book with the author "David" with a single, human-readable XPath statement.  &lt;/p&gt;
&lt;h3&gt;Usage in Windows Event Log&lt;/h3&gt;
&lt;p&gt;Since Windows NT6 (Vista / Server 2008), events are saved in XML format.&lt;br&gt;
If we'll take a look in event 16384:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/16384Text.png"&gt;&lt;/p&gt;
&lt;p&gt;The general message (&lt;code&gt;Successfully scheduled Software Protection service for re-start at {0}. Reason: {1}.&lt;/code&gt;) is saved in an external resource file, but the specifics (the replacement strings) are saved in the event.&lt;br&gt;
They can be viewed in a friendly view (&lt;code&gt;Details/Friendly&lt;/code&gt;) or in their raw XML form (&lt;code&gt;Details/XML&lt;/code&gt;):  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/16384Friendly.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/16384Xml.png"&gt;&lt;/p&gt;
&lt;p&gt;Also available are the general event details (computer name, event ID,
time generated), under the "System" Node:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/16384SystemXml.png"&gt;&lt;/p&gt;
&lt;p&gt;Not only can you filter events using XPath on the event's XML node, this is how the UI is actually filtering.&lt;br&gt;
If we make up some sort of filter:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/SomeFilterUI.png"&gt;&lt;/p&gt;
&lt;p&gt;And switch to the &lt;code&gt;XML&lt;/code&gt; view:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/SomeFilterXml.png"&gt;&lt;/p&gt;
&lt;p&gt;we can see our selections reflected in the XPath statement contained in the &lt;code&gt;Select&lt;/code&gt; element.&lt;br&gt;
Note &lt;code&gt;(EventID=4624)&lt;/code&gt; for filtering by event ID, for example.&lt;/p&gt;
&lt;h3&gt;Using XPath Filtering&lt;/h3&gt;
&lt;p&gt;To filter events using XPath, you need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic XPath skills&lt;/li&gt;
&lt;li&gt;A sample event to examine its structure&lt;/li&gt;
&lt;li&gt;A way to filter&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Basic XPath skills&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;You can learn basic queries on the w3c site: &lt;a href="https://www.w3schools.com/xml/xpath_syntax.asp"&gt;https://www.w3schools.com/xml/xpath_syntax.asp&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;More about XPath: &lt;a href="http://www.whoishostingthis.com/resources/xpath/"&gt;http://www.whoishostingthis.com/resources/xpath/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows Event Log XPath filtering uses a subset of XPath 1.0 with some serious limitations, which can be found here: &lt;a href="http://msdn.microsoft.com/en-us/library/dd996910(VS.85).aspx#limitations"&gt;http://msdn.microsoft.com/en-us/library/dd996910(VS.85).aspx#limitations&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;You can always use the UI to build a filter, then switch to the XML view and see how it's represented in XPath.  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;A sample event&lt;/h4&gt;
&lt;p&gt;When searching for specific fields within a certain event (e.g. 4624 where &lt;code&gt;Process ID&lt;/code&gt; is &lt;code&gt;0x2b0&lt;/code&gt;), it's always good to find a sample event, switch to &lt;code&gt;Details&lt;/code&gt; and see how it's built. In my example, I can see the
field I need is &lt;code&gt;EventData/ProcessId&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/4624ProcessID.png"&gt;&lt;/p&gt;
&lt;p&gt;And I can deduce that the XPath expression I need should be something
like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event[
 System[
  EventID=4624
 ] and
 EventData[
  Data[@Name=&amp;quot;ProcessId&amp;quot;]=&amp;quot;0x2b0&amp;quot;
 ]
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;A Way to Filter&lt;/h4&gt;
&lt;p&gt;After you got the XPath query, you need to choose the right tool to run the query on.&lt;br&gt;
You can use:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UI (&lt;code&gt;EventVwr&lt;/code&gt;)&lt;br&gt;
    To use your XPath query in EventVwr, choose one of these two options, switch to the &lt;code&gt;XML&lt;/code&gt; card, enable &lt;code&gt;Edit query manually&lt;/code&gt; and... edit the query.&lt;ul&gt;
&lt;li&gt;Filter&lt;br&gt;
   Use the &lt;code&gt;Filter current log&lt;/code&gt; button to get a one-time filter. Useful when you don't need to save the query for later&lt;/li&gt;
&lt;li&gt;Custom View&lt;br&gt;
  Create a new custom view if you intend to reuse the query. Note that it's saved on the computer running the event viewer, not on the computer being queried.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cmd&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Wevtutil&lt;/code&gt;&lt;br&gt;
This tool is useful when managing event logs in general, but it also can be used to query for events. The usage is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wevtutil qe LogName /q:&lt;span class="s2"&gt;&amp;quot;XpathQuery&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more info, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wevtutil qe /?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PowerShell  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Get-WinEvent&lt;/code&gt;&lt;br&gt;
This Cmdlet has 3 options for filtering. Choose one:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FilterXml&lt;/code&gt; - Accepts a full XML (as seen in the event viewer UI)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FilterXPath&lt;/code&gt; - Accepts just the XPath query&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FilterHashtable&lt;/code&gt; - Accepts a hashtable of field IDs and values. I
find it kind of confusing and buggy, so I avoid it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, to view the top 5 events matching our query (ID 4624
    and "Process ID" is "0x2b0") on computer "comp", you can try:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-WinEvent&lt;/span&gt; &lt;span class="n"&gt;-ComputerName&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Comp&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-LogName&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Security&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-FilterXPath&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Event[System[EventID=4624] and EventData[Data[@Name=&amp;quot;ProcessId&amp;quot;]=&amp;quot;0x2b0&amp;quot;]]&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-MaxEvents&lt;/span&gt; &lt;span class="n"&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Pointers&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can't specify both Channel ("Event Logs") and Provider ("Event
    Sources"). In any case, if you have the provider, the channel is
    redundant.&lt;/li&gt;
&lt;li&gt;Specifying the Channel in the XPath query (like &lt;code&gt;Event[System[Channel="Security"]]&lt;/code&gt;) doesn't seem to work. The UI also avoids it in its generated queries.&lt;/li&gt;
&lt;li&gt;When querying for events using PowerShell, you might get empty messages. The useful event details are still there! For example, you can use &lt;code&gt;ToXml()&lt;/code&gt; on the event objects to get the XML format.&lt;/li&gt;
&lt;li&gt;General event properties (like &lt;code&gt;TimeGenerated&lt;/code&gt; and &lt;code&gt;Level&lt;/code&gt;) can be quite different than how they look in the UI. Check the friendly/XML view or the UI-generated XPath Query.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The event-specific properties are contained in "Data" elements. To search for named properties, use something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event[EventData[Data[@Name=&amp;quot;PropertyName&amp;quot;]=&amp;quot;RequiredValue&amp;quot;]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To search for that value in any property (kind of like searching for
the value in the entire message), use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event[EventData[Data=&amp;quot;RequiredValue&amp;quot;]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To search for two fields, use something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event[ EventData[  Data[@Name=&amp;quot;PropA&amp;quot;]=&amp;quot;ValueA&amp;quot; and  Data[@Name=&amp;quot;PropB&amp;quot;]=&amp;quot;ValueB&amp;quot; ]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;To Sum Up&lt;/h3&gt;
&lt;p&gt;It may look harder than normal filtering at first, but the resulting
queries can be much more granular and effective than UI-based filtering.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="Windows"></category><category term="PowerShell"></category><category term="Ramblings"></category><category term="Event Log"></category></entry><entry><title>Preventing Users from Adding Computers to a Domain</title><link href="https://blog.backslasher.net/preventing-users-from-adding-computers-to-a-domain.html" rel="alternate"></link><published>2013-05-19T09:32:00+02:00</published><updated>2013-05-19T09:32:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-05-19:/preventing-users-from-adding-computers-to-a-domain.html</id><summary type="html">&lt;p&gt;Some time ago, we've come to the conclusion that the computer accounts
in the domain are disorganized. After doing the tedious job of sorting
existing accounts, we saw that new computer accounts are still being
added to the "Computers" container, and we had no idea which computer
was behind them â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some time ago, we've come to the conclusion that the computer accounts
in the domain are disorganized. After doing the tedious job of sorting
existing accounts, we saw that new computer accounts are still being
added to the "Computers" container, and we had no idea which computer
was behind them (server/workstation, test/production etc.). After doing
some research, we managed to block everyone from joining computers to
the domain without pre-creating a computer account (inside organized
OUs).  &lt;/p&gt;
&lt;h3&gt;The domain join process&lt;/h3&gt;
&lt;p&gt;To join a domain, Windows needs a computer account. Windows tries to get
its own computer account using these methods, in that order:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Searches for an existing account with an identical name to its own.&lt;br&gt;
   If a matching account is found (and is disabled), Windows attempts
    to make it its own (write FQDN, reset password etc.)&lt;/li&gt;
&lt;li&gt;Tries to create a new account using the user's permissions in the
    default computers container&lt;/li&gt;
&lt;li&gt;Tries to use the "Add workstations to domain" privilege to create a
    new account in the default computers container&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;A little about "Add workstations to domain":&lt;/h3&gt;
&lt;p&gt;Microsoft intends for users to join their own workstations to the
domain, probably to reduce load on helpdesks. For this to work, DCs have
a &lt;a href="http://technet.microsoft.com/en-us/library/cc780182%28v=ws.10%29.aspx"&gt;User Right Assignment&lt;/a&gt; called
"Add workstations to domain".&lt;br&gt;
By default, Authenticated users are members of this group, meaning that
all domain users can use this privilege.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/preventing-users-from-adding-computers-to-a-domain/AddWorkstationsToDomain.png"&gt;&lt;/p&gt;
&lt;p&gt;Users with this privilege can create up to 10 (by default) computer
accounts in the default computers container.&lt;br&gt;
The limit of accounts every user can create is defined in the domain
object, under the property &lt;code&gt;ms-DS-MachineAccountQuota&lt;/code&gt;. To view it,
execute&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;get-addomain&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DistinguishedName&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;get-adobject&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ms-DS-MachineAccountQuota&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;ms-DS-MachineAccountQuota&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The amount of computers a user has already joined is determined by
counting the machines with &lt;code&gt;ms-DS-CreatorSID&lt;/code&gt; identical to the user's
SID. To find all computers added to the domain using this privilege, you
can try   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ADComputer&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To find computers added to the domain using this privilege by a specific
user, execute:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$sid&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;get-aduser&lt;/span&gt; &lt;span class="n"&gt;OneBoredAdmin&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;SID&lt;/span&gt;
&lt;span class="nb"&gt;Get-ADComputer&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$sid&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To get a summary of all privilege-added computers and the users that
added them, try:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;get-adcomputer&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;group &lt;/span&gt;&lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UserName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;}},@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ComputerNames&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Group &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="c"&gt;# Try to resolve the SID into an account&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[System.Security.Principal.NTAccount]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By the way, when using this privilege to create an account, the account
is created with "Domain Admins" as its owner (and not the creating
user), and the user's SID in the &lt;code&gt;ms-DS-CreatorSID&lt;/code&gt; property.  &lt;/p&gt;
&lt;h3&gt;Action Plan&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; While these actions should work as planned and prevent users from
adding computers without having a computer account ready, step 1 will
break DC demotion. You can either redirect your default computer
directory to another OU for the process (see
&lt;a href="http://support.microsoft.com/kb/324949"&gt;KB324949&lt;/a&gt;) or restore the
original permissions. Since demoting isn't a daily action, I still think
this procedure is worth doing.  &lt;/p&gt;
&lt;p&gt;In order to prevent users from joining computers to the domain without
pre-creating a computer account, you have to perform these actions:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Remove permissions to create computer accounts on the default
    computers container. To check what is the current default computers
    container in your domain, you can try:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADDomain&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ComputersContainer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prevent users from using the "Add workstations to domain" privilege.
    This can be done either by modifying the &lt;code&gt;ms-DS-MachineAccountQuota&lt;/code&gt;
    property on the domain to zero, or removing "Authenticated users"
    from the URA on the DCs (use Group Policy to make sure it'll apply to future
    DCs as well).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As long as you don't perform those two steps, users will still be able
to add computers to the domain.  &lt;/p&gt;
&lt;h5&gt;Further reading:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technet.microsoft.com/en-us/library/cc780195%28v=ws.10%29.aspx"&gt;Add workstations to domain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://support.microsoft.com/kb/243327"&gt;Default limit to number of workstations a user can join to the domain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Security"></category><category term="Mysteries Solved"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Investigating Repeatedly Locked Out Users</title><link href="https://blog.backslasher.net/investigating-repeatedly-locked-out-users.html" rel="alternate"></link><published>2013-05-14T09:44:00+02:00</published><updated>2013-05-14T09:44:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-05-14:/investigating-repeatedly-locked-out-users.html</id><summary type="html">&lt;p&gt;I often get asked by some other IT guy "why does user XXXXX keep on
getting locked out?"  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/investigating-repeatedly-locked-out-users/AccountLockedOut.png"&gt;&lt;/p&gt;
&lt;p&gt;Let me clue you in on something - users (almost) always get locked out for the
same reason: They try the wrong password too many times.The reasons for
THAT, however, are quite â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I often get asked by some other IT guy "why does user XXXXX keep on
getting locked out?"  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/investigating-repeatedly-locked-out-users/AccountLockedOut.png"&gt;&lt;/p&gt;
&lt;p&gt;Let me clue you in on something - users (almost) always get locked out for the
same reason: They try the wrong password too many times.The reasons for
THAT, however, are quite diverse and include:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People typing in the wrong password&lt;/li&gt;
&lt;li&gt;Computers trying to renew TGTs with an old password (after a
    different one has been set/reset from somewhere else)&lt;/li&gt;
&lt;li&gt;Some external system (SAP, VMWare SSO...) is using AD as its user
    store, and is being presented with the wrong credentials from its
    own client (a web browser, for instance)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also recently learned that turning on &lt;code&gt;Smart card is required for interactive logon&lt;/code&gt; actually scrambles the user's password as well, so
people being enforced to use smart cards are often locked out without
doing anything other than being logged in (with the now old password).&lt;br&gt;
Finding the root cause is not trivial, but I've created a small
procedure to help the helpdeskÂ  / IT team solve such mysteries:&lt;/p&gt;
&lt;h3&gt;1. Start working immediately after a lockout&lt;/h3&gt;
&lt;p&gt;Unless you have some fancy enterprise event logging solution (like
SCOM's ACS or Symantec's SIM), you better act quick. Events in DCs don't
last for long, because they have limited log size and are constantly
generating new events. Considering the fact that it's easier to find
fresh events anyway, it's usually a good idea to determine when the
lockout happens (all the time, every 48 hours...), unlock the account
and start looking at logs immediately after it's locked again. Assuming
you have a functional PDC, it'll hold the latest user data, so you can
check on the user using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ADUser&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADDomainController&lt;/span&gt; &lt;span class="n"&gt;-Service&lt;/span&gt; &lt;span class="n"&gt;PrimaryDC&lt;/span&gt; &lt;span class="n"&gt;-Discover&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt;
&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;USERNAME&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;LockedOut&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LockedOut&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2. Search DC security logs for audit logon failures with that user&lt;/h3&gt;
&lt;p&gt;If you have enterprise event collection, use it.&lt;br&gt;
If you don't (or prefer the hardcore version), you have 3 ways to
filter:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Filter every one of your DCs' logs with the following criteria:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logged (time): The smallest time range you can afford. I usually take 15 minutes&lt;/li&gt;
&lt;li&gt;Event Logs: &lt;code&gt;Security&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Event Sources: &lt;code&gt;Microsoft Windows security auditing.&lt;/code&gt; (this dot is actually there)&lt;/li&gt;
&lt;li&gt;Task Category: &lt;code&gt;Logon, Kerberos Service Ticket Operations, Kerberos Authentication Service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Keywords: &lt;code&gt;Audit Failure&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/investigating-repeatedly-locked-out-users/AccountLockedOutFilter.png"&gt;&lt;/p&gt;
&lt;p&gt;And manually search (&lt;code&gt;Ctrl+F&lt;/code&gt;) for the user name in the resulting event list&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Filter every DC's security log with the following xml criteria:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;QueryList&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;Query&lt;/span&gt; &lt;span class="na"&gt;Id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;Path=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Security&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Select&lt;/span&gt; &lt;span class="na"&gt;Path=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Security&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Event[
 System[
  Provider[@Name=&amp;#39;Microsoft-Windows-Security-Auditing&amp;#39;] and
  ( Task = 12544 or Task = 14337 or Task = 14339 ) and
  (band(Keywords,4503599627370496)) and
  TimeCreated[timediff(@SystemTime) &amp;gt;= 3600000]
 ] and
 EventData[
  (Data=&amp;#39;USERNAMEHERE&amp;#39;)
 ]
]
    &lt;span class="nt"&gt;&amp;lt;/Select&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/Query&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/QueryList&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute this script, which extracts the event from all of your
DCs, and inspect the results:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$timeBack&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[timespan]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0:15:0&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;USERNAME&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$msg&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADDomainController&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;hostname&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
&lt;span class="nb"&gt;Get-WinEvent&lt;/span&gt; &lt;span class="n"&gt;-ComputerName&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-LogName&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Security&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-FilterXPath&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;Event[&lt;/span&gt;
&lt;span class="s2"&gt; System[&lt;/span&gt;
&lt;span class="s2"&gt;  Provider[@Name=&amp;#39;Microsoft-Windows-Security-Auditing&amp;#39;] and&lt;/span&gt;
&lt;span class="s2"&gt;  ( Task = 12544 or Task = 14337 or Task = 14339 ) and&lt;/span&gt;
&lt;span class="s2"&gt;  (band(Keywords,4503599627370496)) and&lt;/span&gt;
&lt;span class="s2"&gt;  TimeCreated[timediff(@SystemTime) &amp;lt;= &lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$timeBack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TotalMilliseconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;]&lt;/span&gt;
&lt;span class="s2"&gt; ] and&lt;/span&gt;
&lt;span class="s2"&gt; EventData[&lt;/span&gt;
&lt;span class="s2"&gt;  (Data=&amp;#39;$userName&amp;#39;)&lt;/span&gt;
&lt;span class="s2"&gt; ]&lt;/span&gt;
&lt;span class="s2"&gt;]&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{(&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toXml&lt;/span&gt;&lt;span class="p"&gt;())}&lt;/span&gt;
&lt;span class="nv"&gt;$msg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;3. Analyze the failure message&lt;/h3&gt;
&lt;p&gt;After finding the message, we need to read it to decide why the computer
is locking out the user.&lt;br&gt;
It usually involves locating the following parts of the message:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Machine / workstation name&lt;/li&gt;
&lt;li&gt;Authentication failure reason: We need to know if this computer is the real culprit (providing wrong passwords) or only a harmless victim (trying to authenticate the account when it's already locked).&lt;br&gt;
    These can help:&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technet.microsoft.com/en-us/library/bb463166.aspx"&gt;Keberos error codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blogs.technet.com/b/askpfeplat/archive/2013/01/28/quick-reference-troubleshooting-netlogon-error-codes.aspx"&gt;NTLM error codes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logon Type - It helps to know what type of logon was attempted.&lt;br&gt;
    For example, it could be physical logon (a good old keyboard-mouse user session) or a service logon (a service with such credentials trying to start). &lt;a href="http://technet.microsoft.com/en-us/library/cc787567%28v=ws.10%29.aspx"&gt;Here is a pretty good list&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these details, we should have a good idea about the computer
responsible for the lockout&lt;/p&gt;
&lt;h3&gt;4. Handle offending computer&lt;/h3&gt;
&lt;p&gt;Since there are many root causes and many responses, I'll just give a
couple of ideas here, categorised by the logon type:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2(&lt;code&gt;Interactive&lt;/code&gt;)&lt;br&gt;
  7(&lt;code&gt;Unlock&lt;/code&gt;)&lt;br&gt;
  10(&lt;code&gt;RemoteInteractive&lt;/code&gt;)  &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A user left a session (Console/RDP) running with the wrong password&lt;/strong&gt;&lt;br&gt;
  Either restart the computer, log the user off or unlock the session with fresh credentials&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Someone is typing the wrong password (by mistake)&lt;/strong&gt;&lt;br&gt;
  Manually inform the user that &lt;a href="http://cdn.memegenerator.net/instances/400x/37280439.jpg"&gt;his password is incorrect&lt;/a&gt; (physically / via helpdesk)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brute force is being attempted&lt;/strong&gt;&lt;br&gt;
  Security response team?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3(&lt;code&gt;Network&lt;/code&gt;)&lt;br&gt;
  8(&lt;code&gt;NetworkClearText&lt;/code&gt;)&lt;br&gt;
&lt;strong&gt;Non-session authentication (basic / network etc.) failing on a domain member&lt;/strong&gt;&lt;br&gt;
  Some server application is being provided the wrong credentials from a client (e.g. IIS using basic authentication, Windows File Server using NTLMâ€¦)&lt;br&gt;
  Open the domain member's local security log and look for authentication failures to determine the failing computer. Note the &lt;code&gt;Caller process name&lt;/code&gt; field.&lt;br&gt;
  Some applications (like SAP) may record their attempts in their own log and not in Windows' event log&lt;/li&gt;
&lt;li&gt;4(&lt;code&gt;Batch&lt;/code&gt;)&lt;br&gt;
  5(&lt;code&gt;Service&lt;/code&gt;)&lt;br&gt;
&lt;strong&gt;A service / scheduled task is using the wrong credentials to launch&lt;/strong&gt;&lt;br&gt;
  Find the wrong configuration and fix it. You may use the local computer's security event log&lt;/li&gt;
&lt;li&gt;ANY&lt;br&gt;
&lt;strong&gt;Failed authentication from a non-domain member (e.g. thin client)&lt;/strong&gt;&lt;br&gt;
  There isn't a lot you can do with these, because they're not domain members. Either handle them (e.g. reset the device) or block them from accessing the DC using some firewall. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Remember&lt;/strong&gt;: There are other possibilities, these are just some pointers.&lt;/p&gt;
&lt;p&gt;Lockout pictures are from:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blogs.technet.com/b/askds/archive/2008/02/15/read-only-domain-controllers-and-account-lockouts.aspx"&gt;http://blogs.technet.com/b/askds/archive/2008/02/15/read-only-domain-controllers-and-account-lockouts.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.petri.co.il/add_unlock_user_option_to_dsa.htm"&gt;http://www.petri.co.il/add_unlock_user_option_to_dsa.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.strictly-software.com/2012/01/remote-desktop-access-denied-error.html"&gt;http://blog.strictly-software.com/2012/01/remote-desktop-access-denied-error.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.top-password.com/blog/troubleshooting-locked-out-windows-user-account/"&gt;http://www.top-password.com/blog/troubleshooting-locked-out-windows-user-account/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Security"></category><category term="Mysteries Solved"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Event Log"></category><category term="Active Directory"></category></entry><entry><title>Viewing detailed replication status using Repadmin and PowerShell</title><link href="https://blog.backslasher.net/viewing-detailed-replication-status-using-repadmin-and-powershell.html" rel="alternate"></link><published>2013-05-03T11:46:00+02:00</published><updated>2013-05-03T11:46:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-05-03:/viewing-detailed-replication-status-using-repadmin-and-powershell.html</id><summary type="html">&lt;p&gt;Whenever I want to view the replication status in my domain, I use
&lt;code&gt;repadmin /replsum&lt;/code&gt;, which queries all of the DCs and gives me a summary
of the replication links status per DC, which looks a little like this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/replsum.png"&gt;&lt;/p&gt;
&lt;p&gt;If I wanted to get detailed information, I'd use &lt;code&gt;repadmin /showrepl â€¦&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Whenever I want to view the replication status in my domain, I use
&lt;code&gt;repadmin /replsum&lt;/code&gt;, which queries all of the DCs and gives me a summary
of the replication links status per DC, which looks a little like this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/replsum.png"&gt;&lt;/p&gt;
&lt;p&gt;If I wanted to get detailed information, I'd use &lt;code&gt;repadmin /showrepl *&lt;/code&gt;
which would print some information for every replication link:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/showrepl.png"&gt;&lt;/p&gt;
&lt;p&gt;Since I have more than two DCs in some environments, looking at all of
the information is quite a long read and I usually avoid using this
option unless I have to.&lt;br&gt;
Recently, I discovered a nifty trick.&lt;br&gt;
&lt;code&gt;repadmin /showrepl&lt;/code&gt; has a csv option, which isn't exciting by itself:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;repadmin /showrepl * /csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/showreplCsv.png"&gt;&lt;/p&gt;
&lt;p&gt;However, combined with PowerShell's &lt;code&gt;ConvertFrom-Csv&lt;/code&gt;, I could convert
the link status rows into objects and filter them within PowerShell:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;repadmin&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;showrepl&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-Csv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/showreplCsvPowerShell.png"&gt;&lt;/p&gt;
&lt;p&gt;Now, for example, if I wanted to view all links that had replication
errors, I could use  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;repadmin&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;showrepl&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-Csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Number Of Failures&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And I can even display all of the links in GridView, for ease of use:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;repadmin&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;showrepl&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-Csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ogv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/replGridView.png"&gt;&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="One-Liner"></category><category term="Active Directory"></category></entry><entry><title>Solving Event Log Subscription Error "0x138C"</title><link href="https://blog.backslasher.net/solving-event-log-subscription-error-0x138c.html" rel="alternate"></link><published>2013-04-09T13:06:00+02:00</published><updated>2013-04-09T13:06:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-04-09:/solving-event-log-subscription-error-0x138c.html</id><summary type="html">&lt;p&gt;Today I saw some collector-initiated event log subscriptions that
displayed a weird error, something like  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Windows Event Forward plugin can&amp;#39;t read any event from the query since the query returns no active channel. Please check channels in the query and make sure they exist and you have access to â€¦&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Today I saw some collector-initiated event log subscriptions that
displayed a weird error, something like  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Windows Event Forward plugin can&amp;#39;t read any event from the query since the query returns no active channel. Please check channels in the query and make sure they exist and you have access to them.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The reason for this message is that WinRM can't read the event log.&lt;br&gt;
If you haven't read my &lt;a href="https://blog.backslasher.net/windows-event-collection.html"&gt;long post about Event
Forwarding&lt;/a&gt;,
you should.&lt;br&gt;
The main point is that the WinRM service doesn't perform any
impersonation while reading the events. Instead, it reads the logs using
it's own security context and then verifies the client's permissions (if
there are any).&lt;br&gt;
Default Windows permissions grant &lt;code&gt;Network Service&lt;/code&gt; or similar
principals (e.g. &lt;code&gt;SERVICE&lt;/code&gt;) read access to all of the event logs, but
I've encountered software that modifies those permissions. Although it's
icky, you can view your current event log permissions using the command
line:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wevtutil gl LOGNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Look for &lt;code&gt;channelAccess&lt;/code&gt;. You can repair them if necessary (carefully).
You can also manually modify them &lt;a href="http://blog.oneboredadmin.com/2011/01/event-log-permissions-with-scripts.html"&gt;using registry&lt;/a&gt;.
Remember that you have to reboot the machine for those permissions to
apply.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="WinRM"></category><category term="Registry"></category><category term="Event Log"></category></entry><entry><title>Group Policy Security Filtering and Loopback</title><link href="https://blog.backslasher.net/group-policy-security-filtering-and-loopback.html" rel="alternate"></link><published>2013-03-19T18:13:00+01:00</published><updated>2013-03-19T18:13:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-03-19:/group-policy-security-filtering-and-loopback.html</id><summary type="html">&lt;p&gt;I recently discovered that when applying a GP object using loopback and
user security filtering (allowing only specific users to apply the GP),
the computer still needs read access to the GP.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPSecFiltering.png"&gt;&lt;/p&gt;
&lt;p&gt;Otherwise, the GP will show up as not applied due to it being
"inaccessible":  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPInaccessible.PNG"&gt;&lt;/p&gt;
&lt;p&gt;My guess is that â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently discovered that when applying a GP object using loopback and
user security filtering (allowing only specific users to apply the GP),
the computer still needs read access to the GP.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPSecFiltering.png"&gt;&lt;/p&gt;
&lt;p&gt;Otherwise, the GP will show up as not applied due to it being
"inaccessible":  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPInaccessible.PNG"&gt;&lt;/p&gt;
&lt;p&gt;My guess is that it's because the group policy engine is using the
computer account's security context to collect the loopback GPs.&lt;br&gt;
Basically, you have to give the computer account you wish to apply the
GP on read permissions on the GP object. You can simply use &lt;code&gt;Domain Computers&lt;/code&gt; if the content of the GP is not sensitive.&lt;br&gt;
You can either:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Grant Read permissions through the "Delegation" tab:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPDelegation1.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add the computers to the &lt;code&gt;security filtering&lt;/code&gt; (only if the GP has no
    computer settings, otherwise they will apply):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPDelegation2.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now the GP loopback will work fine.&lt;br&gt;
Enjoy!  &lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Security"></category><category term="Mysteries Solved"></category><category term="Active Directory"></category></entry><entry><title>Opening Group Policy Management Editor from the Command Line</title><link href="https://blog.backslasher.net/opening-group-policy-management-editor-from-the-command-line.html" rel="alternate"></link><published>2013-03-19T18:12:00+01:00</published><updated>2013-03-19T18:12:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-03-19:/opening-group-policy-management-editor-from-the-command-line.html</id><summary type="html">&lt;p&gt;Yesterday I wanted to open the Group Policy editor (or "Group Policy
Management Editor") for a specific GP object through PowerShell, but
there is no "Edit-GPO" cmdlet. I quickly checked from the task manager
how the GPMC opens the editor, and made my own:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Edit-GPO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$guid&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADDomain â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Yesterday I wanted to open the Group Policy editor (or "Group Policy
Management Editor") for a specific GP object through PowerShell, but
there is no "Edit-GPO" cmdlet. I quickly checked from the task manager
how the GPMC opens the editor, and made my own:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Edit-GPO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$guid&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADDomain&lt;/span&gt;
&lt;span class="c"&gt;# Operate on PDC to help consistency&lt;/span&gt;
&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$domain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDCEmulator&lt;/span&gt;
&lt;span class="nv"&gt;$PoliciesPath&lt;/span&gt;&lt;span class="p"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CN=Policies,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$domain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SystemsContainer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$GPPath&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;LDAP://{0}/CN={{{1}}},{2}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$guid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$PoliciesPath&lt;/span&gt;
&lt;span class="c"&gt;#$GPPath&lt;/span&gt;
&lt;span class="n"&gt;gpme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;msc&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/GPOBJECT:&lt;/span&gt;&lt;span class="se"&gt;`&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;$GPPath&lt;/span&gt;&lt;span class="se"&gt;`&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;My function binds to the PDC for the same reason the GPMC does - it
helps consistency. If you don't like it, you can modify the &lt;code&gt;$server&lt;/code&gt;
variable to point at something else.&lt;br&gt;
For example, this is how you open the gpme for the default domain
policy:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Default Domain Policy&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nb"&gt;Edit-GPO&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And this is how you open it for every GP with user settings enabled:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="n"&gt;-All&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GpoStatus&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[Microsoft.GroupPolicy.GpoStatus]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ComputerSettingsDisabled&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nb"&gt;Edit-GPO&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Programming"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Removing all Metro Apps from Windows 8</title><link href="https://blog.backslasher.net/removing-all-metro-apps-from-windows-8.html" rel="alternate"></link><published>2013-03-19T13:59:00+01:00</published><updated>2013-03-19T13:59:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-03-19:/removing-all-metro-apps-from-windows-8.html</id><summary type="html">&lt;p&gt;I wanted to open some photos today (to add to my blog) on my Windows 8
workstation, and it kept opening the full-screen metro app instead of
the normal picture viewer. It really annoyed me, and I looked for a
quick and dirty way to remove &lt;strong&gt;ALL&lt;/strong&gt; metro apps. This â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I wanted to open some photos today (to add to my blog) on my Windows 8
workstation, and it kept opening the full-screen metro app instead of
the normal picture viewer. It really annoyed me, and I looked for a
quick and dirty way to remove &lt;strong&gt;ALL&lt;/strong&gt; metro apps. This one-liner I wrote
quickly removes all metro apps that can be removed. I know I liked it!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-AppxPackage&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Remove-AppxPackage&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="n"&gt;SilentlyContinue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="One-Liner"></category></entry><entry><title>Wget in PowerShell v3</title><link href="https://blog.backslasher.net/wget-in-powershell-v3.html" rel="alternate"></link><published>2013-03-14T21:20:00+01:00</published><updated>2013-03-14T21:20:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-03-14:/wget-in-powershell-v3.html</id><summary type="html">&lt;p&gt;I've been envying my *nix brethren for having
&lt;a href="http://en.wikipedia.org/wiki/Wget"&gt;Wget&lt;/a&gt; for a long time. To get the
contents of a web page or download a file using http I had to use
workarounds that took more than one command - either creating a new
System.Net.WebRequest or using a BITS module â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been envying my *nix brethren for having
&lt;a href="http://en.wikipedia.org/wiki/Wget"&gt;Wget&lt;/a&gt; for a long time. To get the
contents of a web page or download a file using http I had to use
workarounds that took more than one command - either creating a new
System.Net.WebRequest or using a BITS module.&lt;br&gt;
Well - Since I started using PowerShell v3 I can be lazy once more,
thanks to
&lt;a href="http://technet.microsoft.com/en-us/library/hh849901.aspx"&gt;Invoke-WebRequest&lt;/a&gt;.&lt;br&gt;
For example, say you want to fetch the contents of my blog's frontpage:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://backslasher.net&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or maybe you'd like just the title?  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://backslasher.net&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ParsedHtml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or if I want to download google's logo to a file:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.google.com/images/srpr/logo4w.png&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-OutFile&lt;/span&gt; &lt;span class="p"&gt;~\&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;omgLogo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Proxying through Fiddler was never easier:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://Some.Site.com&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-Proxy&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://localhost:8888&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And lastly, if you want to hit your SharePoint site's homepage, but you
need to use kerberos authentication:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://SharepointServer/BestSite&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-UseDefaultCredentials&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Easy webbing!&lt;/p&gt;</content><category term="Microsoft"></category><category term="HTTP"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="HTML"></category></entry><entry><title>Copying Files In PowerShell - Using Windows Explorer UI</title><link href="https://blog.backslasher.net/copying-files-in-powershell-using-windows-explorer-ui.html" rel="alternate"></link><published>2013-02-19T14:35:00+01:00</published><updated>2013-02-19T14:35:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-02-19:/copying-files-in-powershell-using-windows-explorer-ui.html</id><summary type="html">&lt;p&gt;I know this trick is widely known, but I thought it's worth mentioning anyway.&lt;br&gt;
If you use PowerShell's Copy-Item to copy files, you don't get any progress report, ETA or statistics like you do when using Windows Explorer's file copy.  &lt;/p&gt;
&lt;p&gt;First, let's generate a random file using &lt;code&gt;fsutil&lt;/code&gt;. Note how â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I know this trick is widely known, but I thought it's worth mentioning anyway.&lt;br&gt;
If you use PowerShell's Copy-Item to copy files, you don't get any progress report, ETA or statistics like you do when using Windows Explorer's file copy.  &lt;/p&gt;
&lt;p&gt;First, let's generate a random file using &lt;code&gt;fsutil&lt;/code&gt;. Note how PowerShell
makes things easy by translating "2GB" to "2147483648":  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fsutil&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;createnew&lt;/span&gt; &lt;span class="n"&gt;big&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;2GB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When we copy the file via &lt;code&gt;Copy-Item&lt;/code&gt;, the best progress indication we can get is through the &lt;code&gt;-passthrough&lt;/code&gt; flag to see a list of files copied:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/copying-files-in-powershell-using/PowerShellCopyExplorer1.png"&gt;&lt;/p&gt;
&lt;p&gt;Compared to Windows Explorer's copy dialog:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/copying-files-in-powershell-using/PowerShellCopyExplorer2.png"&gt;&lt;/p&gt;
&lt;p&gt;I recently wrote a script that copies a lot of big files, and I wanted to spoil myself and get detailed information about the transfer - not just file names.&lt;br&gt;
After a quick search, I wrote this method to copy files using Explorer's Shell (represented as a COM object):  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Copy-ItemUsingExplorer&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$destination&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$CopyFlags&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nv"&gt;$objShell&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;-ComObject&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Shell.Application&amp;#39;&lt;/span&gt;    
    &lt;span class="nv"&gt;$objFolder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$objShell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NameSpace&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;gi &lt;/span&gt;&lt;span class="nv"&gt;$destination&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;FullName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;$objFolder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CopyHere&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;gi &lt;/span&gt;&lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;FullName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$CopyFlags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{0:x}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Replacing &lt;code&gt;CopyHere&lt;/code&gt; with &lt;code&gt;MoveHere&lt;/code&gt; will trigger a move operation instead.&lt;br&gt;
More reading about CopyHere (including the options offered by &lt;code&gt;CopyFlags&lt;/code&gt;) - &lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb787866(v=vs.85).aspx"&gt;Here&lt;/a&gt;&lt;br&gt;
Happy Scripting!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="FileSystem"></category><category term="PowerShell"></category></entry><entry><title>Testing actual SMB version</title><link href="https://blog.backslasher.net/testing-actual-smb-version.html" rel="alternate"></link><published>2013-02-14T07:52:00+01:00</published><updated>2013-02-14T07:52:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-02-14:/testing-actual-smb-version.html</id><summary type="html">&lt;p&gt;Ever since I got employed in my present company, I've been told that our
NetApp Filer supports SMB2 when used as NAS. &lt;br&gt;
I was always skeptic of that (due to high transfer times and being
unable to cancel mid-file) but had no easy way of testing (I guess I
could â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever since I got employed in my present company, I've been told that our
NetApp Filer supports SMB2 when used as NAS. &lt;br&gt;
I was always skeptic of that (due to high transfer times and being
unable to cancel mid-file) but had no easy way of testing (I guess I
could use Network Monitor, but I wasn't THAT skeptic), but I recently
learned that in Windows 8 it's super easy!&lt;br&gt;
&lt;a href="http://blogs.technet.com/b/josebda/archive/2012/06/06/windows-server-2012-which-version-of-the-smb-protocol-smb-1-0-smb-2-0-smb-2-1-or-smb-3-0-you-are-using-on-your-file-server.aspx"&gt;Jose Barreto's
post&lt;/a&gt;
taught me a little trick:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open PowerShell as an administrator (on a Windows 8 / Windows Server
    2012 machine)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perform an SMB operation against the file server (my Filer) like
    this:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;\\&lt;/span&gt;&lt;span class="n"&gt;Netapp&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;stupidShare&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute the command &lt;code&gt;Get-SmbConnection&lt;/code&gt;, filter for sessions to the
    file server and look at &lt;code&gt;Dialect&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-SmbConnection&lt;/span&gt; &lt;span class="n"&gt;-server&lt;/span&gt; &lt;span class="n"&gt;Netapp&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;fl&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result should look like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ServerName : Netapp
ShareName  : stupidShare
UserName   : Domain\OBA
Credential : Domain.Domains\OBA
Dialect    : 1.50
NumOpens   : 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As you can see, my suspicions were correct! My Windows 8 machine (that
definitely supports SMB3 and SMB2) and the NetApp Filer eventually
negotiated on SMB1, probably indicating that the Filer doesn't support
SMB2 (at least at the moment).&lt;br&gt;
No one can fool me with SMB versions anymore!  &lt;/p&gt;
&lt;p&gt;P.S.: Check out Jose's post for SMB support matrix, version difference
and some complex diagram with a raptor (no kidding).&lt;/p&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="Scripts"></category><category term="NetApp"></category><category term="SMB"></category><category term="FileSystem"></category><category term="PowerShell"></category><category term="CIFS"></category><category term="Performance"></category></entry><entry><title>Mass Setting Permissions on Remote Shares</title><link href="https://blog.backslasher.net/mass-setting-permissions-on-remote-shares.html" rel="alternate"></link><published>2013-02-13T07:26:00+01:00</published><updated>2013-02-13T07:26:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-02-13:/mass-setting-permissions-on-remote-shares.html</id><summary type="html">&lt;p&gt;I was recently asked by one of my teammates to add several NTFS
permissions to the root folders of a bunch of shares. Seems easy, but I
had two problems:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The shares were stored on a NetApp Filer, so I couldn't use any WMI
    trickery (or the new SMB module â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;I was recently asked by one of my teammates to add several NTFS
permissions to the root folders of a bunch of shares. Seems easy, but I
had two problems:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The shares were stored on a NetApp Filer, so I couldn't use any WMI
    trickery (or the new SMB module for Windows 8)&lt;/li&gt;
&lt;li&gt;There are about 2,000 shares, so the good old manual method is out
    of the question&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Of course, PowerShell has a solution.&lt;br&gt;
The script was composed of two parts:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Discovering all shares on the Filer&lt;/li&gt;
&lt;li&gt;Setting the permissions on each share&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style="font-size: large;"&gt;Discovery&lt;/span&gt;&lt;br&gt;
For the share discovery, I looked for an elegant way but could not find
one. Eventually I noticed that "net view" worked, so I figured I can
parse its output.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Shared resources at \\SERVER



Share name            Type   Used as  Comment

-------------------------------------------------------------------------------
Files                 Disk
Lexmark C772 PS (MS)  Print           Lexmark C772 PS (MS)
Lexmark E360dn (MS)   Print           Lexmark E360dn (MS)
NETLOGON              Disk            Logon server share
SYSVOL                Disk            Logon server share
The command completed successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, some cleanup is required.&lt;br&gt;
I started with skipping the first seven rows to remove the fancy
header.&lt;br&gt;
Then I filtered only rows that contain &lt;code&gt;disk&lt;/code&gt; with spaces before and at
least 5 after (even though there are no Print shares on the Filer
anyway).&lt;br&gt;
Finally, I used a regex trick (&lt;code&gt;-match&lt;/code&gt;ing to &lt;code&gt;out-null&lt;/code&gt; and extracting
members of &lt;code&gt;$matches&lt;/code&gt;) to extract the Share name from each line.&lt;br&gt;
This resulted in:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SERVERNAME&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="p"&gt;\\&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-s&lt;/span&gt; &lt;span class="n"&gt;7&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;disk\s{5,}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^(.+?)\s+Disk\s{5,}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Permission Settings&lt;/h3&gt;
&lt;p&gt;This part is pretty unadventurous, although it's the one most prominent
to fail (due to access denied errors etc.).&lt;br&gt;
I firstly created an array of ACEs (Access Control Entries) I wanted to
add:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemAccessRule&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DOMAIN\Filer Admins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FullControl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ContainerInherit,ObjectInherit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemAccessRule&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DOMAIN\Filer Readers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Read&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ContainerInherit,ObjectInherit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After this, it's all about enumerating the shares and adding the ACEs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$server\$_&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt;
 &lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
 &lt;span class="nb"&gt;set-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that's it.&lt;/p&gt;
&lt;h3&gt;Decorations&lt;/h3&gt;
&lt;p&gt;Because I wanted to add error handling and basic reporting, I added to
the &lt;code&gt;foreach&lt;/code&gt; block:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; blocks&lt;/li&gt;
&lt;li&gt;Generation of a small report object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thusly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$server\$_&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;$err&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt;
 &lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
 &lt;span class="nb"&gt;set-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$err&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="n"&gt;5&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$share&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-gridview&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that's it.&lt;br&gt;
The whole script looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SERVERNAME&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Get all shares&lt;/span&gt;
&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="p"&gt;\\&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-s&lt;/span&gt; &lt;span class="n"&gt;7&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;disk\s{5,}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^(.+?)\s+Disk\s{5,}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;

&lt;span class="c"&gt;# Prepare new ACEs&lt;/span&gt;
&lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemAccessRule&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DOMAIN\Filer Admins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FullControl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ContainerInherit,ObjectInherit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemAccessRule&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DOMAIN\Filer Readers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Read&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ContainerInherit,ObjectInherit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Add ACEs to share ACLs&lt;/span&gt;
&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$server\$_&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;$err&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt;
 &lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
 &lt;span class="nb"&gt;set-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$err&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="n"&gt;5&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$share&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-gridview&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="NetApp"></category><category term="FileSystem"></category><category term="PowerShell"></category></entry><entry><title>Copying List Permissions in SharePoint 2010</title><link href="https://blog.backslasher.net/copying-list-permissions-in-sharepoint.html" rel="alternate"></link><published>2013-01-05T17:31:00+01:00</published><updated>2013-01-05T17:31:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-01-05:/copying-list-permissions-in-sharepoint.html</id><summary type="html">&lt;p&gt;I just wrote a small script to copy permissions from one SharePoint list to the other.  &lt;/p&gt;
&lt;h3&gt;Things to consider&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Custom permission levels are not preserved:&lt;/strong&gt; For some reason, my method of copying permissions isn't custom-permission-level friendly. The customized permissions will still be copied, but an auto-generated permission level will be â€¦&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I just wrote a small script to copy permissions from one SharePoint list to the other.  &lt;/p&gt;
&lt;h3&gt;Things to consider&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Custom permission levels are not preserved:&lt;/strong&gt; For some reason, my method of copying permissions isn't custom-permission-level friendly. The customized permissions will still be copied, but an auto-generated permission level will be used.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Only same-web list tested:&lt;/strong&gt; I only tested copying permissions between two lists in the same web (site). If you tweak the script to work on lists from different sites, make sure to test it first!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Script&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="nv"&gt;$webAddress&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://server/site/url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$sourceTitle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SourceListTitle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$destTitle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DestinationListTitle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c"&gt;# Reset permissions on child objects (items)?&lt;/span&gt;
    &lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$resetChildObjects&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$web&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-spweb&lt;/span&gt; &lt;span class="nv"&gt;$webAddress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$srcList&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$web&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$sourceTitle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;$dstList&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$web&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$destTitle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$srcList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Permissions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Inherited&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$dstList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResetRoleInheritance&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$dstList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BreakRoleInheritance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$resetChildObjects&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;$srcList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Permissions&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="nv"&gt;$dstList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Permissions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Member&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PermissionMask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$dstList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="PowerShell"></category></entry><entry><title>Finding WSUS Clients by SusClientId</title><link href="https://blog.backslasher.net/finding-wsus-clients-by-susclientid.html" rel="alternate"></link><published>2013-01-02T11:41:00+01:00</published><updated>2013-01-02T11:41:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-01-02:/finding-wsus-clients-by-susclientid.html</id><summary type="html">&lt;p&gt;Today someone showed me a strange problem - he had servers that recently
installed new updates from his WSUS server, but he couldn't find them in
the WSUS console by their name.&lt;br&gt;
Obviously the servers have been renamed and didn't have time to report
to the WSUS server, but he wanted â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today someone showed me a strange problem - he had servers that recently
installed new updates from his WSUS server, but he couldn't find them in
the WSUS console by their name.&lt;br&gt;
Obviously the servers have been renamed and didn't have time to report
to the WSUS server, but he wanted to find the client entry in WSUS
nevertheless.&lt;br&gt;
I wrote him a small script that finds the client's &lt;code&gt;SusClientId&lt;/code&gt; (which is
a self-generated guid that is used to identify the client in the WSUS
server), searches for that entry in the WSUS server and retrives the
name (so you can go back to messing with the WSUS console).&lt;br&gt;
One interesting thing to note about this script - all of the WSUS server
connection data is compacted into a uri. I find it much easier than to
specify a server name, port number and whether to use https. Also, it's
built around Windows Server 2012's module, so it won't work "as is" on
Windows Server 2008R2.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="nv"&gt;$wsusUri&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://WSUS-Server:443&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$ComputerName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;OtherServer&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$wsus&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-WsusServer&lt;/span&gt; &lt;span class="nv"&gt;$wsusUri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Host&lt;/span&gt; &lt;span class="n"&gt;-PortNumber&lt;/span&gt; &lt;span class="nv"&gt;$wsusUri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Port&lt;/span&gt; &lt;span class="n"&gt;-UseSsl&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wsusUri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scheme&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$baseKey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[Microsoft.Win32.RegistryKey]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OpenRemoteBaseKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LocalMachine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$ComputerName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$baseKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OpenSubKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SusClientId&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$wsus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetComputerTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;FullDomainName&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="WSUS"></category><category term="Registry"></category></entry><entry><title>Reverse Lookup in SharePoint 2010</title><link href="https://blog.backslasher.net/reverse-lookup-in-sharepoint-2010.html" rel="alternate"></link><published>2012-12-29T15:34:00+01:00</published><updated>2012-12-29T15:34:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-12-29:/reverse-lookup-in-sharepoint-2010.html</id><summary type="html">&lt;p&gt;Every SharePoint noob knows that one can create list lookup
relationships, like specifying that a book belongs in a specific
bookshelf.&lt;br&gt;
What I didn't know until today is SharePoint 2010 supports "reverse
lookup" out of the box!&lt;/p&gt;
&lt;h3&gt;What's Lookup?&lt;/h3&gt;
&lt;p&gt;Consider this.You have 2 lists in your SharePoint site - one â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Every SharePoint noob knows that one can create list lookup
relationships, like specifying that a book belongs in a specific
bookshelf.&lt;br&gt;
What I didn't know until today is SharePoint 2010 supports "reverse
lookup" out of the box!&lt;/p&gt;
&lt;h3&gt;What's Lookup?&lt;/h3&gt;
&lt;p&gt;Consider this.You have 2 lists in your SharePoint site - one that
contains books, and one that contains bookshelves:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup1.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup2.png"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;You now create a lookup column in the "Books" list that contains the
bookshelf that the book belongs to. That's easy:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup3.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup4.png"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;And now you can easily see where every book belongs to, and you have
nice options such as "data integrity enforcement" (not allowing books to
remain in a deleted bookshelf) and "linked columns" (adding additional
bookshelf-related data to the book list based on the relevant
bookshelf)&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup5.png"&gt;  &lt;/p&gt;
&lt;h3&gt;What's &lt;strong&gt;reverse&lt;/strong&gt; Lookup?&lt;/h3&gt;
&lt;p&gt;After you finisehd writing your library contents into SharePoint, you
want to see all of the books belonging to each bookshelf.&lt;br&gt;
A tried and true idea is to filter the book list using the bookshelf
column, like this:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup6.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup7.png"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Which is fine, but very troublesome. I wanted the exact opposite of
lookup - the ability to view from every bookshelf item the matching
books!&lt;/p&gt;
&lt;h3&gt;My original idea&lt;/h3&gt;
&lt;p&gt;My original plan was to create a custom field type that contains no data
and has a list-viewing webpart in its display mode that shows the
referencing items from the child list (the book list in our case). I was
halfway done when I thought about how to call my blog post, and decided
to Google that before making any further progress.&lt;br&gt;
For the curious ones, I was trying to find out how to add field
parameters (such as "allow multiple selections") for my custom field.  &lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;I stumbled upon some articles announcing that such a thing exists in
SharePoint 2010 OOTB but didn't mention where it's located. So I started
exploring, and found it! It's called "Related List" under "Insert". For
our example, I'll add a webpart showing the books contained in the shelf
in the shelf list's item display form:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup8.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup9.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup10.png"&gt;&lt;br&gt;
You can now customize the webpart in any normal way, and the best thing
- it's notÂ  breaking the form in any way (you can still customize field
display etc. thorough the setting pages).&lt;br&gt;
The end result looks like that:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup11.png"&gt;  &lt;/p&gt;
&lt;p&gt;Enjoy your 2-way lookup!&lt;/p&gt;
&lt;/p&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="SharePoint"></category><category term="Office"></category></entry><entry><title>Making Sure Only Your PDC is Scavanging DNS Records</title><link href="https://blog.backslasher.net/making-sure-only-your-pdc-is-scavanging.html" rel="alternate"></link><published>2012-12-18T17:25:00+01:00</published><updated>2012-12-18T17:25:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-12-18:/making-sure-only-your-pdc-is-scavanging.html</id><summary type="html">&lt;p&gt;I recently looked over out DNS server settings, and I found out that
more than one DNS server (DC in our case) was scavenging records.&lt;br&gt;
In order to put that right, I made a small script that makes sure that
only the PDC is scavenging records:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="nv"&gt;$scavengeInterval&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;7&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;Get-ADDomainController â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I recently looked over out DNS server settings, and I found out that
more than one DNS server (DC in our case) was scavenging records.&lt;br&gt;
In order to put that right, I made a small script that makes sure that
only the PDC is scavenging records:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="nv"&gt;$scavengeInterval&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;7&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;Get-ADDomainController&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;MicrosoftDNS_Server&lt;/span&gt; &lt;span class="n"&gt;-Namespace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root\microsoftdns&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-comp&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OperationMasterRoles&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;PDCEmulator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ScavengingInterval&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$scavengeInterval&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ScavengingInterval&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="DNS"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Brute Force Guessing for User Passwords</title><link href="https://blog.backslasher.net/brute-force-guessing-for-user-passwords.html" rel="alternate"></link><published>2012-12-16T17:26:00+01:00</published><updated>2012-12-16T17:26:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-12-16:/brute-force-guessing-for-user-passwords.html</id><summary type="html">&lt;p&gt;Our security team complained to me that they found a lot of users with trivial passwords simply by trying to log in as them.&lt;br&gt;
They asked me to write them a script to speed up the process, so I wrote them my brute force guessing script.&lt;br&gt;
It's not very stealthy â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Our security team complained to me that they found a lot of users with trivial passwords simply by trying to log in as them.&lt;br&gt;
They asked me to write them a script to speed up the process, so I wrote them my brute force guessing script.&lt;br&gt;
It's not very stealthy, as it's doing multiple authentication attempts against the Domain Controller (and unlocks the user in between).&lt;br&gt;
It's basically designed for domain admins wishing to search for one or two particular passwords on their domain without bothering to analyze the &lt;code&gt;ntds.dit&lt;/code&gt; file.&lt;br&gt;
It can optionally re-lock users it unlocked during testing (if you don't want to disturb anything...)&lt;br&gt;
The parameters are simple - the users and passwords you wish to test and the relock parameters (whether to relock and how many times a wrong password should be attempted to lock a user).  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[string[]&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$passwords&lt;/span&gt;&lt;span class="p"&gt;=(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Password1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Password2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$reLock&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$lockRepeats&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;3&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;test-UserPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$userName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$Password&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$locked&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADUser&lt;/span&gt; &lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;LockedOut&lt;/span&gt; &lt;span class="n"&gt;-errorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;LockedOut&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$locked&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Unlock-AdAccount&lt;/span&gt; &lt;span class="nv"&gt;$userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;directoryServices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DirectoryEntry&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$userName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$users&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Get-ADUser&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;LockedOut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;canonicalName&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="k"&gt;Continue&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;samAccountName&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Debug&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Working on user $userName&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$matchPass&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$passwords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$matchPass&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;++)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$passwords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Debug&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Testing user $userName : $password&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$passOk&lt;/span&gt;  &lt;span class="nb"&gt;test-UserPassword&lt;/span&gt; &lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="nv"&gt;$password&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$passOk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;Write-Debug&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found $userName : $password&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;$matchPass&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$reLock&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LockedOut&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;# Relock the user&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$lockRepeats&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;++){&lt;/span&gt;&lt;span class="nb"&gt;test-UserPassword&lt;/span&gt; &lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;SamAccountName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;canonicalName&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OriginallyLocked&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LockedOut&lt;/span&gt;&lt;span class="p"&gt;}},@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MatchingPassword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$matchPass&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy your brute forcing!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Automaticlly Updating DNS Server Addresses In A Domain Machine</title><link href="https://blog.backslasher.net/automaticlly-updating-dns-server.html" rel="alternate"></link><published>2012-10-06T20:50:00+02:00</published><updated>2012-10-06T20:50:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-10-06:/automaticlly-updating-dns-server.html</id><summary type="html">&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;I was recently requested to make sure that our machine's network interface cards (NICs) have their DNS queries pointed to "the correct servers".&lt;br&gt;
I decided that every machine should point to its domain's DNS servers, and it's their job to redirect queries (if needed) to other DNS servers â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;I was recently requested to make sure that our machine's network interface cards (NICs) have their DNS queries pointed to "the correct servers".&lt;br&gt;
I decided that every machine should point to its domain's DNS servers, and it's their job to redirect queries (if needed) to other DNS servers. Of course there are exceptions, but it seems like a good solution.&lt;br&gt;
In most companies, the domain controllers are the domain DNS servers, but some domain controllers may not be DNS servers, and some setups might be using other servers (like a secondary, read-only server for backup) to answer domain queries.&lt;br&gt;
So if you're going to implement my solution, you need to think about what are "the correct servers" in your case.&lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;The solution to "the correct servers" I found is to query for A records for the domain name itself.&lt;br&gt;
DCs make sure to register their own records there, and if a sysadmin wants to add another DNS server, he only has to create an A record with the domain name pointing to its IP.&lt;br&gt;
Ideally, I would have queried for the NameServer records of the domain (&lt;code&gt;NS&lt;/code&gt; type), since it's actually equivalent to asking the DNS servers "who can answer
queries on this domain?" but it wasn't so easy, because my 3 options for querying are:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Using&lt;/strong&gt; &lt;code&gt;[System.Net.Dns]::GetHostAddresses&lt;/code&gt;:&lt;br&gt;
    Sadly, only &lt;code&gt;A&lt;/code&gt;-type records are supported, which means I won't be able to query for &lt;code&gt;NS&lt;/code&gt; records&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Using&lt;/strong&gt; &lt;code&gt;Add-Type&lt;/code&gt; &lt;strong&gt;to compile C# code that uses&lt;/strong&gt; &lt;code&gt;DLLImport&lt;/code&gt; &lt;strong&gt;on&lt;/strong&gt; &lt;code&gt;dnsapi.dll&lt;/code&gt;&lt;strong&gt;, creates a wrapper function and call that function from
    PowerShell&lt;/strong&gt;:&lt;br&gt;
    It creates a hard-to-maintain script that throws win32 errors when fails (rather that simple .net exceptions) and can stop working on the next version of Windows&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Calling&lt;/strong&gt; &lt;code&gt;NSLookup&lt;/code&gt; &lt;strong&gt;and parsing the results&lt;/strong&gt;:&lt;br&gt;
    NSLookup's output isn't easy to read as a human - I have no intention to start explaining to a machine how to parse it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And so I ended up using the first method, because I figured that it's not that much of a crime, since I'm still getting my information from a domain-global location.&lt;/p&gt;
&lt;h3&gt;The Logic&lt;/h3&gt;
&lt;p&gt;The script itself is pretty short, and works only on the local machine (since I'm planning to use SCCM or something similar to invoke it on all of my machines):  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The machine's domain is determined&lt;/li&gt;
&lt;li&gt;All NICs with IP enabled (i.e. that are actually used) are being queried through WMI&lt;/li&gt;
&lt;li&gt;All IP addresses are collected from the NICs&lt;/li&gt;
&lt;li&gt;All NICs that "belong" to the domain (have the domain name as a DNS search suffix, thus filtering non-domain NICs, like internet-facing
    or iSCSI ones) are being collected&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt;-type records of the machine's domain are being queried, excluding
    ones that are matching the machine's IP addresses (if such record is
    found, the machine is a DNS server itself)&lt;/li&gt;
&lt;li&gt;If the machine is a DNS server (as found in step 5), the address
    &lt;code&gt;127.0.0.1&lt;/code&gt; is added to the top of the list, to make sure it tries
    querying itself first&lt;/li&gt;
&lt;li&gt;The generated DNS list is being written into every domain-related
    NIC&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;The Code&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$compDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[DirectoryServices.ActiveDirectory.Domain]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetCurrentDomain&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;
&lt;span class="nv"&gt;$nics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;win32_networkAdapterConfiguration&lt;/span&gt; &lt;span class="n"&gt;-filter&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IPEnabled=True&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$ipAddresses&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$nics&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;IPAddress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$dnsNics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$nics&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DNSDomainSuffixSearchOrder&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="nv"&gt;$compDomain&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DNSServerSearchOrder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$isDNSServer&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;$dnsAddresses&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="no"&gt;[net.dns]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetHostAddresses&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$compDomain&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;IPAddressToString&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ipAddresses&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nv"&gt;$isDNSServer&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$isDNSServer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$dnsAddresses&lt;/span&gt; &lt;span class="p"&gt;=@(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="nv"&gt;$dnsAddresses&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$dnsNics&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetDNSServerSearchOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$dnsAddresses&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Have fun resolving!&lt;/p&gt;</content><category term="Microsoft"></category><category term="DNS"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Applying SPWebConfigModification objects safely</title><link href="https://blog.backslasher.net/applying-spwebconfigmodification-objects-safely.html" rel="alternate"></link><published>2012-10-04T15:38:00+02:00</published><updated>2012-10-04T15:38:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-10-04:/applying-spwebconfigmodification-objects-safely.html</id><summary type="html">&lt;p&gt;My SharePoint team and I wanted to move to &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.administration.spwebconfigmodification.aspx"&gt;SPWebConfigModification&lt;/a&gt; rather that just modifying the web.config file manually, but I was always worried that applying faulty modifications will ruin my file.&lt;br&gt;
Why?&lt;/p&gt;
&lt;h3&gt;How SPWebConfigModification objects work&lt;/h3&gt;
&lt;p&gt;Some code requires you to modify the SharePoint web application's &lt;code&gt;web.config&lt;/code&gt; file â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;My SharePoint team and I wanted to move to &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.administration.spwebconfigmodification.aspx"&gt;SPWebConfigModification&lt;/a&gt; rather that just modifying the web.config file manually, but I was always worried that applying faulty modifications will ruin my file.&lt;br&gt;
Why?&lt;/p&gt;
&lt;h3&gt;How SPWebConfigModification objects work&lt;/h3&gt;
&lt;p&gt;Some code requires you to modify the SharePoint web application's &lt;code&gt;web.config&lt;/code&gt; file.&lt;br&gt;
SharePoint handles some modifications automatically, such as &lt;code&gt;SafeControl&lt;/code&gt; entries for controls deployed via WSPs. But you might want to add an SQL connection string, or some custom HTTP modules (axd files).&lt;br&gt;
You can obviously change the web.config files manually, but:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's easy to lose track of your modifications&lt;/li&gt;
&lt;li&gt;Every new server's config has to be updated manually&lt;/li&gt;
&lt;li&gt;You could get inconsistent config files between your servers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Microsoft's solution - &lt;code&gt;SPWebConfigModification&lt;/code&gt;! These objects are stored
inside the SPWebApplication, and every one of them represents a single
modification to its parent's web.config file. It has four important
properties:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;:&lt;br&gt;
    What type of modification is defined. It can be:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;EnsureChildNode&lt;/strong&gt;: Adds an element as a child to the specified parent, e.g. &lt;code&gt;&amp;lt;parent&amp;gt;&amp;lt;bla blu="bli"&amp;gt;&amp;lt;/parent&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EnsureAttribute&lt;/strong&gt;: Adds an attribute to the parent (e.g. &lt;code&gt;&amp;lt;parent blu="bli"&amp;gt;&lt;/code&gt;). The attribute can already exist, in which case its value is modified&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EnsureSection&lt;/strong&gt;: Adds a section as a child to the specified parent. A "section" is an empty element, and removing the &lt;code&gt;SPWebConfigModification&lt;/code&gt; won't remove the element, so I don't use it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Path&lt;/strong&gt;:&lt;br&gt;
  An XPath expression pointing the modification's parent.&lt;br&gt;
  Used only when removing the modification&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;:&lt;br&gt;
  The name of the modification.&lt;br&gt;
  If the type is &lt;code&gt;EnsureChildNode&lt;/code&gt;, it's an XPath executed on the parent and used to locate the node when it needs to be removed.&lt;br&gt;
  If the type is &lt;code&gt;EnsureAttribute&lt;/code&gt;, it's simply the attribute's name.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value&lt;/strong&gt;:&lt;br&gt;
  The actual modification. If it's an &lt;code&gt;EnsureChildNode&lt;/code&gt;, it's the entire node (&lt;code&gt;&amp;lt;item attribute="value"&amp;gt;&amp;lt;stuff&amp;gt;&amp;lt;/item&amp;gt;&lt;/code&gt;)&lt;br&gt;
  If its type is &lt;code&gt;EnsureAttribute&lt;/code&gt;, it's simply the attribute's value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many complaints about &lt;code&gt;SPWebConfigModifications&lt;/code&gt; that can be easily found by googling (binging?) "SPWebConfigModifications", but my biggest problem with it was that it was simply unsafe to use - SharePoint offers no validation for these objects.&lt;br&gt;
You may find yourself with modifications that weren't applied due to a missing parent, or modifications that won't be deleted from the web.config because the name isn't written correctly (the XPath returns nothing, or the wrong node), and without SharePoint admitting that the modifications failed to execute.&lt;br&gt;
After some research, I built this script.&lt;br&gt;
Using this script will help make sure your SPWebConfigModifications won't break, either now or during their removal. You can even use a blank CSV to validate your current modifications!  &lt;/p&gt;
&lt;h3&gt;The inner workings&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Apply-WebConfigModifications&lt;/code&gt; applies web.config modifications (duh) from
a csv file thusly:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Finds all relevant SPWebApplications&lt;/li&gt;
&lt;li&gt;For every one, loads a CSV file containing all of the web modifications
required on the web application&lt;/li&gt;
&lt;li&gt;Fetches all existing web modifications from the web application&lt;/li&gt;
&lt;li&gt;Creates an action list, classifying each modification as either &lt;code&gt;add&lt;/code&gt;,
&lt;code&gt;delete&lt;/code&gt; or &lt;code&gt;unchanged&lt;/code&gt; (instead of updating it deletes and adds the
modification again, probably safer)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Loads the local web.config, and simulates the web modification process,
making sure for each modification:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If the modification should be added, that no element matching the path/name XPath already exists, and that after adding the element, a single element matching the XPath exists.&lt;/li&gt;
&lt;li&gt;If it should be deleted / unchanged, that a single element matching the path/name exists.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It also actually performs those actions (without saving the file, obviously), and makes sure that there are no clashing modifications (for example, that an element that's about to be removed isn't used by a new element).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The user gets a report of every modification and its errors, and if the
user approves, the web modifications are actually updated in the
SharePoint farm (removals first, additions later)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;A mutex (added to the SPFarm's property bag) is used to make sure that
only one script runs at a time.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Additional features:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Interactive mode - can be disabled when executing using a scheduled
    task or another non-interactive way, which then applies the
    modifications if there are no errors, and aborts if there are&lt;/li&gt;
&lt;li&gt;Force, which applies the modifications even if there are errors&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Parameters:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WebAppUrls&lt;/code&gt;: An array of urls, names or port numbers (e.g. '80')
    that need their WebConfigModifications updated. Each webapp will
    need to have a matching file in the source directory called
    WebWEBAPPNAME.csv&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SourceDir&lt;/code&gt;: The directory containing the CSV files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Interactive&lt;/code&gt;: Ask the user whether to continue if there are simulation errors (or
    automatically abort instead)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;testInternaly&lt;/code&gt;: Simulate changes to the web.config before
    actually applying the modifications&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whatIf&lt;/code&gt;: Don't actually apply the modifications&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Force&lt;/code&gt;: Ignore simulation errors and apply anyway&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ShowUnchanged&lt;/code&gt;: Report unchanged values to the console (rather than just
    the changed ones)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UseMutex&lt;/code&gt;: Use the mutex system&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MutexPhrase&lt;/code&gt;: The PropertyBag key used for the mutex&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ModificationString&lt;/code&gt;: The owner of the new SPWebConfigModification
    objects&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Migrating to SPWebConfigModifications&lt;/h3&gt;
&lt;p&gt;Moving to WebConfigModifications is complicated for whoever is
responsible to maintain the web.config, and nerve-stretching for the
sysadmin. You have to make sure that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All modifications are tested in pre-production environments, in
    order to avoid last-moment changes in the file&lt;/li&gt;
&lt;li&gt;No one should be allowed to modify the web.config manually, or via
    means other than SPWebConfigModifications - even other programs or
    via the IIS console. Inconsistency can ruin the modifications, as
    they might be applied differently to different servers around your
    farm. You can try finding the modification that the software is
    supposed to do, and adding it in the csv.&lt;/li&gt;
&lt;li&gt;Each modification file is applied to a different web application -
    create multiple CSVs if needed&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Script&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$WebAppUrls&lt;/span&gt;&lt;span class="p"&gt;=@(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;80&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$SourceDir&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:\temp\Config\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$Interactive&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="c"&gt;#Tests&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$testInternaly&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[Switch]&lt;/span&gt;&lt;span class="nv"&gt;$whatIf&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[Switch]&lt;/span&gt;&lt;span class="nv"&gt;$Force&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$ShowUnchanged&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="c"&gt;#Mutex&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$UseMutex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OBAWebConfigModifications&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="c"&gt;#Modification&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$ModificationString&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OBA&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nb"&gt;gsnp &lt;/span&gt;&lt;span class="p"&gt;|?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sharepoint&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;asnp &lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sharepoint&lt;/span&gt;&lt;span class="p"&gt;*}&lt;/span&gt;
&lt;span class="c"&gt;#$ErrorActionPreference = &amp;#39;stop&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Wait-ConfigTimerJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Action&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$stop&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;diagnostics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stopwatch&lt;/span&gt;
    &lt;span class="nv"&gt;$stop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-SPTimerjob&lt;/span&gt; &lt;span class="n"&gt;job-webconfig-modification&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nv"&gt;$waitTime&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$stop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Elapsed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\.\d+$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Progress&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Applying Modifications - $webAppUrl - $Action&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Waiting for modification to finish for $waitTime&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-PercentComplete&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sec&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="n"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;Start-Sleep&lt;/span&gt; &lt;span class="n"&gt;-sec&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Get-NodeParent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$errorAction&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$parents&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No matching parent found&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$errorAction&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Too many parents found&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$errorAction&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$parents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Compare-Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt; &lt;span class="o"&gt;-ceq&lt;/span&gt; &lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-ceq&lt;/span&gt; &lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="o"&gt;-ceq&lt;/span&gt; &lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-ceq&lt;/span&gt; &lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$UseMutex&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$whatIf&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="c"&gt;# Check mutex&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContainsKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;# Extract mutex&lt;/span&gt;
        &lt;span class="nv"&gt;$currentMutex&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-CSV&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="nv"&gt;$currentMutex&lt;/span&gt; &lt;span class="n"&gt;-WarningAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Inquire&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# Apply mutex&lt;/span&gt;
    &lt;span class="nv"&gt;$myMutex&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$pID&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
                            &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UserName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$env:Username&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
                            &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$env:ComputerName&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
                            &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;StartTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hh:mm:ss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ConvertTo-Csv&lt;/span&gt; &lt;span class="nv"&gt;$myMutex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;##START&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$webAppUrls&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;# Load config&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^\d+$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$candidates&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nb"&gt;Get-SPWebApplication&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{(&lt;/span&gt;&lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$candidates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$candidates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$candidates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;&amp;lt;#Skip this port#&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;write-error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No single matching WebApp found&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-SPWebApplication&lt;/span&gt; &lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$configPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;join-path&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IisSettings&lt;/span&gt;&lt;span class="no"&gt;[[Microsoft.SharePoint.Administration.SPUrlZone]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;web.config&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[IO.File]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ReadAllText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$configPath&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c"&gt;# Find modificationsFile&lt;/span&gt;
    &lt;span class="nv"&gt;$modificationsFile&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;join-path&lt;/span&gt; &lt;span class="nv"&gt;$SourceDir&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Web&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt; &lt;span class="nv"&gt;$modificationsFile&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;write-error&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Excpected file &amp;#39;$modificationsFile&amp;#39; not found for $webAppUrl&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# Load modifications from file&lt;/span&gt;
    &lt;span class="nv"&gt;$newModifications&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nb"&gt;Import-Csv&lt;/span&gt; &lt;span class="nv"&gt;$modificationsFile&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="c"&gt;# Load current modifications&lt;/span&gt;
    &lt;span class="nv"&gt;$currentModifications&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebConfigModifications&lt;/span&gt;

    &lt;span class="c"&gt;# Create action list&lt;/span&gt;
        &lt;span class="c"&gt;# Remove entries found in currentModifications but not in newModifications&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@();&lt;/span&gt;
        &lt;span class="nv"&gt;$currentModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$cur&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$newModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;Compare-node&lt;/span&gt; &lt;span class="nv"&gt;$cur&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;})}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="c"&gt;#$objNew = new-object object;&lt;/span&gt;
        &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WebApp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Action&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Remove&amp;#39;&lt;/span&gt;
        &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Err&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$objNew&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;# Add entries found in newModifications but not in currentModifications&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$newModifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;   
            &lt;span class="nv"&gt;$newModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$new&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$currentModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;Compare-node&lt;/span&gt; &lt;span class="nv"&gt;$new&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;})}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="c"&gt;#$objNew = new-object object;&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WebApp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Action&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Add&amp;#39;&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Err&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
            &lt;span class="nv"&gt;$actionList&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$objNew&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;# Mark entries found in both&lt;/span&gt;
        &lt;span class="nv"&gt;$currentModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$cur&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$newModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;Compare-node&lt;/span&gt; &lt;span class="nv"&gt;$cur&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;})}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WebApp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Action&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unchanged&amp;#39;&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Err&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
            &lt;span class="nv"&gt;$actionList&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$objNew&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;# Simulate actions on $config&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$testInternaly&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c"&gt;# Remove nodes&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Remove&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-NodeParent&lt;/span&gt; &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Parent not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureAttribute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetNamedItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;#Fake remove, because has no effect#&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Attribute not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureChildNode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                        &lt;span class="nv"&gt;$items&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Child node not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Too many matching child nodes found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                            &lt;span class="c"&gt;# Remove item&lt;/span&gt;
                            &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RemoveChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;# Add nodes&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Add&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-NodeParent&lt;/span&gt; &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Parent not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureAttribute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c"&gt;# Adding has no effect&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureChildNode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                        &lt;span class="nv"&gt;$items&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;innerXml&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;
                            &lt;span class="c"&gt;# Make sure now node exists!&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Node was added, but was not found by name.&amp;#39;&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Matching child node already exists&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;# Verify existing nodes&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unchanged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-NodeParent&lt;/span&gt; &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Parent not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureAttribute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c"&gt;# Make sure attribute still exists&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetNamedItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                            &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Attribute is missing&amp;#39;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureChildNode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                        &lt;span class="nv"&gt;$items&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Name not found&amp;#39;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                            &lt;span class="c"&gt;# Do nothing, success finding node&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Duplicate names detected&amp;#39;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;# Review results&lt;/span&gt;
    &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$ShowUnchanged&lt;/span&gt; &lt;span class="o"&gt;-or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unchanged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$ShowUnchanged&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nv"&gt;$hiddenCount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unchanged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;measure &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hiddenCount&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;There are $hiddenCount unchanged values hidden&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-WarningAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Continue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nv"&gt;$errorCount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(@(&lt;/span&gt;&lt;span class="nv"&gt;$ActionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Interactive&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;There are $errorCount errors during simulation. Proceed?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-WarningAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Inquire&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$errorCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$Force&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found $errorCount errors. Aborting&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found $errorCount errors. Carrying on because FORCE is specified&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c"&gt;# Do nothing, modifications will be applied&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# Remove / Add SPWebConfigModifications&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$whatIf&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Whatif: applying changes&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;#Remove nodes&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$UseMutex&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="c"&gt;# Extract mutex&lt;/span&gt;
            &lt;span class="nv"&gt;$currentMutex&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-CSV&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$myMutex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="nv"&gt;$currentMutex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
                &lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Wrong mutex is present :&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$currentMutex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-WarningAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Inquire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Remove&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c"&gt;#$removables = @($webApp.WebConfigModifications | ?{($_.Path -eq $Action.Path) -and ($_.Name -eq $Action.Name) -and ($_.Value -eq $Action.Value) -and ($_.Type.toString() -eq $Action.Type.toString())})&lt;/span&gt;
            &lt;span class="nv"&gt;$removables&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebConfigModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;Compare-Node&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="nv"&gt;$Action&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$removables&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;write-error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Could not find matching WebConfigModification&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Inquire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$removables&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebConfigModifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;#Apply&lt;/span&gt;
        &lt;span class="nv"&gt;$method&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[microsoft.Sharepoint.Administration.SPServiceCollection]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GetValue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;MakeGenericMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[Microsoft.Sharepoint.administration.SPWebService]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$service&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Farm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$webapp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;$service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplyWebConfigModifications&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="nb"&gt;Wait-ConfigTimerJob&lt;/span&gt; &lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Removing&amp;#39;&lt;/span&gt;

        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Add&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Microsoft.SharePoint.Administration.SPWebConfigModification&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Type &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Type&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Owner&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ModificationString&lt;/span&gt;
            &lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebConfigModifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;#Apply&lt;/span&gt;
        &lt;span class="nv"&gt;$method&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[microsoft.Sharepoint.Administration.SPServiceCollection]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GetValue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;MakeGenericMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[Microsoft.Sharepoint.administration.SPWebService]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$service&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Farm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$webapp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;$service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplyWebConfigModifications&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="nb"&gt;Wait-ConfigTimerJob&lt;/span&gt; &lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Adding&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;##END&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$UseMutex&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Happy Scripting!&lt;/p&gt;</content><category term="Microsoft"></category><category term="ASP.net"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="Web.Config"></category><category term="PowerShell"></category></entry><entry><title>Updating VMware discovery info in Active Directory</title><link href="https://blog.backslasher.net/updating-vmware-discovery-info-in-active-directory.html" rel="alternate"></link><published>2012-10-02T14:54:00+02:00</published><updated>2012-10-02T14:54:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-10-02:/updating-vmware-discovery-info-in-active-directory.html</id><summary type="html">&lt;p&gt;Recently I decided I want to store physical discovery data (name,
physical location, host if it's a VM) on the machine's account in Active
Directory, because we have a lot of machines and during a crisis we
sometimes forget where they are.&lt;br&gt;
I started with our VMware infrastructure, and decided â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I decided I want to store physical discovery data (name,
physical location, host if it's a VM) on the machine's account in Active
Directory, because we have a lot of machines and during a crisis we
sometimes forget where they are.&lt;br&gt;
I started with our VMware infrastructure, and decided to list 3 of the
VM's attributes in AD:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The VM name, since it's sometimes different from the OS name (a VM
    can be called "A" and contain a Windows OS called "B" in the domain)&lt;/li&gt;
&lt;li&gt;The current VMware host, because if the machine disappears we want
    to know where it was last seen&lt;/li&gt;
&lt;li&gt;The VM Uid - a pathlike expression containing the VM's and the
    cluster's unique identifiers, allowing the virtualization team to
    quickly find the VM in their datastore&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I decided to write them into one of the extension attributes - there
are10 such attributes set aside by AD for such tasks. I chose
&lt;code&gt;extensionAttribute3&lt;/code&gt;.&lt;br&gt;
The script finds all VMs in a given vSphere, and finds those whose OS is
in the same domain as the current user. For those VMs, it creates the
description string, searches for the AD computer account matching the
VM's OS name and updates its extension attribute.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nv"&gt;$viServer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;VSPHERE&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$myDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$env:USERDNSDOMAIN&lt;/span&gt;

&lt;span class="c"&gt;# VMWare init&lt;/span&gt;
&lt;span class="nb"&gt;gsnp &lt;/span&gt;&lt;span class="n"&gt;-reg&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMware.VimAutomation.Core&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMware.VimAutomation.License&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMware.DeployAutomation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMware.ImageBuilder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;asnp&lt;/span&gt;
&lt;span class="nb"&gt;Disconnect-VIServer&lt;/span&gt; &lt;span class="n"&gt;-Confirm&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;
&lt;span class="nb"&gt;Connect-VIServer&lt;/span&gt; &lt;span class="nv"&gt;$viServer&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;

&lt;span class="c"&gt;# AD init&lt;/span&gt;
&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;ActiveDirectory&lt;/span&gt;

&lt;span class="nb"&gt;Get-VM&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$vm&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="nv"&gt;$guest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-VMGuest&lt;/span&gt; &lt;span class="nv"&gt;$vm&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$vm&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;VMHost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Uid&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HostName&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$guest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HostName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HostName&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$myDomain&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$descString&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMWare: {1}/{0} | {2}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VMHost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Uid&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;HostName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;descString&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;descString&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$hostName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostName&lt;/span&gt;
 &lt;span class="nv"&gt;$comp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-ADComputer&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;dnsHostName&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$HostName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;continue&amp;#39;&lt;/span&gt;
 &lt;span class="nv"&gt;$descString&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;descString&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comp&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nb"&gt;set-ADComputer&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Add&lt;/span&gt; &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extensionattribute3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$descString&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="VMware"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Some Things I Didn't Know About People Picker</title><link href="https://blog.backslasher.net/some-things-i-didnt-know-about-people-picker.html" rel="alternate"></link><published>2012-09-27T19:20:00+02:00</published><updated>2012-09-27T19:20:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-09-27:/some-things-i-didnt-know-about-people-picker.html</id><summary type="html">&lt;p&gt;Recently I got to mess with SharePoint 2010's People Picker - a control
that emulates Windows' "Directory Object Picker", allowing the user to
select security principals  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Active Directory's People Picker:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/ActiveDirectoryObjectPickerDialog.gif"&gt;&lt;/li&gt;
&lt;li&gt;The SharePoint 2010 Variant:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/24-browse-for-users.jpg"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After the Devs asked me to customize it for them, I went rummaging
through the dark corners â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I got to mess with SharePoint 2010's People Picker - a control
that emulates Windows' "Directory Object Picker", allowing the user to
select security principals  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Active Directory's People Picker:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/ActiveDirectoryObjectPickerDialog.gif"&gt;&lt;/li&gt;
&lt;li&gt;The SharePoint 2010 Variant:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/24-browse-for-users.jpg"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After the Devs asked me to customize it for them, I went rummaging
through the dark corners of the internet (pages 5+ on Google), and came
back with several facts that weren't included in the &lt;a href="http://technet.microsoft.com/en-us/library/gg602075.aspx"&gt;regular TechNet
documentation&lt;/a&gt;
and I think should have been:  &lt;/p&gt;
&lt;h3&gt;Changes can (and even should) be made from PowerShell&lt;/h3&gt;
&lt;p&gt;Although the official documentation states that there are no PowerShell
commands (as seen in the picture),&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/Capture.png"&gt;&lt;br&gt;
changes don't have to be made from the &lt;code&gt;stsadm&lt;/code&gt; utility.&lt;br&gt;
You can instead find the relevant &lt;code&gt;SPWebApplication&lt;/code&gt; object and use its
PeoplePickerSettings property to modify the PeoplePicker configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-SPWebApplication&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SharePoint - 80&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PeoplePickerSettings&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;SearchActiveDirectoryDomains                     : {}
ActiveDirectoryCustomQuery                       : 
ActiveDirectoryCustomFilter                      : 
OnlySearchWithinSiteCollection                   : False
PeopleEditorOnlyResolveWithinSiteCollection      : False
DistributionListSearchDomains                    : {}
ActiveDirectorySearchTimeout                     : 00:00:30
NoWindowsAccountsForNonWindowsAuthenticationMode : True
ServiceAccountDirectoryPaths                     : {}
ReferralChasingOption                            : None
ActiveDirectoryRestrictIsolatedNameLevel         : False
AllowLocalAccount                                : True
UpgradedPersistedProperties                      : {}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Just make sure that you update after modifying!   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Changes apply immediately&lt;/h3&gt;
&lt;p&gt;After making a change, there is no need for an application pool recycle
or even a page reload. You only need to press the search / check name
button again!  &lt;/p&gt;
&lt;h3&gt;People Picker always queries the external data source (e.g. Active Directory), unless specifically told not to&lt;/h3&gt;
&lt;p&gt;Unless told to limit external queries (see "Force People Picker to pick
only from users in the site collection" on TechNet), the People Picker
will always query the data source, even if you have a perfect match in
the local site's user collection. I think it's a good thing, but you can
always limit external queries using &lt;code&gt;ActiveDirectoryRestrictIsolatedNameLevel&lt;/code&gt; or &lt;code&gt;OnlySearchWithinSiteCollection&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;The Active Directory query differs between "Check Names" and "Browse"&lt;/h3&gt;
&lt;p&gt;There are two ways to search for users using the people picker - using
the "check names" button and using the "browse" dialog  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/PP.png"&gt;&lt;/p&gt;
&lt;p&gt;According to the MS documentation, the queries sent to AD after clicking
each one are different, and search for different attributes in users.&lt;br&gt;
The "check names" command searches those attributes in users:&lt;br&gt;
&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;cn&lt;/code&gt;, &lt;code&gt;SamAccountName&lt;/code&gt;, &lt;code&gt;mail&lt;/code&gt;, &lt;code&gt;proxyAddresses&lt;/code&gt;&lt;br&gt;
The "browse" command &lt;strong&gt;additionally&lt;/strong&gt; searches the attribute &lt;code&gt;sn&lt;/code&gt; (last name).&lt;br&gt;
Both commands search the following attributes in groups:&lt;br&gt;
&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;cn&lt;/code&gt;, &lt;code&gt;samAccountName&lt;/code&gt;&lt;br&gt;
Sources:&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/dd357076%28v=prot.13%29.aspx"&gt;Active Directory: People Picker Browse Display
UI&lt;/a&gt;&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/dd303522%28v=prot.13%29.aspx"&gt;Active Directory: People Picker Check Name
UI&lt;/a&gt;Â &lt;/p&gt;
&lt;h3&gt;The Active Directory custom query can only add results&lt;/h3&gt;
&lt;p&gt;Any custom query added to the people picker through
&lt;code&gt;ActiveDirectoryCustomQuery&lt;/code&gt; is concatenated using an "or" sign (&lt;code&gt;|&lt;/code&gt;) to
its own query. The implication is that you should only add additional
attributes you want to search, and don't have to rewrite the original
query.  &lt;/p&gt;
&lt;h3&gt;In Active Directory mode, the User Profile Application is not queried&lt;/h3&gt;
&lt;p&gt;Even if you have a working UPA in the farm, it's not queried on AD mode.
The only places that matter are the current site (&lt;code&gt;SPWeb&lt;/code&gt;)'s local user
collection and the AD.  &lt;/p&gt;
&lt;p&gt;Enjoy picking some people!&lt;/p&gt;</content><category term="Microsoft"></category><category term="SharePoint"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Windows Event Collection</title><link href="https://blog.backslasher.net/windows-event-collection.html" rel="alternate"></link><published>2012-06-28T12:48:00+02:00</published><updated>2012-06-28T12:48:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-06-28:/windows-event-collection.html</id><summary type="html">&lt;p&gt;I've recently implemented an enterprise-wide solution of event
collection in our organization, using Windows' built-in mechanism called
the &lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb427443%28v=vs.85%29.aspx"&gt;Windows Event Collector.&lt;/a&gt;&lt;br&gt;
This mechanism allows you to collect events from computers running
Windows NT5+ (XP/Server 2003 and greater) into Windows NT6+
(Vista/Server 2008 and greater) machines. The only basic â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've recently implemented an enterprise-wide solution of event
collection in our organization, using Windows' built-in mechanism called
the &lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb427443%28v=vs.85%29.aspx"&gt;Windows Event Collector.&lt;/a&gt;&lt;br&gt;
This mechanism allows you to collect events from computers running
Windows NT5+ (XP/Server 2003 and greater) into Windows NT6+
(Vista/Server 2008 and greater) machines. The only basic rules are that
the source machine should have Winrm2 installed and running on it, and
the &lt;code&gt;Event Collector Service&lt;/code&gt; should be running on the collector machine.&lt;br&gt;
There are two methods available to complete this challenge - collector
initiated and source initiated:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Collector Initiated&lt;/th&gt;
&lt;th&gt;Source Initiated&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Socket direction (for firewall rules)&lt;/td&gt;
&lt;td&gt;Collector --&amp;gt; Source&lt;/td&gt;
&lt;td&gt;Collector --&amp;gt; Source&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initiating machine&lt;/td&gt;
&lt;td&gt;Collector&lt;/td&gt;
&lt;td&gt;Source&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Authentication Type&lt;/td&gt;
&lt;td&gt;Kerberos&lt;/td&gt;
&lt;td&gt;Kerberos / Certificates&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Permissions used to access event log&lt;/td&gt;
&lt;td&gt;Configurable (&lt;code&gt;system&lt;/code&gt;/user)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;system&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bulk adding methods&lt;/td&gt;
&lt;td&gt;None (machines are added one by one)&lt;/td&gt;
&lt;td&gt;Active Directory Groups (and Group Policy)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Similarities&lt;/h3&gt;
&lt;p&gt;In both of the methods, some persistent open socket is created between
the collector and the source machine using WinRM (so it's firewall
friendly - one configurable port, standard HTTP messages), through which
events are transferred (as opposed to other mechanisms, which have one
machine polling another every now and then, creating a new socket during
every poll).&lt;br&gt;
The events are passing encrypted through the channel (standard WinRM
encryption, either via the Kerberos authentication or using an SSL
certificate), which makes it ideal for sensitive events (like security
ones).&lt;br&gt;
There can be several subscriptions to and from every server, each one
with its own configuration, including method, authentication, client
list and other settings (like heartbeat rate).  &lt;/p&gt;
&lt;h3&gt;Collector Initiated&lt;/h3&gt;
&lt;p&gt;When defining such a subscription, you instruct the collector to open a
WinRM session to the source machine(s) using a specified set of
credentials (or the computer account) and ask for a subscription. The
user doesn't have to be able to read all of the event logs, but can
rather be delegated access to a specific log that needs reading (the
&lt;code&gt;NETWORK SERVICE&lt;/code&gt; has to be able to read that log as well, since that's
the identity WinRM is operating with). Monitoring the connection
programmatically from the collector is quite easy, because events
related are written to the
&lt;code&gt;Microsoft-Windows-EventCollector/Operational&lt;/code&gt; log.  &lt;/p&gt;
&lt;h4&gt;Pros:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Easy to configure and test&lt;/li&gt;
&lt;li&gt;Easy to centrally programmatically monitor (only read collector's
    log)&lt;/li&gt;
&lt;li&gt;Collector doesn't necessarily gain access to all events in source
    machine, only ones allowed by permissions on source&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Source Initiated&lt;/h3&gt;
&lt;p&gt;Using this method requires one to dabble in Group Policy, because it
works by telling the source machine(s) "You should access server X and
offer it a subscription to your event logs at leisure".&lt;br&gt;
The only settings configured at the source level are the collector
endpoints (server name, authentication type, port etc) and the maximum
amount of events per second allowed to pass through subscriptions
(offering the most basic performance throttling on the source side). All
other configuration is performed on the collector machine.&lt;br&gt;
The Collector can be configured to allow certain sources in every
subscription. Such sources can be Kerberos-Authenticated, in which case
they can be filtered by Account or Active Directory group membership
(like allowing &lt;code&gt;Domain Computers&lt;/code&gt; but rejecting &lt;code&gt;Domain Controllers&lt;/code&gt;),
or Certificate-Authenticated, filtered by wildcard name-matching (e.g.
including all &lt;code&gt;*.domain.com&lt;/code&gt; and rejecting &lt;code&gt;*dc*.domain.com&lt;/code&gt;).   &lt;/p&gt;
&lt;h4&gt;Pros:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Can be configured on arrays of machines easily&lt;/li&gt;
&lt;li&gt;Can be used to collect events from machines from outside the domain&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Basic Configuration&lt;/h3&gt;
&lt;p&gt;In any case, one can use either the GUI (Event Viewer from the
collector) or the CLI (&lt;code&gt;WecUtil.exe&lt;/code&gt; on the collector) to create a
subscription and fine tune it, including (but not limited to) the rate
in which new events arrive, the allowed/denied computers, destination
log and event query (which events will get transferred). Current
information about the subscription can be viewed using both tools,
whether it's the &lt;code&gt;runtime status&lt;/code&gt; in the GUI or &lt;code&gt;wecutil rs&lt;/code&gt; in the
CLI. I will expand this post if I see fit. Event forwarding is not
trivial, but it allows a sysadmin to centralize events for all kinds of
reasons using tools included in the Windows OS and doing so in a
standard, performance-friendly and secure way.  &lt;/p&gt;
&lt;p&gt;Have fun forwarding!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Group Policy"></category><category term="Security"></category><category term="Event Log"></category><category term="Active Directory"></category></entry><entry><title>Installing WSUS Prerequisites Easily in a Disconnected Server</title><link href="https://blog.backslasher.net/installing-wsus-prerequisites-easily-in-a-disconnected-server.html" rel="alternate"></link><published>2012-04-27T08:08:00+02:00</published><updated>2012-04-27T08:08:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-27:/installing-wsus-prerequisites-easily-in-a-disconnected-server.html</id><summary type="html">&lt;p&gt;Our company has an internet-isolated environment, and I was requested to
create a WSUS infrastructure there.&lt;br&gt;
The most annoying thing about installing a disconnected WSUS server is
that you can't do it via the server manager (because it requires a
working internet connection) but rather through an exe file, and â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Our company has an internet-isolated environment, and I was requested to
create a WSUS infrastructure there.&lt;br&gt;
The most annoying thing about installing a disconnected WSUS server is
that you can't do it via the server manager (because it requires a
working internet connection) but rather through an exe file, and that
file won't install the prerequisites, just complain that some of them
are missing (without informing you which ones), compared to the
automatic prerequisite installation of the server manager.&lt;br&gt;
Well, problem solved through the power of scripting!&lt;br&gt;
The following line of code will install all of WSUS's windows-related
components without actually installing WSUS through the &lt;code&gt;ServerManager&lt;/code&gt;
module:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;ServerManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;Get-WindowsFeature&lt;/span&gt; &lt;span class="n"&gt;OOB-WSUS&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DependsOn&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-WindowsFeature&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="WSUS"></category></entry><entry><title>Automaticlly Extracting Downloaded Torrents</title><link href="https://blog.backslasher.net/automaticlly-extracting-downloaded-torrents.html" rel="alternate"></link><published>2012-04-14T20:17:00+02:00</published><updated>2012-04-14T20:17:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-14:/automaticlly-extracting-downloaded-torrents.html</id><summary type="html">&lt;p&gt;As every average geek, I too download torrents (containing only legal, copyright-free material, of course), and most of the time the torrents contain multi-file archives that contain the really juicy data.&lt;br&gt;
A lot of times I return home and find some new torrent has completed downloading, but I have to â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;As every average geek, I too download torrents (containing only legal, copyright-free material, of course), and most of the time the torrents contain multi-file archives that contain the really juicy data.&lt;br&gt;
A lot of times I return home and find some new torrent has completed downloading, but I have to manually extract the file and wait for &lt;strong&gt;THAT&lt;/strong&gt; to complete.&lt;br&gt;
Well, wait no more!&lt;br&gt;
Through ÂµTorrent's "Run Program" setting (&lt;code&gt;Options&amp;gt;Preferences&amp;gt;Advanced&amp;gt;Run Program&lt;/code&gt;), I can execute any command line application I want whenever a torrent completes.&lt;br&gt;
Of course, I use it to execute a PowerShell Script :-D&lt;br&gt;
The actual line I put there is:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;powershell.exe -executionPolicy RemoteSigned -file  &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;%D&amp;quot; &amp;quot;%&lt;/span&gt;&lt;span class="s2"&gt;T&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;%N&amp;quot; &amp;quot;%&lt;/span&gt;&lt;span class="s2"&gt;L&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The extra tags at the end are used to pass data to the script - namely the torrent's incoming directory, primary tracker, title and primary label. I keep all of the parameters other than the directory for future use (for example, I may wish to send podcasts automatically into my Kindle-Mail some day).&lt;br&gt;
The script itself only extracts rar files using the &lt;strong&gt;GREAT&lt;/strong&gt; open-source archiver &lt;a href="http://www.7-zip.org/"&gt;7zip&lt;/a&gt; which has a command line
interface, and it goes like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Tracker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Label&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s2"&gt;&amp;quot;TorrentDir:&lt;/span&gt;&lt;span class="se"&gt;`t&lt;/span&gt;&lt;span class="s2"&gt; $TorrentDir&lt;/span&gt;
&lt;span class="s2"&gt;Tracker:&lt;/span&gt;&lt;span class="se"&gt;`t&lt;/span&gt;&lt;span class="s2"&gt; $Tracker&lt;/span&gt;
&lt;span class="s2"&gt;Title:&lt;/span&gt;&lt;span class="se"&gt;`t`t&lt;/span&gt;&lt;span class="s2"&gt; $Title&lt;/span&gt;
&lt;span class="s2"&gt;Label:&lt;/span&gt;&lt;span class="se"&gt;`t`t&lt;/span&gt;&lt;span class="s2"&gt; $Label&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Extract if torrent is composed entirely of rar files into smaller subfolder:&lt;/span&gt;
&lt;span class="c"&gt;# Check if directory has only rar&lt;/span&gt;
&lt;span class="nv"&gt;$rars&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\.r(ar|[0-9]{2})$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$leadRar&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\.rar$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$nonrars&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-notmatch&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^(Sample(s?)|.+\.r(ar|[0-9]{2})|.+\.sfv|.+\.nfo|folder.jpg)$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;((!(&lt;/span&gt;&lt;span class="nv"&gt;$nonrars&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="nv"&gt;$leadRar&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c"&gt;# Directory is release directory&lt;/span&gt;
    &lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Extracting&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$exDir&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;join-path&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Extracted&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;fullname&lt;/span&gt;
    &lt;span class="nv"&gt;$res&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\Program Files\7-Zip\7z.exe&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-o&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$exDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$leadRar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-y&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$res&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Everything is Ok&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;All Good&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Failed: $res&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Press the any key to continue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nothing here&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see that first it outputs all of the details acquired from ÂµTorrent, checks if the incoming directory has only &lt;code&gt;.rar&lt;/code&gt; files (and secondary files, such as &lt;code&gt;.r01&lt;/code&gt;), ignoring sample directories, &lt;code&gt;.nfo&lt;/code&gt; files etc.&lt;br&gt;
If so, it tells 7zip to extract the primary &lt;code&gt;.rar&lt;/code&gt; file into a directory called &lt;code&gt;Extracted&lt;/code&gt;.&lt;br&gt;
Hope it helps!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="BitTorrent"></category><category term="PowerShell"></category></entry><entry><title>Remotely Viewing Machine Certificates With Minimal Permissions</title><link href="https://blog.backslasher.net/remotley-viewing-machine-certificates-with-minimal-permissions.html" rel="alternate"></link><published>2012-04-11T20:18:00+02:00</published><updated>2012-04-11T20:18:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-11:/remotley-viewing-machine-certificates-with-minimal-permissions.html</id><summary type="html">&lt;p&gt;We've started remotely monitoring our certificate stores on critical
servers, and wanted the monitoring software to be able to remotely
connect to our servers' personal certificate stores.&lt;br&gt;
I quickly found a script to enumerate all certificates in a specific
store on a remote computer:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Get-Cert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$computer&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$env:computername&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$ro â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;We've started remotely monitoring our certificate stores on critical
servers, and wanted the monitoring software to be able to remotely
connect to our servers' personal certificate stores.&lt;br&gt;
I quickly found a script to enumerate all certificates in a specific
store on a remote computer:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Get-Cert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$computer&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$env:computername&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$ro&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="no"&gt;[System.Security.Cryptography.X509Certificates.OpenFlags]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadOnly&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$lm&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="no"&gt;[System.Security.Cryptography.X509Certificates.StoreLocation]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;LocalMachine&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$store&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cryptography&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X509Certificates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X509Store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\\$computer\root&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$lm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Certificates&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, as long as the user was not an administrator, it got "access is denied" whenever it tried to open the store (&lt;code&gt;$store.Open&lt;/code&gt;).&lt;br&gt;
Since I don't want the monitoring software to have local admin rights on our servers (BAD habit), I tried troubleshooting the problem.&lt;br&gt;
I found out that the script works &lt;strong&gt;locally&lt;/strong&gt; for every user, so it must be some sort of a remoting issue.&lt;br&gt;
After two hours of troubleshooting I found the problem -
non-administrators, by default, can't execute remote queries against the registry, which is where certificates are stored by default (as told by ProcMon while querying locally).&lt;br&gt;
So after granting the monitoring software remote registry permissions, according to &lt;a href="http://support.microsoft.com/kb/314837"&gt;kb314837&lt;/a&gt;,
suddenly opening the remote store worked perfectly.&lt;br&gt;
I could rage about it not being documented anywhere, but if everything was properly documented my work will be really boring... Have fun remote-querying!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="PKI"></category><category term="Mysteries Solved"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Determining Size of all Tables in a Database</title><link href="https://blog.backslasher.net/determining-size-of-all-tables-in-a-database.html" rel="alternate"></link><published>2012-04-11T07:15:00+02:00</published><updated>2012-04-11T07:15:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-11:/determining-size-of-all-tables-in-a-database.html</id><summary type="html">&lt;p&gt;Just a quick SQL script to get the rowcount and size data of every table
in the current database:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="n"&gt;reserved&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;index_size&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;unused&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;DELCARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="k"&gt;CURSOR&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;from â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Just a quick SQL script to get the rowcount and size data of every table
in the current database:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="n"&gt;reserved&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;index_size&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;unused&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;DELCARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="k"&gt;CURSOR&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tables&lt;/span&gt;
&lt;span class="k"&gt;OPEN&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;
&lt;span class="k"&gt;FETCH&lt;/span&gt; &lt;span class="k"&gt;NEXT&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="n"&gt;WHILE&lt;/span&gt; &lt;span class="o"&gt;@@&lt;/span&gt;&lt;span class="n"&gt;FETCH_STATUS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="k"&gt;BEGIN&lt;/span&gt;
 &lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt; &lt;span class="k"&gt;EXEC&lt;/span&gt; &lt;span class="n"&gt;sp_spaceused&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
 &lt;span class="k"&gt;END&lt;/span&gt;
&lt;span class="k"&gt;CLOSE&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;
&lt;span class="k"&gt;DEALLOCATE&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt;
&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="SQL"></category></entry><entry><title>Creating proxied http requests with PowerShell</title><link href="https://blog.backslasher.net/creating-proxied-http-requests-with-powershell.html" rel="alternate"></link><published>2012-04-09T21:45:00+02:00</published><updated>2012-04-09T21:45:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-09:/creating-proxied-http-requests-with-powershell.html</id><summary type="html">&lt;p&gt;I'm working on some sort of HTTP proxy (maybe more details about it later), and to test it I've created a short PowerShell script.&lt;br&gt;
Note it also performs basic authentication voluntarily (without waiting for a server challenge) by injecting an &lt;code&gt;Authorization&lt;/code&gt; header, because I was testing something extra special.&lt;br&gt;
I â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm working on some sort of HTTP proxy (maybe more details about it later), and to test it I've created a short PowerShell script.&lt;br&gt;
Note it also performs basic authentication voluntarily (without waiting for a server challenge) by injecting an &lt;code&gt;Authorization&lt;/code&gt; header, because I was testing something extra special.&lt;br&gt;
I want to point out that I &lt;strong&gt;REALLY&lt;/strong&gt; liked the way http proxies are fed into &lt;code&gt;WebRequest&lt;/code&gt;s - it allows one to create "different" proxies by
appending paths and query-string data to the URI.&lt;br&gt;
Hope it will help someone out there.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://google.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$proxy&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://someHttpProxy.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$req&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[net.webrequest]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;#Prox&lt;/span&gt;
&lt;span class="nv"&gt;$prox&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebProxy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$prox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$proxy&lt;/span&gt;
&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Proxy&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$prox&lt;/span&gt;
&lt;span class="c"&gt;#Auth&lt;/span&gt;
&lt;span class="nv"&gt;$authInfo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$authInfo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[Convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ToBase64String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[Text.Encoding]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Ascii&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$authInfo&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Basic $authInfo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c"&gt;#Resp&lt;/span&gt;
&lt;span class="nv"&gt;$resp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetResponse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$stream&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;streamreader&lt;/span&gt; &lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetResponseStream&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$res&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readtoend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$res&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="HTTP"></category><category term="Scripts"></category><category term="Proxy"></category><category term="PowerShell"></category></entry><entry><title>Active Directory's Object Specific ACEs and PowerShell</title><link href="https://blog.backslasher.net/active-directory-object-specific-aces.html" rel="alternate"></link><published>2011-11-24T09:36:00+01:00</published><updated>2011-11-24T09:36:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-11-24:/active-directory-object-specific-aces.html</id><summary type="html">&lt;p&gt;I recently checked the option of handing out AD permissions through PowerShell scripts, and I found out that setting object-specific ACEs is not trivial scriptwise.&lt;br&gt;
Active Directory ACE (access control entries) are different from your regular ACEs (for example, NTFS), because they can be used to grant permissions only on â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently checked the option of handing out AD permissions through PowerShell scripts, and I found out that setting object-specific ACEs is not trivial scriptwise.&lt;br&gt;
Active Directory ACE (access control entries) are different from your regular ACEs (for example, NTFS), because they can be used to grant permissions only on specific types of objects, and to propagate only to specific types of child objects.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/active-directorys-object-specific-aces/ObjectSpecificACE-UI.png"&gt;&lt;br&gt;
Example - Granting &lt;code&gt;Everyone&lt;/code&gt; the right to create &lt;code&gt;Computer&lt;/code&gt; objects in &lt;code&gt;child OUs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/active-directorys-object-specific-aces/ObjectSpecificACE-UI2.png"&gt;&lt;br&gt;
Example - Granting &lt;code&gt;Everyone&lt;/code&gt; the &lt;code&gt;reset password&lt;/code&gt; right, but only on &lt;code&gt;Computer&lt;/code&gt; objects (rather than user accounts)&lt;/p&gt;
&lt;p&gt;My question is - how do I replicate this in PowerShell?&lt;br&gt;
After granting the "create computer objects in child OUs" right (pic1)
and loading the Active Directory module, If I fetch all of the relevant
permissions thusly:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;get-acl&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;AD:\OU=Domain Controllers,Dc=contoso,DC=com&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;Access&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IdentityReference&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Everyone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I get the following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ActiveDirectoryRights : CreateChild, DeleteChild
InheritanceType       : Descendents
ObjectType            : bf967a86-0de6-11d0-a285-00aa003049e2
InheritedObjectType   : bf967aa5-0de6-11d0-a285-00aa003049e2
ObjectFlags           : ObjectAceTypePresent, InheritedObjectAceTypePresent
AccessControlType     : Allow
IdentityReference     : Everyone
IsInherited           : False
InheritanceFlags      : ContainerInherit
PropagationFlags      : InheritOnly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that the &lt;code&gt;ActiveDirectoryRights&lt;/code&gt; granted are &lt;code&gt;CreateChild&lt;/code&gt; and &lt;code&gt;DeleteChild&lt;/code&gt;, which are generic, NTFS-ish rights. The interesting parts here are &lt;code&gt;ObjectType&lt;/code&gt; and &lt;code&gt;InheritedObjectType&lt;/code&gt;, Both contain well known IDs representing AD object types.&lt;br&gt;
All object type guids are available in the &lt;code&gt;schema&lt;/code&gt; partition, on the property &lt;code&gt;schemaIDGUID&lt;/code&gt;. To look up for the object type matching &lt;code&gt;bf967a86-0de6-11d0-a285-00aa003049e2&lt;/code&gt;, you could use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$RawGuid&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;00299570-246d-11d0-a768-00aa006e0529&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toByteArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nb"&gt;get-adobject&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;schemaIDGUID&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$rawGuid&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;-SearchBase&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADRootDSE&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;schemaNamingContext&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;schemaIDGUID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Select &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;schemaIDGUID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;schemaIDGUID&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And now we discover that the field &lt;code&gt;ObjectType&lt;/code&gt; contains the &lt;code&gt;SchemaIDGUID&lt;/code&gt; of &lt;code&gt;Computer&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;name                                                        schemaIDGUID
----                                                        ------------
Computer                                                    bf967a86-0de6-11d0-a285-00aa003049e2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In a similar method we can find that "InheritedObjectType" contains "Organizational-Unit". In order to create your own ACE, you simply have to find the right IDs to put in those fields, and continue to set the ACL normally.&lt;br&gt;
Have a safe directory!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Making sure your Audit Collection Server is collecting</title><link href="https://blog.backslasher.net/making-sure-your-audit-collection-server-is-collecting.html" rel="alternate"></link><published>2011-10-22T21:23:00+02:00</published><updated>2011-10-22T21:23:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-10-22:/making-sure-your-audit-collection-server-is-collecting.html</id><summary type="html">&lt;p&gt;A few days ago I wanted to make sure that my ACS (Audit Collection
Server) is collecting events from all of my DCs.&lt;br&gt;
For those unfamiliar with ACS, it's an additional component to SCOM
(System Center Configuration Manager) that allows you to collect events
from the security log of several â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few days ago I wanted to make sure that my ACS (Audit Collection
Server) is collecting events from all of my DCs.&lt;br&gt;
For those unfamiliar with ACS, it's an additional component to SCOM
(System Center Configuration Manager) that allows you to collect events
from the security log of several machines into a dedicated db, for
analysis and reporting.&lt;br&gt;
First of all, to start event collection you have to:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install ACS on SCOM (duh)&lt;/li&gt;
&lt;li&gt;Install SCOM agents on the machines you wish to collect events from&lt;/li&gt;
&lt;li&gt;Enable the windows service called "Operations Manager Audit
    Forwarding Service" (&lt;code&gt;AdtAgent&lt;/code&gt;) on the ACS "clients" and set it to
    automatic. You can do it either manually, using Group Policy or
    through a task in the SCOM console (called "Enable Audit
    Collection").&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To extract data from the ACS database, you can query it directly or use
some reoprts that come included with SCOM &lt;a href="http://www.google.co.il/search?q=scom+reports"&gt;(google to find out how)&lt;/a&gt;.&lt;br&gt;
So how can you check that computers are actually reporting to ACS?&lt;br&gt;
You can query the db, with something like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;Max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CreationTime&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;AgentMachine&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AdtServer&lt;/span&gt;&lt;span class="p"&gt;].[&lt;/span&gt;&lt;span class="n"&gt;dvAll5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;AgentMachine&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or you can use AdtAdmin.exe from your SCOM installation media (&lt;code&gt;acs\i386\AdtAdmin.exe&lt;/code&gt;) and parse it's input with PowerShell thusly:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;AdtAdmin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="n"&gt;-stats&lt;/span&gt; &lt;span class="n"&gt;-collector&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SCOMSERVER&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-CSV&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Last Action&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Of course you don't have to filter all of the other properties, but
these two are the bare necessities.&lt;br&gt;
Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="ACS"></category><category term="PowerShell"></category><category term="SCOM"></category><category term="SQL"></category></entry><entry><title>Monitoring SharePoint 2010 on SCOM - Minimal Permissions</title><link href="https://blog.backslasher.net/monitoring-sharepoint-2010-on-scom.html" rel="alternate"></link><published>2011-07-18T13:15:00+02:00</published><updated>2011-07-18T13:15:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-07-18:/monitoring-sharepoint-2010-on-scom.html</id><summary type="html">&lt;p&gt;I've recently started monitoring my new SharePoint 2010 farms on SCOM,
and found the management pack's documentation to be rather lacking in
setup instructions, and the required permissions for SCOM's account on
the farm were rather shocking:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Local admin on all SharePoint servers&lt;/li&gt;
&lt;li&gt;Local admin on all SQL servers&lt;/li&gt;
&lt;li&gt;dbowner â€¦&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've recently started monitoring my new SharePoint 2010 farms on SCOM,
and found the management pack's documentation to be rather lacking in
setup instructions, and the required permissions for SCOM's account on
the farm were rather shocking:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Local admin on all SharePoint servers&lt;/li&gt;
&lt;li&gt;Local admin on all SQL servers&lt;/li&gt;
&lt;li&gt;dbowner on all SharePoint's databases&lt;/li&gt;
&lt;li&gt;Membership in the Farm Administrators group&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After some experimenting, I managed to reduce the permissions to a
normal level, and create my own (working!) workflow:&lt;br&gt;
(treat FARM as a unique identifier for your farm)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prepare a special AD account (one for every farm) for SCOM's monitoring,
such as &lt;code&gt;SCOM-Sharepoint-FARM&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grant that account:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Membership in the &lt;code&gt;Farm Administrators&lt;/code&gt; group on the SharePoint farm
(via Central Administration)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dbowner&lt;/code&gt; on the farm's DBs (or &lt;code&gt;sysadmin&lt;/code&gt; on the SQL server, if it only
holds this farm's DBs anyway)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using SCOM's console, Create a Windows &lt;code&gt;Run-As account&lt;/code&gt; (under
   administration, be careful) named something like "SP FARM Monitoring"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit the SharePoint MP's xml file thusly:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you installed the MP on the SCOM server (as you should), copy the
"SharePointMP.Config" file from &lt;code&gt;C:\Program Files (x86)\System
Center Management Packs\Microsoft SharePoint 2010 Products OpsMgr
2007 MP en-us\&lt;/code&gt; to &lt;code&gt;C:\Program Files\System Center
Management Packs\&lt;/code&gt;. It should stay there.&lt;/li&gt;
&lt;li&gt;Open the file in your favorite XML editor&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add an Association node like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;Association&lt;/span&gt; &lt;span class="na"&gt;Account=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NAME&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;Type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Agent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/Association&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code&gt;NAME&lt;/code&gt; is SCOM's Run-As account&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside the Association node, add a Machine node for every computer
  inside the farm, like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;Machine&lt;/span&gt; &lt;span class="na"&gt;Name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MACHINE&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add every SharePoint server to SCOM's monitored servers (through
   discovery wizard)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute the task &lt;code&gt;Configure SharePoint Management Pack&lt;/code&gt; (in
   &lt;code&gt;Monitoring &amp;gt; SharePoint 2010 Products &amp;gt; Administration&lt;/code&gt;).
   Change the task credentials to an account with farm administrator privileges (like
yours), otherwise the task will execute with SCOM's default action
account, which might not have enough permissions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wait for about an hour, and check out the Diagram View!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If your servers won't appear, check the &lt;code&gt;unidentified machines&lt;/code&gt; view,
the Agent's health, and the server's event log.  &lt;/p&gt;</content><category term="Microsoft"></category><category term="SharePoint"></category><category term="SCOM"></category></entry><entry><title>"The module ... owssvr.dll could not be loaded due to a configuration problem"</title><link href="https://blog.backslasher.net/module-owssvrdll-could-not-be-loaded.html" rel="alternate"></link><published>2011-07-07T16:09:00+02:00</published><updated>2011-07-07T16:09:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-07-07:/module-owssvrdll-could-not-be-loaded.html</id><summary type="html">&lt;p&gt;Recently, one of my teammates installed ArcGis Server 9.3 on our fresh
SharePoint 2010 box, causing all sites to respond with &lt;code&gt;503 Service
Unavailable&lt;/code&gt;. A quick inspection showed that the application pools have
stopped themselves, and the Windows application event log was spammed
with:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event ID: 2282
Source: Microsoft-Windows-IIS-W3SVC-WP â€¦&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Recently, one of my teammates installed ArcGis Server 9.3 on our fresh
SharePoint 2010 box, causing all sites to respond with &lt;code&gt;503 Service
Unavailable&lt;/code&gt;. A quick inspection showed that the application pools have
stopped themselves, and the Windows application event log was spammed
with:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event ID: 2282
Source: Microsoft-Windows-IIS-W3SVC-WP
Description:
The Module DLL C:\Program Files\Common Files\Microsoft Shared\Web Server Extentions\14\isapi\owssvr.dll&amp;#39; could not be loaded due to a configuration problem. The current configuration only supports loading images built for a x86 processor architecture. The data field contains the error number...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After some investigation, I found out that the installation switched all
of the application pools into 32-bit mode, causing SharePoint's x64 dlls
to fail to load.&lt;br&gt;
The solution I found - go over every pool in the IIS manager under
&lt;code&gt;Application pools&lt;/code&gt;, open &lt;code&gt;advanced settings&lt;/code&gt; and set &lt;code&gt;Enable 32-Bit
Application&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;.&lt;br&gt;
Also, make sure you click &lt;code&gt;Set Application Pool Defaults&lt;/code&gt; and change the
settings there, for your future pools.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="SharePoint"></category><category term="IIS"></category></entry><entry><title>Solving and preventing "Topology Discovery failed, error 0x80040a02"</title><link href="https://blog.backslasher.net/solving-and-preventing-topology-discovery-failed.html" rel="alternate"></link><published>2011-06-05T19:00:00+02:00</published><updated>2011-06-05T19:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-06-05:/solving-and-preventing-topology-discovery-failed.html</id><summary type="html">&lt;p&gt;Recently our Exchange 2003 environment broke down when we demoted our
last ancient DCs. We panicked and re-promoted them, but no avail. The
Exchange servers won't finish loading (they'd get stuck on "Applying
computer settings", while actually waiting for the &lt;code&gt;Microsoft Exchange System
Attendant&lt;/code&gt; service to finish starting).&lt;br&gt;
The error â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently our Exchange 2003 environment broke down when we demoted our
last ancient DCs. We panicked and re-promoted them, but no avail. The
Exchange servers won't finish loading (they'd get stuck on "Applying
computer settings", while actually waiting for the &lt;code&gt;Microsoft Exchange System
Attendant&lt;/code&gt; service to finish starting).&lt;br&gt;
The error listed in the event viewer was from &lt;code&gt;MSExchangeDSAccess&lt;/code&gt;,
claiming that "Topology Discovery failed". After some searching, we
found &lt;a href="http://support.microsoft.com/kb/919089"&gt;KB919089&lt;/a&gt;, which
indicated we should run Exchange's &lt;code&gt;setup.exe /domainprep&lt;/code&gt; on every
DC.&lt;br&gt;
While executing it on one DC did solve the problem, I wasn't planning to
add this to my DC construction document. Therefore, my solution was
setting the following setting to all DCs through Group Policy:&lt;br&gt;
Open&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Computer Configuration &amp;gt; Policies &amp;gt; Windows Settings &amp;gt; Security Settings &amp;gt; Local Policies &amp;gt; User Rights Assignment &amp;gt; Manage auditing and security log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And add &lt;code&gt;DOMAIN\Exchange Enterprise Servers&lt;/code&gt; to the list.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Exchange"></category><category term="Active Directory"></category></entry><entry><title>Showing "Mail" icon in control panel through Group Policy</title><link href="https://blog.backslasher.net/showing-mail-icon-in-control-panel-through-group-policy.html" rel="alternate"></link><published>2011-06-05T12:40:00+02:00</published><updated>2011-06-05T12:40:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-06-05:/showing-mail-icon-in-control-panel-through-group-policy.html</id><summary type="html">&lt;p&gt;I recently had to lock down a Windows 2008R2 remote desktop server
(terminal server)&lt;br&gt;
One of the requirements was to show only some control panel items, a
setting that can be achieved using the Group Policy setting "Show only
specified Control Panel items" (under &lt;code&gt;Policies &amp;gt; Administrative
Templates &amp;gt; Control Panel&lt;/code&gt;), but â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently had to lock down a Windows 2008R2 remote desktop server
(terminal server)&lt;br&gt;
One of the requirements was to show only some control panel items, a
setting that can be achieved using the Group Policy setting "Show only
specified Control Panel items" (under &lt;code&gt;Policies &amp;gt; Administrative
Templates &amp;gt; Control Panel&lt;/code&gt;), but that setting requires the applet's
&lt;em&gt;canonical name&lt;/em&gt;, like &lt;code&gt;Microsoft.Mouse&lt;/code&gt;. All applets included with
Windows have their own canonical names, found in &lt;a href="http://msdn.microsoft.com/en-us/library/ee330741(VS.85).aspx"&gt;this article&lt;/a&gt;&lt;br&gt;
I couldn't find the mail icon's canonical name anywhere, and eventually
found out that writing down the applet's filename - &lt;code&gt;mlcfg32.cpl&lt;/code&gt; is
enough.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Terminal Server"></category><category term="Office"></category></entry><entry><title>Setting Dynamic RPC Port Ranges</title><link href="https://blog.backslasher.net/setting-dynamic-rpc-port-ranges.html" rel="alternate"></link><published>2011-05-02T20:51:00+02:00</published><updated>2011-05-02T20:51:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-05-02:/setting-dynamic-rpc-port-ranges.html</id><summary type="html">&lt;p&gt;We recently had to manually set the dynamic RPC port range in our
servers, mainly because Exchange 2010 sets the port range so wide that
the firewall guys (rightfully) refused to create a rule with that
range.  &lt;/p&gt;
&lt;h3&gt;Warning - at your own risk!&lt;/h3&gt;
&lt;p&gt;When I found out about those settings, I â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;We recently had to manually set the dynamic RPC port range in our
servers, mainly because Exchange 2010 sets the port range so wide that
the firewall guys (rightfully) refused to create a rule with that
range.  &lt;/p&gt;
&lt;h3&gt;Warning - at your own risk!&lt;/h3&gt;
&lt;p&gt;When I found out about those settings, I stupidly tried applying these
to my entire environment, which crippled my Hyper-V cluster, for
example. So my conclusion - don't apply it to everything without testing
first!  &lt;/p&gt;
&lt;h3&gt;RP-Wut?&lt;/h3&gt;
&lt;p&gt;For those not familiar with it, RPC (&lt;a href="http://technet.microsoft.com/en-us/library/cc738291%28WS.10%29.aspx"&gt;Remote Procedure
Call&lt;/a&gt;)
is an important part of Windows' communication matchanism that is widely used with Microsoft and non-Microsoft software. A feature of RPC is called dynamic RPC port allocation, allowing server software to be allocated incoming ports dynamically, thus avoiding port conflicts. This feature has a range of
ports to select from, and that is the "dynamic RPC port range".&lt;br&gt;
The default ranges in Windows are:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 2003: 1025-5000&lt;/li&gt;
&lt;li&gt;Windows 2008+: 49152-65535&lt;/li&gt;
&lt;li&gt;Windows + Exchange 2010: 6005-59530 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you can see, passing Exchange's default port range through a firewall
is definitely not a good idea.  &lt;/p&gt;
&lt;p&gt;According to &lt;a href="http://support.microsoft.com/kb/154596"&gt;KB154596&lt;/a&gt;, the 2
ways of doing so is either by using &lt;code&gt;RPCCfg.exe&lt;/code&gt; on the server (yukk) or
by modifying the Registry.&lt;br&gt;
The quick version is:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HKLM\Software\Microsoft\Rpc\Internet&lt;/code&gt; (Key): The key that
    will contain all of the following values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ports&lt;/code&gt; (&lt;code&gt;REG_MULTI_SZ&lt;/code&gt;): A list of ports Windows is allowed to
    use for dynamic port allocation. Can be a single port (1234) or a
    range (5555-5560). Numbers should be between 0 and 65535.&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; If you mess this part up (by entering an invalid value),
    the entire configuration becomes invalid.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;PortsInternetAvailable&lt;/code&gt; (&lt;code&gt;REG_SZ&lt;/code&gt;): Set to &lt;code&gt;Y&lt;/code&gt; (case
    insensitive) to make Windows use the &lt;code&gt;Ports&lt;/code&gt; list as a whitelist (only
    use those ports), and &lt;code&gt;N&lt;/code&gt; to use "Ports" as a blacklist (use all
    other ports). I see no sense in setting this to &lt;code&gt;N&lt;/code&gt;, but...&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UseInternetPorts&lt;/code&gt; (&lt;code&gt;REG_SZ&lt;/code&gt;): Set to &lt;code&gt;Y&lt;/code&gt;. I don't realize what
    setting &lt;code&gt;N&lt;/code&gt; would do, but I assume it won't serve our cause.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can utilize Group Policy Preferences to deploy these settings to
several servers in one hit.&lt;br&gt;
Set these values on your machine, restart it, and you're set! Only
several remarks:   &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;These settings apply to the RPC &lt;em&gt;server&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
   Ports for outgoing connections from the machine will still be
    determined by the RPC server (therefore, the other machine).  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apply ALL settings, and do it right!&lt;/strong&gt;&lt;br&gt;
   Make sure you're using correct values (and not some stupid mistake
    like an extra dash in the &lt;code&gt;Ports&lt;/code&gt; key), because invalid
    configuration will stop the RPC server from handing any outgoing
    ports, which will severely impact many remote-related OS features
    like DCOM, remote event viewer etc.&lt;br&gt;
   For the same reason, if you're using Group Poilcy or some script to
    deploy these settings, make sure ALL of the keys are created,
    because I had an issue of missing keys that crippled both my
    clusters and my remote-management apps. It turns out that Group
    Policy Preferences doesn't create the key with the proper
    permissions, so you have to change the key permissions through
    &lt;code&gt;Policies &amp;gt; Windows Settings &amp;gt; Security Settings &amp;gt; Registry&lt;/code&gt;.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Leave enough ports&lt;/strong&gt;&lt;br&gt;
   Don't give RPC a range of 10 ports to play with, because you'll run
    out pretty fast. A lot of client applications use more than one
    connection, and you'll be surprised how many use RPC. I recommend
    giving &lt;em&gt;at least&lt;/em&gt; 1000 ports  &lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;code&gt;Netsh set dynamicport&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;I recently found out that the Netsh command &lt;code&gt;set dynamicport&lt;/code&gt; mentioned
in &lt;a href="http://support.microsoft.com/kb/929851"&gt;http://support.microsoft.com/kb/929851&lt;/a&gt; does not modify the RPC
server at all, but rather changes the windows firewall exceptions.
Therefor, it's useless when using an external firewall (like we do).&lt;br&gt;
Source:
&lt;a href="http://social.technet.microsoft.com/Forums/en-US/winserverDS/thread/7c2aa64e-84a0-4cc3-b6e8-690bb150a735/"&gt;http://social.technet.microsoft.com/Forums/en-US/winserverDS/thread/7c2aa64e-84a0-4cc3-b6e8-690bb150a735/&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;Validating Configuration&lt;/h3&gt;
&lt;p&gt;I think that the best way to validate the changes is to use a sniffer to
record traffic and use remote WMI (that uses RPC) through PowerShell:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Prepare a test machine and a second one, and make sure the second
    machine can access the test machine in the configured ports and 135
    (the RPC port mapper)&lt;/li&gt;
&lt;li&gt;Install Network Monitor (or another sniffer) on one of the machines
    and record RPC traffic&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute the following PowerShell command from the second machine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;win32_operatingsystem&lt;/span&gt; &lt;span class="n"&gt;-comp&lt;/span&gt; &lt;span class="n"&gt;TEST&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure the call executes successfully (no errors) and the
    recorded traffic is in the port range we configured earlier&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Happy Registry-editing-without-burning-your-servers!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Firewall"></category><category term="Registry"></category></entry><entry><title>Lowercasing PTR records in DNS</title><link href="https://blog.backslasher.net/lowercasing-ptr-records-in-dns.html" rel="alternate"></link><published>2011-02-22T18:51:00+01:00</published><updated>2011-02-22T18:51:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-02-22:/lowercasing-ptr-records-in-dns.html</id><summary type="html">&lt;p&gt;Recently, one of the IT crowd informed me that he can't delete some of
his PTR records through the DNS management console (dnsmgmt.msc). The
record would appear to be deleted, but it'll still show up after
refreshing.&lt;br&gt;
After some quick Googling I found &lt;a href="http://support.microsoft.com/kb/842127"&gt;kb842127&lt;/a&gt;, which says that PTR records â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, one of the IT crowd informed me that he can't delete some of
his PTR records through the DNS management console (dnsmgmt.msc). The
record would appear to be deleted, but it'll still show up after
refreshing.&lt;br&gt;
After some quick Googling I found &lt;a href="http://support.microsoft.com/kb/842127"&gt;kb842127&lt;/a&gt;, which says that PTR records with uppercase characters in the host name can't be deleted.&lt;br&gt;
The KB offers a hotfix (included with 2003sp1) that stops Windows from creating such records, but doesn't handle existing ones.&lt;br&gt;
Microsoft suggests using some Middle-Ages method with exporting the records to a file, manually editing it, and scripting the deletion / recreation.&lt;br&gt;
I thought that their method was tiring, so I made this script. It'll
search for PTR records containing uppercase characters, delete them
using dnscmd.exe (because using WMI won't work) and create a lowercase
version.&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; This script won't take into account TTLs, timestamps and other
record attributes.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="c"&gt;# If no DC is specified, find one&lt;/span&gt;
&lt;span class="nv"&gt;$dc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
&lt;span class="no"&gt;[system.directoryservices.activedirectory.domaincontroller]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FindOne&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DirectoryServices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveDirectory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DirectoryContext&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Domain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$forReal&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$reg&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[A-Z]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$recs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;-comp&lt;/span&gt; &lt;span class="nv"&gt;$dc&lt;/span&gt; &lt;span class="n"&gt;-namespace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root/microsoftdns&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MicrosoftDNS_PTRType&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$reg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecordData&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$recs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$recs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$container&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContainerName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;# 1.in-addr.arpa&lt;/span&gt;
    &lt;span class="nv"&gt;$record&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecordData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;# CompName.contoso.com.&lt;/span&gt;
    &lt;span class="nv"&gt;$lowerRecord&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecordData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nv"&gt;$owner&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;# 4.3.2.1.in-addr.arpa&lt;/span&gt;
    &lt;span class="nv"&gt;$shortOwner&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$owner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$owner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;# 4.3.2&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$forReal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;dnscmd&lt;/span&gt; &lt;span class="nv"&gt;$dc&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;RecordDelete&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$container.&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$shortOwner&lt;/span&gt; &lt;span class="n"&gt;PTR&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$forReal&lt;/span&gt;&lt;span class="p"&gt;){(&lt;/span&gt;&lt;span class="no"&gt;[wmiclass]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\\$dc\root\MicrosoftDNS:MicrosoftDNS_PTRType&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;CreateInstanceFromPropertyData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$DNSServer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$owner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$lowerRecord&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;InArpa&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$owner&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;From&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$record&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;To&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$lowerRecord&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ForReal&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$forReal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="DNS"></category><category term="Scripts"></category><category term="PowerShell"></category></entry><entry><title>Enabling Remote Desktop Remotely</title><link href="https://blog.backslasher.net/enabling-remote-desktop-remotely.html" rel="alternate"></link><published>2011-01-13T20:52:00+01:00</published><updated>2011-01-13T20:52:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-01-13:/enabling-remote-desktop-remotely.html</id><summary type="html">&lt;p&gt;According to &lt;a href="http://technet.microsoft.com/en-us/library/cc782195%28v=ws.10%29.aspx"&gt;this Technet article&lt;/a&gt;, to enable remote desktop remotely by using the registry you need to set the key&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server:fDenyTSConnections&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then reboot the server.&lt;br&gt;
Rebooting is actually unnecessary - you can just restart the service &lt;code&gt;TermService&lt;/code&gt;&lt;br&gt;
If you'd like to script it â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;According to &lt;a href="http://technet.microsoft.com/en-us/library/cc782195%28v=ws.10%29.aspx"&gt;this Technet article&lt;/a&gt;, to enable remote desktop remotely by using the registry you need to set the key&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server:fDenyTSConnections&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then reboot the server.&lt;br&gt;
Rebooting is actually unnecessary - you can just restart the service &lt;code&gt;TermService&lt;/code&gt;&lt;br&gt;
If you'd like to script it all:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Set registry&lt;/span&gt;
&lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="no"&gt;[Microsoft.Win32.RegistryKey]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OpenRemoteBaseKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LocalMachine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OpenSubKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SYSTEM\CurrentControlSet\Control\Terminal Server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fDenyTSConnections&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c"&gt;# Restart service&lt;/span&gt;
&lt;span class="nb"&gt;Get-Service&lt;/span&gt; &lt;span class="n"&gt;TermService&lt;/span&gt; &lt;span class="n"&gt;-comp&lt;/span&gt; &lt;span class="nv"&gt;$computerName&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Restart-Service&lt;/span&gt; &lt;span class="n"&gt;-force&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="Windows"></category><category term="PowerShell"></category><category term="Terminal Server"></category><category term="Registry"></category><category term="One-Liner"></category></entry><entry><title>Event Log Permissions, With Scripts!</title><link href="https://blog.backslasher.net/event-log-permissions-with-scripts.html" rel="alternate"></link><published>2011-01-13T11:48:00+01:00</published><updated>2011-01-13T11:48:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-01-13:/event-log-permissions-with-scripts.html</id><summary type="html">&lt;p&gt;I'm going to keep it short, because there's a lot of technical background.&lt;br&gt;
So, I'm assuming you know about:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technet.microsoft.com/en-us/library/cc728310%28WS.10%29.aspx"&gt;Assigning permissions to the registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/aa379567%28v=vs.85%29.aspx"&gt;SDDLs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Event Log concepts (sources, logs)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, to business:  &lt;/p&gt;
&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;Event viewer data is stored in &lt;code&gt;.evt&lt;/code&gt;/&lt;code&gt;.evtx&lt;/code&gt; files in &lt;code&gt;%SystemRoot%\System32\Winevt\Logs\&lt;/code&gt;, but as â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm going to keep it short, because there's a lot of technical background.&lt;br&gt;
So, I'm assuming you know about:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technet.microsoft.com/en-us/library/cc728310%28WS.10%29.aspx"&gt;Assigning permissions to the registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/aa379567%28v=vs.85%29.aspx"&gt;SDDLs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Event Log concepts (sources, logs)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, to business:  &lt;/p&gt;
&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;Event viewer data is stored in &lt;code&gt;.evt&lt;/code&gt;/&lt;code&gt;.evtx&lt;/code&gt; files in &lt;code&gt;%SystemRoot%\System32\Winevt\Logs\&lt;/code&gt;, but as with any half-decent DB, no one but &lt;code&gt;SYSTEM&lt;/code&gt; is touching the files themselves.&lt;br&gt;
The permissions are basically divided into two interesting parts - event-related permissions (reading / writing / clearing event logs) and source-related permissions (creating / deleting sources).  &lt;/p&gt;
&lt;h4&gt;Other permissions&lt;/h4&gt;
&lt;p&gt;Of course there is also creating / deleting logs themselves, but it
happens so rarely that I just do it with my admin account.&lt;/p&gt;
&lt;h3&gt;Event-Related&lt;/h3&gt;
&lt;p&gt;Event-related permissions are per log (&lt;code&gt;application&lt;/code&gt;/&lt;code&gt;system&lt;/code&gt; etc.) and are stored in an SDDL in &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\services\eventlog\LOGNAME:CustomSD&lt;/code&gt;&lt;br&gt;
To grant or deny principles some privileges, edit the SDDL, using the
following bits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0x01: Read&lt;/li&gt;
&lt;li&gt;0x02: Write&lt;/li&gt;
&lt;li&gt;0x04: Clear&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Restart is required to apply those permissions&lt;/p&gt;
&lt;h4&gt;Scripting Time&lt;/h4&gt;
&lt;p&gt;I use PowerShell to read the registry value, parse the SDDL into an ACL object, edit it, and export the SDDL-equivalent back into the registry.&lt;br&gt;
This stub of a script will grant some principle permissions to read from and write to a certain log:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Principle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Builtin\Remote Desktop Users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Application&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Get SDDL:&lt;/span&gt;
&lt;span class="nv"&gt;$orgSDDL&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gp &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HKLM:\SYSTEM\CurrentControlSet\Services\Eventlog\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;CustomSD&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;CustomSD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Before:&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$orgSDDL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;# Create ACL&lt;/span&gt;
&lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegistrySecurity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetSecurityDescriptorSddlForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$orgSDDL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c"&gt;# Create ACE&lt;/span&gt;
&lt;span class="nv"&gt;$ace&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegistryAccessRule&lt;/span&gt; &lt;span class="nv"&gt;$Principle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;# Combine ACL&lt;/span&gt;
&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ace&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$newSDDL&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SDDL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;After:&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$newSDDL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;# Store SDDL:&lt;/span&gt;
&lt;span class="nb"&gt;sp &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HKLM:\SYSTEM\CurrentControlSet\Services\Eventlog\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;CustomSD&lt;/span&gt; &lt;span class="nv"&gt;$newSDDL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Source-Related&lt;/h3&gt;
&lt;p&gt;Sources are actually manipulated using the registry (not through some API), and therefore require actual permissions on the registry key of the log itself. For instance, to create a new event source in the &lt;code&gt;Application&lt;/code&gt; log, I would need the privilege to create a key under
&lt;code&gt;HKLM\SYSTEM\CurrentControlSet\services\eventlog\Application&lt;/code&gt;.&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; Consider creating all of the event sources in one concentrated blow as
an admin, to avoid messing with the registry's permissions.&lt;br&gt;
No restart is required to apply these permissions.&lt;/p&gt;
&lt;h4&gt;Scripting Time&lt;/h4&gt;
&lt;p&gt;Granting / denying privileges on the registry is fairly easy with PowerShell. Here's a bit that adds read/write permissions for sources on a specific log to a specific principle:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# Set parameters:&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Principle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Builtin\Remote Desktop Users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Application&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Compose Key:&lt;/span&gt;
&lt;span class="nv"&gt;$LogPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HKLM:\SYSTEM\CurrentControlSet\services\eventlog\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt; &lt;span class="nv"&gt;$LogPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-Acl&lt;/span&gt; &lt;span class="nv"&gt;$LogPath&lt;/span&gt;
    &lt;span class="nv"&gt;$ace&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegistryAccessRule&lt;/span&gt; &lt;span class="nv"&gt;$Principle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WriteKey, ReadKey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;allow&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ace&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;#Set-Acl $LogPath $acl&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Cannot acesss log $LogName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Further Reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/system.security.accesscontrol.aspx"&gt;System.Security.AccessControl
    namespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/aa363661%28VS.85%29.aspx"&gt;Event
    Sources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy messing with the event log!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Registry"></category><category term="Event Log"></category></entry><entry><title>Speed boosting disconnected environments</title><link href="https://blog.backslasher.net/speed-boosting-disconnected-environments.html" rel="alternate"></link><published>2011-01-06T20:42:00+01:00</published><updated>2011-01-06T20:42:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-01-06:/speed-boosting-disconnected-environments.html</id><summary type="html">&lt;p&gt;Hi there.&lt;br&gt;
Not a while ago, I've created a post about &lt;a href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html"&gt;stsadm.exe / new SPSite() being slow&lt;/a&gt;
in disconnected environments. Just wanted to point out that I've tried
changing the setting on some other servers, and the results were &lt;strong&gt;most
interesting&lt;/strong&gt;. Almost every other MS product, starting from SQL Studio â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi there.&lt;br&gt;
Not a while ago, I've created a post about &lt;a href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html"&gt;stsadm.exe / new SPSite() being slow&lt;/a&gt;
in disconnected environments. Just wanted to point out that I've tried
changing the setting on some other servers, and the results were &lt;strong&gt;most
interesting&lt;/strong&gt;. Almost every other MS product, starting from SQL Studio
and ending in SCOM Console, loaded up faster, probably for being signed
using AuthentiCode. So, if you have a disconnected server hosting some
MS product, try changing this setting too! Remember it might reduce
security when used with applications that actually &lt;strong&gt;can&lt;/strong&gt; access their
CRL listings, so if that's the case (You should know, since it would
probably be an application developed in-house), use the MS application's
&lt;code&gt;.config&lt;/code&gt; file and not the &lt;code&gt;machine.config&lt;/code&gt; one.&lt;br&gt;
Happy boosting!&lt;/p&gt;</content><category term="Microsoft"></category><category term="SCOM"></category><category term="Ramblings"></category><category term="SQL"></category></entry><entry><title>Internet Explorer and SPNs</title><link href="https://blog.backslasher.net/internet-explorer-and-spns.html" rel="alternate"></link><published>2011-01-06T20:33:00+01:00</published><updated>2011-01-06T20:33:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-01-06:/internet-explorer-and-spns.html</id><summary type="html">&lt;p&gt;After learning how SPNs work (read my &lt;a href="https://blog.backslasher.net/spns-who-why-where.html"&gt;"Who? Why? Where"&lt;/a&gt;
to learn what's an SPN), I was frustrated to find out that I can't
implement my experience in the real world.&lt;br&gt;
I've created a Sharepoint
Central Admin site on port 1234, and wanted to enable kerberos
authentication for it, so â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;After learning how SPNs work (read my &lt;a href="https://blog.backslasher.net/spns-who-why-where.html"&gt;"Who? Why? Where"&lt;/a&gt;
to learn what's an SPN), I was frustrated to find out that I can't
implement my experience in the real world.&lt;br&gt;
I've created a Sharepoint
Central Admin site on port 1234, and wanted to enable kerberos
authentication for it, so I've created an SPN reading &lt;code&gt;http/server:1234&lt;/code&gt;
on the right account, and it didn't work!&lt;br&gt;
The SPN that did work is &lt;code&gt;http/server&lt;/code&gt;, which should work only for the site on port 80 (because
it's the default port for HTTP). Turns out that IE6 had a bug, which
caused it to always request TGS without port numbers (&lt;code&gt;http/server&lt;/code&gt;),
even when navigating to a site in a non-default port. A hotfix
(&lt;a href="http://support.microsoft.com/kb/908209"&gt;kb908209&lt;/a&gt;) was issued and all
was well. Problem is, &lt;strong&gt;we use IE8!&lt;/strong&gt; Surely, someone must have fixed
that behavior in the new browsers?&lt;br&gt;
Apparently, in order to maintain compatibility, new versions of IE(7+)
use the same defected SPN formulation. To switch to the new version, you
have to add this registry key:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;x86:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_INCLUDE_PORT_IN_SPN_KB908209:iexplore.exe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;x64:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_INCLUDE_PORT_IN_SPN_KB908209:iexplore.exe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I used Group Policy Preferences to distribute it to all my servers.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Mysteries Solved"></category><category term="Internet Explorer"></category><category term="SharePoint"></category></entry><entry><title>Checking for conflicting oIDs</title><link href="https://blog.backslasher.net/checking-for-conflicting-oids.html" rel="alternate"></link><published>2010-12-24T22:16:00+01:00</published><updated>2010-12-24T22:16:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-12-24:/checking-for-conflicting-oids.html</id><summary type="html">&lt;p&gt;I got word that this script was useful for some other IT team, so it's definitely blog-worthy!  &lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I've inherited some AD forests with their schema extended by in-house software, using oIDs belonging to an MS pool, meaning that those numbers might be used by future schema extensions by â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I got word that this script was useful for some other IT team, so it's definitely blog-worthy!  &lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I've inherited some AD forests with their schema extended by in-house software, using oIDs belonging to an MS pool, meaning that those numbers might be used by future schema extensions by MS and friends.&lt;br&gt;
A very uneasy situation, because whenever I want to extend the schema we have to anticipate oID clashes, requiring forest recovery.&lt;br&gt;
When we prepared the schema for a 2008R2 DC, I've created this nifty script to search for our schema entries and compare their oIDs to the ones in the ldf files that &lt;code&gt;adPrep&lt;/code&gt; is using, to see if there are any
conflicts.&lt;br&gt;
Of course, this script is no replacement to backing up the forest, and maybe extending the schema in a lab before doing the real deal - It'll just help you see if there are obvious conflicts.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;h3&gt;The Script&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Checks for conflicting OIDs in the current AD Schema and some ldf files&lt;/span&gt;
&lt;span class="sd"&gt;.DESCRIPTION&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;This script should be used to examine piratly-extended schemas (ones that were extended with oID not belonging to an isolated pool) before further extending them.&lt;/span&gt;
&lt;span class="cm"&gt;This script collects all oIDs from the schema partition of the current forest, and from all .ldf files in a specified folders, and tries to find conflicting ones.&lt;/span&gt;
&lt;span class="cm"&gt;If found, the conflicting AD object is presented.&lt;/span&gt;
&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Check-ConflictingOIDs.ps1 -objectPattern &amp;#39;MyApp*&amp;#39; -ldfPath &amp;#39;C:\OCS 2007R2\&amp;#39;&lt;/span&gt;
&lt;span class="cm"&gt;Compares all objects starting with &amp;quot;MyApp&amp;quot; with all .ldf files found in &amp;quot;C:\OCS 2007R2\&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;My Blog: http://OneBoredAdmin.blogspot.com&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$objectPattern&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$ldfPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Get all OIDs from AD&lt;/span&gt;
&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;
&lt;span class="nb"&gt;pushd &lt;/span&gt;&lt;span class="n"&gt;ad&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;
&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="n"&gt;schem&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt;
&lt;span class="nv"&gt;$ADIs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="nv"&gt;$objectPattern&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objectClass&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;classSchema&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Get-ADObject&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;governsId&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uID&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;governsId&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="nv"&gt;$ADIs&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="nv"&gt;$objectPattern&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objectClass&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;attributeSchema&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Get-ADObject&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;attributeID&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attributeID&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="nb"&gt;popd&lt;/span&gt;

&lt;span class="c"&gt;# Get all OIDs from File&lt;/span&gt;
&lt;span class="nb"&gt;pushd &lt;/span&gt;&lt;span class="nv"&gt;$ldfPath&lt;/span&gt;
&lt;span class="nv"&gt;$files&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;*.&lt;/span&gt;&lt;span class="n"&gt;ldf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$FSIs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$files&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Get-Content&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(governsID)|(attributeID):&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^.+: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;popd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;# Compare all AD-OIDs to FS-OIDs&lt;/span&gt;
&lt;span class="nv"&gt;$bFound&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;
&lt;span class="nv"&gt;$ADIs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$FSIs&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$bFound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$bFound&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CONFLICT FOUND!&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Vanishing permissions on AD objects</title><link href="https://blog.backslasher.net/vanishing-permissions-on-ad-objects.html" rel="alternate"></link><published>2010-12-22T22:14:00+01:00</published><updated>2010-12-22T22:14:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-12-22:/vanishing-permissions-on-ad-objects.html</id><summary type="html">&lt;p&gt;I recently managed to solve a problem that bugged me for a ~ year -
permissions on a specific group on AD would vanish, and the change won't
show up on the security logs of any DC (as audit success).  &lt;/p&gt;
&lt;h4&gt;The Story&lt;/h4&gt;
&lt;p&gt;We've made groups for our helpdesk teams, and
gave them â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently managed to solve a problem that bugged me for a ~ year -
permissions on a specific group on AD would vanish, and the change won't
show up on the security logs of any DC (as audit success).  &lt;/p&gt;
&lt;h4&gt;The Story&lt;/h4&gt;
&lt;p&gt;We've made groups for our helpdesk teams, and
gave them appropriate permissions on object in AD (create users, reset
passwords) and made the groups members of some builtin groups. Then,
we've set each helpdesk supervisor as its group's &lt;code&gt;managed by&lt;/code&gt;,
with the additional "Manager can update membership list" (translates to
an ACE on the group).  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/vanishing-permissions-on-ad-objects/Group.png"&gt;&lt;/p&gt;
&lt;p&gt;The problem was that every other day, the supervisor called and
complained he can't add people to the group. We checked the group
properties, and sure enough, the check was gone!  &lt;/p&gt;
&lt;p&gt;After mutual accusations and name calling I've tried:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Auditing all changes to the group. Didn't help. My changes get
    logged, the mystery ones didn't.&lt;/li&gt;
&lt;li&gt;Manually adding permissions through the security tab, giving the guy
    &lt;code&gt;full control&lt;/code&gt; on the group. These ACEs fizzled just the same.&lt;/li&gt;
&lt;li&gt;Changing the group's location. Nothing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The solution&lt;/h3&gt;
&lt;p&gt;Eventually, I've found &lt;a href="http://support.microsoft.com/kb/817433"&gt;this (KB817433)&lt;/a&gt;, that describes some
interesting mechanism called &lt;code&gt;AdminSDHolder&lt;/code&gt;. Apparently, some builtin
objects are considered sensitive, because users in control over these
objects can maliciously elevate themselves to enterprise-adminhood: &lt;br&gt;
Users:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Administrator&lt;/li&gt;
&lt;li&gt;Krbtgt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Groups:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Administrators&lt;/li&gt;
&lt;li&gt;Account Operators&lt;/li&gt;
&lt;li&gt;Server Operators&lt;/li&gt;
&lt;li&gt;Print Operators&lt;/li&gt;
&lt;li&gt;Backup Operators&lt;/li&gt;
&lt;li&gt;Domain Admins&lt;/li&gt;
&lt;li&gt;Schema Admins&lt;/li&gt;
&lt;li&gt;Enterprise Admins&lt;/li&gt;
&lt;li&gt;Cert Publishers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, every hour (by default, can be changed. See KB), the PDC makes sure
these objects' ACLs are identical to the ACL of the object &lt;code&gt;CN=adminSDHolder,CN=System,DC=mydomain,DC=com&lt;/code&gt; and if not, it resets the objects' ACLs (and disables security
inheritance from their container).&lt;br&gt;
The shocker is that &lt;strong&gt;members in these groups are also sensitive&lt;/strong&gt;. As
it happens, we've added the helpdesk group to the builtin "Print
Operators" (for no good reason). Because of that, our helpdesk group was
considered sensitive by the PDC, and so it repeatedly stripped the team
leader's ACE. After removing the group from "Print Operators", the ACE
never disappeared again!&lt;br&gt;
So remember kids, if you add users / groups to the builtin ones, you'll
only have the default boring ACL on these.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="Active Directory"></category><category term="Security"></category></entry><entry><title>Stsadm / new SPSite is slow</title><link href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html" rel="alternate"></link><published>2010-12-14T09:18:00+01:00</published><updated>2010-12-14T09:18:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-12-14:/stsadm-new-spsite-is-slow.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Get the script &lt;a href="https://blog.backslasher.net/disabling-generate-publisher-evidence.html"&gt;here&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;A couple of days ago, developer extraordinaire &lt;a href="http://blogs.microsoft.co.il/blogs/itaysk/"&gt;Itay
Shakury&lt;/a&gt; was doing
performance tuning on one of our SharePoint applications, and came to me with
a problem - creating a new SPSite object took about 30 secs. The
stranger part was that &lt;strong&gt;only the first â€¦&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Get the script &lt;a href="https://blog.backslasher.net/disabling-generate-publisher-evidence.html"&gt;here&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;A couple of days ago, developer extraordinaire &lt;a href="http://blogs.microsoft.co.il/blogs/itaysk/"&gt;Itay
Shakury&lt;/a&gt; was doing
performance tuning on one of our SharePoint applications, and came to me with
a problem - creating a new SPSite object took about 30 secs. The
stranger part was that &lt;strong&gt;only the first creation of SPSite in every
appDomain is slow&lt;/strong&gt;.&lt;br&gt;
We've tried the usual things:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using SQL Profiler to check for DB-delays. Nope, all queries were as
    quick as a fox&lt;/li&gt;
&lt;li&gt;Perfmoning the servers to death, looking for CPU/memory/disk spikes.
    No luck again&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the way, we used this bit of code to check exactly how slow the
SPSite creation is:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Log-Message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="no"&gt;[DateTime]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[hh:mm:ss.fff]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; $Message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$Url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://SERVER/Url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Log-Message&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Loading Assembly&amp;#39;&lt;/span&gt;
&lt;span class="no"&gt;[Reflection.Assembly]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;LoadWithPartialName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Microsoft.Sharepoint&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-Null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Log-Message&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Creating SPSite&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$Site&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sharepoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SPSite&lt;/span&gt; &lt;span class="nv"&gt;$Url&lt;/span&gt;
&lt;span class="n"&gt;Log-Message&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Finished&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now I did some thinkning. What happens only one time in an AppDomain? I
thought of 3 things:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Poorly written singletons&lt;/strong&gt;. If that were the case, people all
    around the world would be having problems, and not just us.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connections to DBs&lt;/strong&gt;. Using SQL Profiler we found out that the
    connection to the ConfigDB only happens in the last of the 30
    seconds, meaning the DB is not to blame...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lazy loading&lt;/strong&gt;. (Spoiler: This is it) For those of us who forgot
    what it is, lazy loading is "don't look for / load dlls until the
    first time they're actually needed". How can we check that&lt;span
    style="font-size: 125%;"&gt;&lt;span class="Unicode"&gt;â€½&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I suddenly remembered some problem I hadn't run into myself, but is
famous in my team:&lt;br&gt;
SQL Server Management Studio was slow to load (&lt;a href="http://support.microsoft.com/?kbid=918644"&gt;KB918644&lt;/a&gt;). It happened
because the studio's assemblies (dlls) were digitally signed by MS using
Authenticode, that uses some sort of SSL-like certificates, and the
studio was trying to check MS's CRL (Certificate Revocation List) to
make sure the digisignature isn't revoked. Because we work in a
disconnected environment, it couldn't succeed.&lt;br&gt;
I've decided to NetMon the sever, and sure enough, my script was
DNS-querying for &lt;code&gt;crl.microsoft.com&lt;/code&gt;, and obviously failing.&lt;br&gt;
After solving this issue, as a bonus, my &lt;code&gt;Stsadm.exe&lt;/code&gt; commands were WAY
faster. Until now, it would take the process about 1 min to tell me I
have the wrong input, and I would die a little bit inside.  &lt;/p&gt;
&lt;h3&gt;Possible Solutions&lt;/h3&gt;
&lt;h4&gt;1. Allow access to crl.microsoft.com&lt;/h4&gt;
&lt;p&gt;If you're lucky(?) enough to be working in a blocked, not disconnected
environment, consider simply allowing traffic to the crl site through
your proxy/firewall/whatever.  &lt;/p&gt;
&lt;h4&gt;2. Stop checking for CRLs&lt;/h4&gt;
&lt;p&gt;If you ouldn't care less if someone stole MS's certificate and created an evil
&lt;code&gt;harepoint.dll&lt;/code&gt; just kidding. We all fear that), you can tell Windows to
stop checking for CRLs altogether.&lt;br&gt;
&lt;strong&gt;The user-specific way:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; This setting affects all software run by that user. You shouldn't use turn it off if this user on this server is used to process smartcard logons, for
example.&lt;br&gt;
Either turn off &lt;code&gt;Inetcpl.cpl &amp;gt; Advanced &amp;gt; Security &amp;gt; Check for publisher's certificate revocation&lt;/code&gt; Or set
this regkey:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKCU\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing:State&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;00023e00&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Another note:&lt;/strong&gt; Iv'e seen people scripting something to change the settings for all keys under &lt;code&gt;HKEY_USERS&lt;/code&gt;. While this &lt;strong&gt;seems&lt;/strong&gt; ok, it will actually change settings for all new users (through &lt;code&gt;.DEFAULT&lt;/code&gt;) and for all existing users &lt;strong&gt;with their registry hive currently loaded. Not all users have their hive
loaded at every moment!&lt;/strong&gt; If you're into automation, you're better off
with using Group Policy Preferences (use user preferences, and
server-name-based targeting).
&lt;strong&gt;The machine / app specific way:&lt;/strong&gt;&lt;br&gt;
Use the machine/app/web.config to disable generation of publisher evidence,
the CRL-related process, thusly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;runtime&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;generatePublisherEvidence&lt;/span&gt; &lt;span class="na"&gt;enabled=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/runtime&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(Of course you don't blank your .config files, only add this setting)
&lt;strong&gt;Update (27/12):&lt;/strong&gt; Apparently, on x64 machines, you should change &lt;strong&gt;both&lt;/strong&gt;the x86 and the x64 .config files.&lt;br&gt;
&lt;strong&gt;Update (28/1/14):&lt;/strong&gt; I uploaded &lt;a href="https://blog.backslasher.net/disabling-generate-publisher-evidence.html"&gt;the script&lt;/a&gt; we used  &lt;/p&gt;
&lt;h4&gt;3. Fetch the CRLs yourself&lt;/h4&gt;
&lt;p&gt;If the CRLs stored in the server's certificate store are fresh enough,
it &lt;strong&gt;shouldn't&lt;/strong&gt; dial home for new ones.&lt;br&gt;
Download these:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://crl.microsoft.com/pki/crl/products/CodeSignPCA.crl"&gt;http://crl.microsoft.com/pki/crl/products/CodeSignPCA.crl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://crl.microsoft.com/pki/crl/products/CodeSignPCA2.crl"&gt;http://crl.microsoft.com/pki/crl/products/CodeSignPCA2.crl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add to certificate store:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;certutil -addstore CA CodeSignPCA.crl   
certutil -addstore CA CodeSignPCA2.crl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Could be distributed through Group Policy as well, but I didn't try it.  &lt;/p&gt;
&lt;h4&gt;4. Mess with the process&lt;/h4&gt;
&lt;p&gt;I don't like this option, but If you're feeling malicious, you can just use your
&lt;code&gt;hosts&lt;/code&gt; file to point &lt;code&gt;crl.microsoft.com&lt;/code&gt; into one of your servers (e.g. &lt;code&gt;127.0.0.1&lt;/code&gt;), causing windows to skip the 15-sec timeout issue and fail immediatly, when the server will refuse to hand him the CRLs.  &lt;/p&gt;
&lt;h3&gt;Credit&lt;/h3&gt;
&lt;p&gt;Kudos for &lt;a href="http://dirkvandenberghe.com/2009/01/08/speed-up-sharepoint-spin-up-and-stsadm-execution-time-by-jeroen-ritmeijer.html"&gt;Dirk Van den Berghe&lt;/a&gt; for handing out the methods for solving the issue.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Programming"></category><category term="PKI"></category><category term="Mysteries Solved"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Performance"></category></entry><entry><title>WindowsIdentity.GetCurrent and changing usernames</title><link href="https://blog.backslasher.net/windowsidentitygetcurrent-and-changing-usernames.html" rel="alternate"></link><published>2010-10-25T10:02:00+02:00</published><updated>2010-10-25T10:02:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-10-25:/windowsidentitygetcurrent-and-changing-usernames.html</id><summary type="html">&lt;p&gt;We've recently encountered an interesting problem:&lt;br&gt;
One of our applications had a service using .net remoting with
impersonation turned on.&lt;br&gt;
Inside this service we had some code using
&lt;a href="http://msdn.microsoft.com/en-us/library/sfs49sw0%28v=vs.110%29.aspx"&gt;WindowsIdentity.GetCurrent()&lt;/a&gt;
to find the user in AD and check some of its properties.&lt;br&gt;
Our issue was thus:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;User &lt;code&gt;X&lt;/code&gt; logs in â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;We've recently encountered an interesting problem:&lt;br&gt;
One of our applications had a service using .net remoting with
impersonation turned on.&lt;br&gt;
Inside this service we had some code using
&lt;a href="http://msdn.microsoft.com/en-us/library/sfs49sw0%28v=vs.110%29.aspx"&gt;WindowsIdentity.GetCurrent()&lt;/a&gt;
to find the user in AD and check some of its properties.&lt;br&gt;
Our issue was thus:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;User &lt;code&gt;X&lt;/code&gt; logs in and uses the service. All is well.&lt;/li&gt;
&lt;li&gt;User &lt;code&gt;X&lt;/code&gt; has its &lt;code&gt;LogonName&lt;/code&gt; and &lt;code&gt;SAMAccountName&lt;/code&gt; changed to &lt;code&gt;Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;User &lt;code&gt;Y&lt;/code&gt; logs on and uses the service.&lt;/li&gt;
&lt;li&gt;When the service is calling &lt;code&gt;WindowsIdentity.GetCurrent()&lt;/code&gt;, the
    username returned is &lt;code&gt;X&lt;/code&gt;, even though the name has changed.&lt;/li&gt;
&lt;li&gt;After restarting the server (not only the service, the entire OS),
    All is well (until the next time a user chnages the LogonName).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We eventually discovered that WindowsIdentity uses
&lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms721799%28v=vs.85%29.aspx"&gt;LsaLookupSids&lt;/a&gt;,
which caches the SID/username mappings instead of asking the DC again.
To prevent that, there is a registry value that can be changed to stop
caching, according to
&lt;a href="http://support.microsoft.com/kb/946358"&gt;kb946358&lt;/a&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;System\CurrentControlSet\Control\Lsa:LsaLookupCacheMaxSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I made it into a little script, that we used as a mid-term solution to
clear the server's cache without disrupting service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$servers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$servers&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$base&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[microsoft.win32.registrykey]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OpenRemoteBaseKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LocalMachine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$sub&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OpenSubKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;System\CurrentControlSet\Control\Lsa&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LsaLookupCacheMaxSize&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nb"&gt;Start-Sleep&lt;/span&gt; &lt;span class="n"&gt;-Seconds&lt;/span&gt; &lt;span class="n"&gt;5&lt;/span&gt;
 &lt;span class="nv"&gt;$sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeleteValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LsaLookupCacheMaxSize&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Programming"></category><category term="Active Directory"></category><category term="Security"></category><category term="PowerShell"></category></entry><entry><title>A few seconds about psbase</title><link href="https://blog.backslasher.net/few-seconds-about-psbase.html" rel="alternate"></link><published>2010-10-03T22:04:00+02:00</published><updated>2010-10-03T22:04:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-10-03:/few-seconds-about-psbase.html</id><summary type="html">&lt;p&gt;I really like Powershell's dynamic type system, which allows you to, among other things, view XML nodes really easily. For example, to view the connectionStrings stored in your machine.config, all you have to do is something like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;gc &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I really like Powershell's dynamic type system, which allows you to, among other things, view XML nodes really easily. For example, to view the connectionStrings stored in your machine.config, all you have to do is something like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;gc &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connectionStrings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And you have a set of working PS objects.&lt;br&gt;
&lt;strong&gt;However&lt;/strong&gt;, when you try to view the properties/methods of the XmlNode object, such as "ParentNode" (using Get-Member, for instance), you only see the data properties of the XML element contained (such as "key").&lt;br&gt;
The answer - &lt;code&gt;PSBase&lt;/code&gt;. It's a hidden member every object has (along with
some other ones, see &lt;a href="http://blogs.msdn.com/b/powershell/archive/2006/11/24/what-s-up-with-psbase-psextended-psadapted-and-psobject.aspx"&gt;here&lt;/a&gt; for greater detail), which displays the raw object, without PowerShell's good-intentioned intervention.&lt;br&gt;
I like to use it while writing scripts, to find the members I need to accomplish stuff. As long as these members aren't hidden by an identically-named member created by PowerShell, they'll behave fine without PSBase if called explicitly (e.g. &lt;code&gt;$bla.ParentNode&lt;/code&gt;).&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category></entry><entry><title>SPNs - Who? Why? Where?</title><link href="https://blog.backslasher.net/spns-who-why-where.html" rel="alternate"></link><published>2010-10-02T22:01:00+02:00</published><updated>2010-10-02T22:01:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-10-02:/spns-who-why-where.html</id><summary type="html">&lt;p&gt;I was making an introduction to a new teammate about SharePoint
infrastructure, and one of the things I had to teach her about was SPNs.
I was surprised to know almost no one at our place knew what SPNs are
actually for. Until my PowerPoint presentation is ready, here is â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was making an introduction to a new teammate about SharePoint
infrastructure, and one of the things I had to teach her about was SPNs.
I was surprised to know almost no one at our place knew what SPNs are
actually for. Until my PowerPoint presentation is ready, here is a
(relatively) short explanation:&lt;br&gt;
First of all, SPNs are part of how Kerberos authentication works, and is
used to help encrypt the Client-Server ticket. This a &lt;strong&gt;very&lt;/strong&gt; basic
explanation of what's going on:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When the user logs in to an Active Directory domain, it recives a
    TGT (ticket-granting ticket), allowing the client to request other
    tickets. It's only capable of proving the client's identity to a DC.&lt;/li&gt;
&lt;li&gt;Whenever the client decides to authenticate to a service (for
    example, a web site), the client requests its DC for a CS
    (client-server) ticket, providing the TGT as proof of its identity.&lt;/li&gt;
&lt;li&gt;The DC replies with a CS ticket, &lt;strong&gt;encrypted so that only the
    service can read it&lt;/strong&gt;. This ticket proves to this specific service
    that the ticket's holder is a specific client&lt;/li&gt;
&lt;li&gt;The client passes the CS ticket on (note it can't read it itself) to
    the service.&lt;/li&gt;
&lt;li&gt;The service decrypts the CS ticket, and therefore validates that the
    CS ticket-holder is in fact the user as claimed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The SPN comes in step 3 (if you haven't guessed), to help the DC decide
how to encrypt the CS ticket. Understandably, the only thing that only
the DC and the service know (the &lt;strong&gt;shared secret&lt;/strong&gt;) is the service
user's (the user running the service) password, or any hash derived from
it. So the DC encrypts the CS ticket with a hash of the service user's
password, and sends the ticket onwards.&lt;br&gt;
Let's look at an example:&lt;br&gt;
The user &lt;code&gt;Dom\Nitz&lt;/code&gt; tries to connect to server &lt;code&gt;Dom\Server&lt;/code&gt; in port
&lt;code&gt;81&lt;/code&gt;:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Nitz logs on to the domain and gets a TGT for &lt;code&gt;Dom\Nitz&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Nitz opens his Internet Explorer and connects to
    &lt;code&gt;http://Server:81&lt;/code&gt;.&lt;br&gt;
   The IE and the IIS on the other side negotiate Kerberos
    authentication.&lt;br&gt;
   IE requests from the DC (through windows, of course) a CS ticket for
    the &lt;strong&gt;service&lt;/strong&gt; &lt;code&gt;http/Server:81&lt;/code&gt; (notice the SPN shape)&lt;/li&gt;
&lt;li&gt;The DC creates the CS ticket and encrypts it with the service's
    password.&lt;br&gt;
&lt;strong&gt;Whose password should it use?&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If no SPN is specified, the DC assumes the service user is the server's
account, in our case &lt;code&gt;Dom\Server$,&lt;/code&gt; and uses its password (yes,
computer accounts have passwords). Let's see what happens if the DC is
right:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Client receives the CS ticket, and passes it on to the service
    on port 81.&lt;/li&gt;
&lt;li&gt;The web server (running as &lt;code&gt;Dom\Server$&lt;/code&gt;) decrypts the ticket and
    validates the client's identity. Success!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The problem starts when this assumption is wrong. For example, when the
server is part of a SharePoint farm and port 81 is run from an appPool with
user &lt;code&gt;Dom\Service&lt;/code&gt;. Let's see what happens then:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Client receives the CS ticket, and passes it on to the service
    on port 81.&lt;/li&gt;
&lt;li&gt;The web server (running as &lt;code&gt;Dom\Service&lt;/code&gt;) &lt;strong&gt;tries&lt;/strong&gt; to decrypt the
    ticket, and fails (since its password wasn't the one used to encrypt
    it).&lt;br&gt;
   Kerberos Authentication Error, type &lt;code&gt;KRB_AP_ERR_MODIFIED&lt;/code&gt;. :-(&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The SPN, as you must have guessed, is a way to tell the DC something
like "encrypt all CS tickets for &lt;code&gt;http/Server:81&lt;/code&gt; using &lt;code&gt;Dom\Service&lt;/code&gt;'s
password". That way, CS tickets forwarded to this service will decrypt
correctly. It's done by adding the &lt;strong&gt;Service Principle Name&lt;/strong&gt; (or "the
way the service is called"), composed of &lt;code&gt;Protocol/ServerName[:Port]&lt;/code&gt;
(only specify port for non-defaults, like HTTP ports other than 80) to
the attribute on the service account in the Active Directory.&lt;/p&gt;
&lt;h3&gt;What do I do?&lt;/h3&gt;
&lt;h4&gt;The short answer&lt;/h4&gt;
&lt;p&gt;If you have a service not running as &lt;code&gt;SYSTEM&lt;/code&gt;, but rather as a domain account, you have to use an SPN to allow kerberos authentication to it. Add the right SPN (such as &lt;code&gt;http/Server:81&lt;/code&gt;) to the domain account
running the service. That's it. No restart, no logoff, nothing.&lt;/p&gt;
&lt;h4&gt;Details&lt;/h4&gt;
&lt;p&gt;You can either use &lt;code&gt;adsiedit&lt;/code&gt; (BE CAREFUL!) to write to &lt;code&gt;ServicePrincipalName&lt;/code&gt; of the right domain account, or use &lt;code&gt;SetSpn {SPN} {Domain\\Account}&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Protips&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Always register short (NETBIOS) server name (&lt;code&gt;Server&lt;/code&gt;) and long (DNS) server name (&lt;code&gt;Server.Domain.Com&lt;/code&gt;), to avoid glitches in authentication mechanizes and human errors.  &lt;/li&gt;
&lt;li&gt;Consider cleanups of decommissioned services (see &lt;code&gt;SetSpn&lt;/code&gt; on server 2008+) to avoid duplicate SPNs (same SPN entry, two or more different users). Duplicate SPNs are bad, because the DC doesn't know who's password to use to encrypt the CS
ticket.&lt;/li&gt;
&lt;li&gt;If you're having Kerberos authentication issues, try
&lt;a href="http://technet.microsoft.com/en-us/library/cc728430%28WS.10%29.aspx"&gt;troubleshooting&lt;/a&gt; before giving up and falling back to NTLM for good. Kerberos isn't that
complex to set up! (Only to troubleshoot...).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Pitfalls:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Service account is:  &lt;ul&gt;
&lt;li&gt;Locked out&lt;/li&gt;
&lt;li&gt;Has different password than in AD (did you change the password?)&lt;/li&gt;
&lt;li&gt;Lost &lt;code&gt;User Right Assignments&lt;/code&gt; on the server (faulty Group Policy)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;User account is:&lt;ul&gt;
&lt;li&gt;Locked out&lt;/li&gt;
&lt;li&gt;Has different password than in AD ("Windows needs your current credentials" is usually that)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Machines are:&lt;ul&gt;
&lt;li&gt;With a firewall blocking necessary AD ports (to their respective DCs)&lt;/li&gt;
&lt;li&gt;With a time difference greater than the Kerb tolerance policy (usually 5
mins)&lt;/li&gt;
&lt;li&gt;AD membership is messed up (use &lt;code&gt;NETDOM VERIFY&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Kerberos almost certainly won't work for&lt;ul&gt;
&lt;li&gt;Computers set in different domains without trusts (ask the AD admins)&lt;/li&gt;
&lt;li&gt;Computers outside a domain (duh)&lt;/li&gt;
&lt;li&gt;Services addressed using IP (i.e. &lt;code&gt;http://127.0.0.1/&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Kerberos is a great auth mechanism
for windows-based services, and especially SharePoint (very little farm
config needed). SPNs are required if a non-SYSTEM user is used, or a
multi-FE farm is deployed (and you choose Kerberos).&lt;br&gt;
It's easy to deploy Kerberos auth (after making all possible mistakes), just make sure you're coupled with an AD guy to avoid stupid issues (like replication / incorrect account selection), and most importantly, DON'T PANIC!&lt;br&gt;
I hope this post will save at least one person a night of frustration, learning how to deploy SPNs the hard way.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="SharePoint"></category><category term="Active Directory"></category><category term="Security"></category></entry><entry><title>2008 Clusters can't change password</title><link href="https://blog.backslasher.net/2008-clusters-cant-change-password.html" rel="alternate"></link><published>2010-08-23T23:49:00+02:00</published><updated>2010-08-23T23:49:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-08-23:/2008-clusters-cant-change-password.html</id><summary type="html">&lt;p&gt;Last week MS's PFE Moti Bani and me solved a problem that bugged me for ~ a year - since the day we've started deploying 2008 clusters in our production environment:&lt;br&gt;
&lt;strong&gt;2008+ Clusters can't update their CNO and VCO accounts' passwords.&lt;/strong&gt;&lt;br&gt;
The error, as shown in the cluster administrator, was:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Cluster network â€¦&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Last week MS's PFE Moti Bani and me solved a problem that bugged me for ~ a year - since the day we've started deploying 2008 clusters in our production environment:&lt;br&gt;
&lt;strong&gt;2008+ Clusters can't update their CNO and VCO accounts' passwords.&lt;/strong&gt;&lt;br&gt;
The error, as shown in the cluster administrator, was:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Cluster network name resource &amp;#39;Cluster Name&amp;#39; cannot be brought online.
The computer object associated with the resource could not be updated in domain &amp;#39;&amp;#39; for the following reason:
Unable to update password for computer account.

The text for the associated error code is: Access is denied.


The cluster identity &amp;#39;&amp;#39; may lack permissions required to update the object. Please work with your domain administrator to ensure that the cluster identity can update computer objects in the domain.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And in the cluster logs:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;????????.????????::2010/??/??-??:??:??.??? ERRÂ Â  [RES] Network Name : Unable to update password for computer account on DC \\., status 5.&amp;quot;*  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Although this issue isn't critical, it was annoying to see it piling up in the &lt;code&gt;CluAdmin.msc&lt;/code&gt; and the opsMgr console, and it was quite disturbing to know that somewhere, computer accounts are sitting there with year+ passwords, decreasing my domain's overall security.&lt;br&gt;
Last month we've decided this problem is worth some PFE hours, and started troubleshooting it.&lt;br&gt;
Among the actions we've tried were:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding permissions to the cluster/node accounts on the CNO, eventually trying &lt;code&gt;everyone: full control&lt;/code&gt; (only for 5 minutes, I swear!)&lt;/li&gt;
&lt;li&gt;Enabling auditing on the AD and the cluster nodes, trying to study that annoying "access denied". Nothing showed up on our logs&lt;/li&gt;
&lt;li&gt;Activating ADSI auditing and event tracing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eventually, Moti noticed that some of the ACLs on some of my AD containers were messed up:&lt;br&gt;
The &lt;code&gt;authenticated users: read,read permissions, read all properties&lt;/code&gt; ACEs on the domain root, &lt;code&gt;cn=builtin&lt;/code&gt;, &lt;code&gt;cn=computers&lt;/code&gt; and &lt;code&gt;cn=users&lt;/code&gt; were blanked out (not missing, mind you). Within 5 minutes from fixing those ACEs (and replicating), all of the cluster accounts in my production env changed their password! &lt;br&gt;
Our latest theory is that the cluster tried to LDP bind to the AD to check if the account is locked before attempting to change the password through ADSI. The LDP bind destination was one of those containers, and because the LDP bind failed (no read permission or whatever) the cluster gave up on changing the password altogether... What a day.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Failover Cluster"></category><category term="Active Directory"></category><category term="Mysteries Solved"></category><category term="Security"></category><category term="Windows"></category></entry><entry><title>Auto-Sorting Computers in WSUS</title><link href="https://blog.backslasher.net/auto-sorting-computers-in-wsus.html" rel="alternate"></link><published>2010-07-29T20:15:00+02:00</published><updated>2010-07-29T20:15:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-07-29:/auto-sorting-computers-in-wsus.html</id><summary type="html">&lt;p&gt;When I installed my first WSUS server, I liked the idea of auto-assigning computers into different WSUS groups according to domains using the group policy's settings.&lt;br&gt;
However, it's a bummer to find out that you can only assign every computer to &lt;strong&gt;one&lt;/strong&gt; group using GP (and not being able to â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I installed my first WSUS server, I liked the idea of auto-assigning computers into different WSUS groups according to domains using the group policy's settings.&lt;br&gt;
However, it's a bummer to find out that you can only assign every computer to &lt;strong&gt;one&lt;/strong&gt; group using GP (and not being able to manually assign), or avoid GP groups &lt;strong&gt;at all&lt;/strong&gt; and assign computers manually.&lt;br&gt;
Eventually I ended up creating this PowerShell script that checks for unassigned computers nightly, and assigns them to the right groups.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Sorts unassigned WSUS clients into domain-matching groups&lt;/span&gt;

&lt;span class="sd"&gt;.Description&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;This scripts loops over all unassigned computer records in WSUS, and assigns each one to the group with a name matching it&amp;#39;s single-lable domain name, if such a group exists.&lt;/span&gt;

&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Sort-WSUSComputers.ps1 &amp;#39;WSUS1&amp;#39;&lt;/span&gt;

&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;My Blog: http://blog.backslasher.net&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$wsusServer&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$dnsDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$env:USERDNSDOMAIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$Domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$env:USERDOMAIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$topDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$dnsDomain&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Domain&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ErrorActionPreference&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="no"&gt;[reflection.assembly]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;LoadWithPartialName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Microsoft.UpdateServices.Administration&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$wsus&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[Microsoft.UpdateServices.Administration.AdminProxy]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetUpdateServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wsusServer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c"&gt;# locate the &amp;quot;unassigned&amp;quot; group&lt;/span&gt;
&lt;span class="nv"&gt;$Unassigned&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wsus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetComputerTargetGroups&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unassigned Computers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="n"&gt;GetComputerTargets&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$Unassigned&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$Domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FullDomainName&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(^[^\.]+\.)|(&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$topDomain&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c"&gt;# Find the matching group&lt;/span&gt;
    &lt;span class="nv"&gt;$Group&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wsus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetComputerTargetGroups&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$Domain&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c"&gt;# Add the computer&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Group&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$Group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddComputerTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="WSUS"></category></entry><entry><title>Get-BigDirectories</title><link href="https://blog.backslasher.net/get-bigdirectories.html" rel="alternate"></link><published>2010-07-29T10:23:00+02:00</published><updated>2010-07-29T10:23:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-07-29:/get-bigdirectories.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This script is better than just &lt;code&gt;ls -rec | measure&lt;/code&gt;, because measure measures only one field, and when iterating over many files and directories, every iteration counts.&lt;/p&gt;
&lt;p&gt;Whenever our roaming profiles folder gets too big, we have to prune the
profiles that are both old and heavy. Using windows explorer â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This script is better than just &lt;code&gt;ls -rec | measure&lt;/code&gt;, because measure measures only one field, and when iterating over many files and directories, every iteration counts.&lt;/p&gt;
&lt;p&gt;Whenever our roaming profiles folder gets too big, we have to prune the
profiles that are both old and heavy. Using windows explorer, it's easy
enough to see the size of a specific folder, but the &lt;code&gt;last modified&lt;/code&gt;
date is misleading, because files in that folder may have changed while
the folder stayed the same. PowerShell to the rescue!  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Searches and possibly deletes old and big folders&lt;/span&gt;

&lt;span class="sd"&gt;.DESCRIPTION&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;This script recursively checks folders for files, marking for every first-level folder&lt;/span&gt;
&lt;span class="cm"&gt;the sum of all of it&amp;#39;s files size, and the latest WriteTime of a file.&lt;/span&gt;
&lt;span class="cm"&gt;If required, the script deletes folders that are both old enough and big enough.&lt;/span&gt;

&lt;span class="sd"&gt;.PARAMETER&lt;/span&gt;&lt;span class="cm"&gt; Path&lt;/span&gt;
&lt;span class="cm"&gt;The location of the folder to scan. Default is current folder.&lt;/span&gt;

&lt;span class="sd"&gt;.PARAMETER&lt;/span&gt;&lt;span class="cm"&gt; Delete&lt;/span&gt;
&lt;span class="cm"&gt;Whether to delete the matching folders, or just to point them out&lt;/span&gt;

&lt;span class="sd"&gt;.PARAMETER&lt;/span&gt;&lt;span class="cm"&gt; MinSizeMB&lt;/span&gt;
&lt;span class="cm"&gt;The minimum size of a folder to be deleted, in MBs. Default is 5MB&lt;/span&gt;

&lt;span class="sd"&gt;.PARAMETER&lt;/span&gt;&lt;span class="cm"&gt; MinYearsOld&lt;/span&gt;
&lt;span class="cm"&gt;The minimum age of a folder to be deleted, in years. Default is 1 year&lt;/span&gt;

&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;My Blog: http://OneBoredAdmin.blogspot.com&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Path&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$Delete&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$MinSizeMB&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$MinYearsOld&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;pushd &lt;/span&gt;&lt;span class="nv"&gt;$Path&lt;/span&gt;
&lt;span class="nv"&gt;$res&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;

&lt;span class="nv"&gt;$totalSize&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$lastModified&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastWriteTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Recurse&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$totalSize&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$lastModified&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastWriteTime&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nv"&gt;$lastModified&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastWriteTime&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;      
&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;noteproperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;TotalSizeMB&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$totalSize&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;noteproperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;LastModified&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$lastModified&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$del&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TotalSizeMB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-ge&lt;/span&gt; &lt;span class="nv"&gt;$MinSizeMB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastModified&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addYears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$MinYearsOld&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-le&lt;/span&gt; &lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;noteproperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ShouldDelete&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$del&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Delete&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="nv"&gt;$del&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nb"&gt;rm &lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Recurse&lt;/span&gt; &lt;span class="n"&gt;-Force&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;tee &lt;/span&gt;&lt;span class="n"&gt;-var&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;res&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TotalSizeMB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LastModified&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ShouldDelete&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-gridview&lt;/span&gt;
&lt;span class="n"&gt;popd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="FileSystem"></category><category term="PowerShell"></category></entry><entry><title>Querying SQL Servers</title><link href="https://blog.backslasher.net/querying-sql-servers.html" rel="alternate"></link><published>2010-07-27T20:55:00+02:00</published><updated>2010-07-27T20:55:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-07-27:/querying-sql-servers.html</id><summary type="html">&lt;p&gt;Before I had a chance to study Microsoft's SQL Server Management Studio
(SSMS)'s Powershell SnapIn, I needed to grab some data from an SQL DB. I
ended up creating 3 nifty functions for that very thing, and I still use
them today, because I find SQL's SnapIn very slow â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Before I had a chance to study Microsoft's SQL Server Management Studio
(SSMS)'s Powershell SnapIn, I needed to grab some data from an SQL DB. I
ended up creating 3 nifty functions for that very thing, and I still use
them today, because I find SQL's SnapIn very slow and confusing. Please
remember that those are some of my first scripts, so they seem quite
noobish...  &lt;/p&gt;
&lt;h4&gt;Get-SQLConnection&lt;/h4&gt;
&lt;p&gt;Used to create a &lt;code&gt;.net&lt;/code&gt;-ish &lt;code&gt;System.Data.SqlClient.SqlConnection&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;get-SQLConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$database&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;master&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nv"&gt;$goNormal&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$SqlConnection&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlConnection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlConnectionStringBuilder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]=&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InitialCatalog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$database&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;#If we have to impersonate&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$goNormal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegratedSecurity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserID&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegratedSecurity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$SqlConnection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionString&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;#return&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="nv"&gt;$SqlConnection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Inovke-SQLCommand&lt;/h4&gt;
&lt;p&gt;Invokes an SQL query on a ready SQL connection, and possibly formats the output using the &lt;code&gt;format-SQLOutput&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;invoke-SQLCommand&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;ValueFromPipeline&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[System.Data.SqlClient.SqlConnection]&lt;/span&gt; &lt;span class="nv"&gt;$Connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[String]&lt;/span&gt; &lt;span class="nv"&gt;$Command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[Switch]&lt;/span&gt; &lt;span class="nv"&gt;$FormatOutput&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[Switch]&lt;/span&gt; &lt;span class="nv"&gt;$CloseConnection&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$comm&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlCommand&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$comm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$connection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Open&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$Connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$comm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CommandText&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$Command&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$comm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ExecuteReader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$FormatOutput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datatable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Rows&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;format-SQLOutput&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datatable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Rows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$CloseConnection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$Connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Format-SQLOutput&lt;/h4&gt;
&lt;p&gt;I like this one the best.&lt;br&gt;
Gets a tabular &lt;code&gt;.net&lt;/code&gt;-ish result and formats it into a PowerShell object structure by adding &lt;code&gt;NoteProperty&lt;/code&gt; members to a &lt;code&gt;System.Object&lt;/code&gt;.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;format-SQLOutput&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;process&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$tblSrc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$clmTemp&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$tblSrc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$cap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$clmTemp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Caption&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$con&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$clmTemp&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;-inputobject&lt;/span&gt; &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="nv"&gt;$cap&lt;/span&gt; &lt;span class="nv"&gt;$con&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="nv"&gt;$objRet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Have fun!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="SQL"></category></entry><entry><title>Testing stranded group policies</title><link href="https://blog.backslasher.net/testing-stranded-group-policies.html" rel="alternate"></link><published>2010-05-08T16:13:00+02:00</published><updated>2010-05-08T16:13:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-05-08:/testing-stranded-group-policies.html</id><summary type="html">&lt;p&gt;Ever had GPO Version differences between the AD and the Sysvol? Sure,
you might have a healthy FRS/DFSR architecture, but the replication takes
time. It's annoying to check if the GP object is now OK on every server,
because one would have to point the GPMC to every DC â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever had GPO Version differences between the AD and the Sysvol? Sure,
you might have a healthy FRS/DFSR architecture, but the replication takes
time. It's annoying to check if the GP object is now OK on every server,
because one would have to point the GPMC to every DC and check the
version numbers...&lt;br&gt;
My soultion - this nifty script. It's essentially grabbing the GP object
through &lt;code&gt;Get-GPO&lt;/code&gt; from every DC there is, and comparing its AD and Sysvol
versions (for both &lt;code&gt;computer&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt;), and pointing out if this DC's version
is mismatched. Run this script once, and you'll know how the GP's doing
on every (accessible) DC.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-not&lt;/span&gt; &lt;span class="nb"&gt;gmo &lt;/span&gt;&lt;span class="n"&gt;GroupPolicy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;GroupPolicy&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Gets a GPO object from every DC in the domain, and looks for stranded GPOs&lt;/span&gt;

&lt;span class="sd"&gt;.Description&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;This function discovers all DCs in your domain, gets the GPO specified for every DC, and for every object checks all 4 versions (DS/Sysvol and Computer/User) to see if a gpo is only partially updated on a DC.&lt;/span&gt;

&lt;span class="sd"&gt;.Parameter&lt;/span&gt;&lt;span class="cm"&gt; GPOName&lt;/span&gt;

&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Test-StrandedGPO &amp;#39;Some Policy Name&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;My Blog: http://OneBoredAdmin.blogspot.com&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Test-StrandedGPO&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$GPOName&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Get all DCs&lt;/span&gt;
    &lt;span class="nv"&gt;$DCs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[directoryservices.directorysearcher]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;(&amp;amp;(&amp;amp;(&amp;amp;(sAMAccountType=805306369)(useraccountcontrol:1.2.840.113556.1.4.804:=67117056))))&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;

    &lt;span class="c"&gt;# For every DC, get the GP object&lt;/span&gt;
    &lt;span class="nv"&gt;$GPObjects&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$DCs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="nv"&gt;$temp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="nv"&gt;$GPOName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
        &lt;span class="nv"&gt;$temp&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Server&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;# For every GP object, check if the version is consistent&lt;/span&gt;
    &lt;span class="nv"&gt;$GPObjects&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DisplayName&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DisplayName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Server&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ComputerDS&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DSVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ComputerSys&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SysvolVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;UserDS&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DSVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;UserSys&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SysvolVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="no"&gt;[bool]&lt;/span&gt; &lt;span class="nv"&gt;$VMismatch&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;!((&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DSVersion&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SysvolVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DSVersion&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SysvolVersion&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;VersionMismatch&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$VMismatch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="nv"&gt;$objRet&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="NTFRS"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry></feed>