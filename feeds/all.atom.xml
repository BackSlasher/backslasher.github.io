<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>BackSlasher</title><link href="https://blog.backslasher.net/" rel="alternate"></link><link href="https://blog.backslasher.net/feeds/all.atom.xml" rel="self"></link><id>https://blog.backslasher.net/</id><updated>2020-06-21T12:00:00+02:00</updated><entry><title>Extracting SGN files used by the Israeli Court System</title><link href="https://blog.backslasher.net/sgn-extractor.html" rel="alternate"></link><published>2020-06-21T12:00:00+02:00</published><updated>2020-06-21T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2020-06-21:/sgn-extractor.html</id><summary type="html">&lt;h1&gt;The Story&lt;/h1&gt;
&lt;p&gt;One of my friends has some dealings with the Israeli courts.&lt;br&gt;
The noteworthy (and annoying) part of their digital documents is that these documents are using a novel format instead of some industry standard.&lt;br&gt;
Files arriving by email have the SGN suffix, and the email includes the following …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;The Story&lt;/h1&gt;
&lt;p&gt;One of my friends has some dealings with the Israeli courts.&lt;br&gt;
The noteworthy (and annoying) part of their digital documents is that these documents are using a novel format instead of some industry standard.&lt;br&gt;
Files arriving by email have the SGN suffix, and the email includes the following footer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;המסמך המצורף חתום דיגיטלית. כדי לצפות בקובץ יש להוריד תוכנה בכתובת :
https://www.court.gov.il/NGCS.Web.Site/DigitalSignature/Court Digital Signature Application.msi
)התוכנה תואמת למערכת הפעלה Windows בלבד(
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;English Google translation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;The attached document is digitally signed. To view the file you need to download software at:
https://www.court.gov.il/NGCS.Web.Site/DigitalSignature/Court Digital Signature Application.msi
) The software is compatible with Windows operating system only (
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This friend doesn't have Windows, so how can he read those docs?  &lt;/p&gt;
&lt;h2&gt;My solution&lt;/h2&gt;
&lt;p&gt;From taking a peek in the doc, I saw that it's basically a ginormous XML, with fields containing the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Original filename&lt;/li&gt;
&lt;li&gt;Content, encoded as base64&lt;/li&gt;
&lt;li&gt;Signer identity&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I was willing to skip verifying the signer, and settled instead for just extracting the original file.&lt;br&gt;
THe quick solution is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;xq -r &lt;span class="s1"&gt;&amp;#39;.DocumentEnvelope.SignaturePackage.Signature.Object.DocumentContent[&amp;quot;#text&amp;quot;]&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; base64 --decode
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://github.com/mikefarah/yq"&gt;xq&lt;/a&gt; is a &lt;code&gt;jq&lt;/code&gt;-like command for XML. It has a YAML equivalent as well, and was highly useful here.&lt;br&gt;
&lt;code&gt;base64&lt;/code&gt; is a bash utility for decoding/encoding base64 data.&lt;/p&gt;
&lt;p&gt;I made a nicer version in my &lt;a href="https://github.com/BackSlasher/sgn-court-extract"&gt;sgn-court-extract repo&lt;/a&gt;. I might migrate it to a proper Python script one day.&lt;/p&gt;
&lt;p&gt;Feel free to use it yourself!&lt;/p&gt;</content><category term="FOSS"></category><category term="Scripts"></category><category term="Linux"></category></entry><entry><title>The BIG BUTTON with Arduino</title><link href="https://blog.backslasher.net/arduino-big-button.html" rel="alternate"></link><published>2019-12-15T10:00:00+01:00</published><updated>2019-12-15T10:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2019-12-15:/arduino-big-button.html</id><summary type="html">&lt;p&gt;I've created a dramatic big button, that actually sends key presses to the computer.&lt;br&gt;
It's connected to the computer via USB, and programmable via the same connection, meaning we can change the key presses it sends as we like.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/arduino-big-button/button.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;The button&lt;/h2&gt;
&lt;p&gt;I got a factory button from eBay. The listing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've created a dramatic big button, that actually sends key presses to the computer.&lt;br&gt;
It's connected to the computer via USB, and programmable via the same connection, meaning we can change the key presses it sends as we like.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/arduino-big-button/button.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;The button&lt;/h2&gt;
&lt;p&gt;I got a factory button from eBay. The listing is no longer available, but you can see it in the pictures.&lt;br&gt;
Eventually, it doesn't matter as long as the button has enough room for the Arduino to fit in.&lt;/p&gt;
&lt;h2&gt;Arduino&lt;/h2&gt;
&lt;p&gt;I got an Arduino Leonardo knockoff on ebay (&lt;a href="https://www.ebay.com/itm/Arduino-Pro-Micro-USB-komp-ATmega-32U4-5V-3-3V-16MHz-Leonardo-Mini-Entwicklu/253050640080"&gt;link&lt;/a&gt;).&lt;br&gt;
I liked it because:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It's small, meaning it can fit inside the button.&lt;/li&gt;
&lt;li&gt;It can operate as a HID (Human Interface Device), meaning it can send key presses to the computer (no special drivers needed!)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sadly, I didn't photograph the internal connections (I was so excited that everything works), but everything is pretty simple.&lt;br&gt;
All buttons connected to &lt;code&gt;GND&lt;/code&gt; on one side, and a separate pin on the other. You can infer it from the code. They're set up using &lt;code&gt;pinMode(pin_num, INPUT_PULLUP);&lt;/code&gt;. &lt;br&gt;
The contraption is powered via the same USB connection it's using to send keypresses.&lt;/p&gt;
&lt;h2&gt;The code&lt;/h2&gt;
&lt;p&gt;I added it to GitHub because it's free. I call it &lt;a href="https://github.com/BackSlasher/arduino-button/blob/master/tributton.ino"&gt;tributton.ino&lt;/a&gt;.&lt;br&gt;
The "business logic" part looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setButtons&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;buttonGreen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;digitalRead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buttonGreenPin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;buttonRed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;digitalRead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buttonRedPin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;buttonBreak&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;digitalRead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buttonBreakPin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buttonBreak&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buttonGreen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Keyboard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GREEN_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buttonRed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Keyboard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RED_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Share your version with me please!&lt;/p&gt;</content><category term="FOSS"></category><category term="arduino"></category><category term="linux"></category></entry><entry><title>Adding a child element in XSLT</title><link href="https://blog.backslasher.net/xslt-add-child.html" rel="alternate"></link><published>2018-09-07T12:00:00+02:00</published><updated>2018-09-07T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2018-09-07:/xslt-add-child.html</id><summary type="html">&lt;p&gt;I recently had to edit a big XML file, and add a child elemnt to every element within.
To simplify matters, say I had something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;rooty&lt;/span&gt; &lt;span class="na"&gt;xmlns:ppl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some_identifier&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ppl:person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;age&amp;gt;&lt;/span&gt;42&lt;span class="nt"&gt;&amp;lt;/age&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;bob&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ppl:person&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ppl:person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;age …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I recently had to edit a big XML file, and add a child elemnt to every element within.
To simplify matters, say I had something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;rooty&lt;/span&gt; &lt;span class="na"&gt;xmlns:ppl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some_identifier&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ppl:person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;age&amp;gt;&lt;/span&gt;42&lt;span class="nt"&gt;&amp;lt;/age&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;bob&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ppl:person&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ppl:person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;age&amp;gt;&lt;/span&gt;53&lt;span class="nt"&gt;&amp;lt;/age&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;doggo&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ppl:person&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/rooty&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I wanted to add a &lt;code&gt;&amp;lt;cow&amp;gt;&lt;/code&gt; element to every person, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;rooty&lt;/span&gt; &lt;span class="na"&gt;xmlns:ppl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some_identifier&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ppl:person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;age&amp;gt;&lt;/span&gt;42&lt;span class="nt"&gt;&amp;lt;/age&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;bob&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;cow&amp;gt;&lt;/span&gt;Bessy&lt;span class="nt"&gt;&amp;lt;/cow&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ppl:person&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ppl:person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;age&amp;gt;&lt;/span&gt;53&lt;span class="nt"&gt;&amp;lt;/age&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;doggo&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;cow&amp;gt;&lt;/span&gt;Bessy&lt;span class="nt"&gt;&amp;lt;/cow&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ppl:person&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/rooty&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;My first approach was to spend 10 minutes manually editing the file, but why do that when you can spend &lt;strong&gt;30 minutes&lt;/strong&gt; writing automation to do it for you?&lt;br&gt;
I then spent some time getting pissed off on Python's XML libraries, as they didn't properly handle custom XML namespaces (the &lt;code&gt;ppl&lt;/code&gt; part).&lt;br&gt;
I decided then that the "right" way to do it was using XSLT.  &lt;/p&gt;
&lt;h2&gt;The solution&lt;/h2&gt;
&lt;p&gt;I still don't fully understand &lt;a href="https://en.wikipedia.org/wiki/XSLT"&gt;XSLT&lt;/a&gt;, so I won't try and explain it.&lt;br&gt;
After some help from &lt;a href="https://stackoverflow.com/q/52205660/950275"&gt;StackOverflow&lt;/a&gt;, I got a working XSLT file, which I'm happy to share:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:ppl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some_identifier&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;omit-xml-declaration=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;no&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;indent=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;encoding=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;xsl:strip-space&lt;/span&gt; &lt;span class="na"&gt;elements=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Identity transform --&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@* | node()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;xsl:copy&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;xsl:apply-templates&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@* | node()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;/xsl:copy&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Add cow to a person --&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ppl:person&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;xsl:copy&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@*&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;node()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;cow&amp;gt;&lt;/span&gt;Bessy&lt;span class="nt"&gt;&amp;lt;/cow&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;/xsl:copy&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I run it using &lt;code&gt;xsltproc&lt;/code&gt;, which is widely available for Linux distros, and the command looks like &lt;code&gt;xsltproc XSLT_PATH XML_PATH&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The file, broken down, looks like this:&lt;/p&gt;
&lt;h3&gt;Formatting&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;  &amp;lt;xsl:output omit-xml-declaration=&amp;quot;no&amp;quot; indent=&amp;quot;yes&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;  &amp;lt;xsl:strip-space elements=&amp;quot;*&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above part controls the formatting. Without it, the resulting XML might have weird linebreaks and spaces.&lt;/p&gt;
&lt;h3&gt;Identity transform&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class="c"&gt;&amp;lt;!-- Identity transform --&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@* | node()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;xsl:copy&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;xsl:apply-templates&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@* | node()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;/xsl:copy&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This part makes every node appear in the transformed document.&lt;/p&gt;
&lt;h3&gt;Adding the child elemennt&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class="c"&gt;&amp;lt;!-- Add cow to a person --&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ppl:person&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;xsl:copy&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@*&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;&amp;lt;xsl:copy-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;node()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;cow&amp;gt;&lt;/span&gt;Bessy&lt;span class="nt"&gt;&amp;lt;/cow&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;&amp;lt;/xsl:copy&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This part matches only the elements we want to add children to.&lt;br&gt;
We tell the transformer to copy the node, and include all of the original attributes (&lt;code&gt;@*&lt;/code&gt;) and child elements (&lt;code&gt;node()&lt;/code&gt;), and add our own new child element (the &lt;code&gt;&amp;lt;cow&amp;gt;&lt;/code&gt; part).&lt;br&gt;
Removing this part will effectively make the XSLT file a "reformatter".&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;</content><category term="FOSS"></category><category term="XSLT"></category><category term="scripts"></category></entry><entry><title>Disqus instead of Juvia</title><link href="https://blog.backslasher.net/disqus.html" rel="alternate"></link><published>2018-04-12T12:00:00+02:00</published><updated>2018-04-12T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2018-04-12:/disqus.html</id><summary type="html">&lt;h2&gt;TL;DR:&lt;/h2&gt;
&lt;p&gt;I switched from &lt;a href="https://github.com/phusion/juvia"&gt;Juvia&lt;/a&gt; to &lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt; after losing all of my blog's comments&lt;/p&gt;
&lt;h2&gt;Why I lost all of my blog's comments&lt;/h2&gt;
&lt;p&gt;Basically, I was a fool.&lt;br&gt;
I had my Juvia setup running on a single server in AWS, with a standalone mySQL server.&lt;br&gt;
My setup auto-updated every time …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;TL;DR:&lt;/h2&gt;
&lt;p&gt;I switched from &lt;a href="https://github.com/phusion/juvia"&gt;Juvia&lt;/a&gt; to &lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt; after losing all of my blog's comments&lt;/p&gt;
&lt;h2&gt;Why I lost all of my blog's comments&lt;/h2&gt;
&lt;p&gt;Basically, I was a fool.&lt;br&gt;
I had my Juvia setup running on a single server in AWS, with a standalone mySQL server.&lt;br&gt;
My setup auto-updated every time a new version of Juvia was released, which never happened until a couple of days ago, as the project is relatively unmaintained.&lt;br&gt;
I also neglected to backup my DB, as I'm stupid.&lt;br&gt;
A couple of days ago, the Juvia project got a &lt;a href="https://github.com/phusion/juvia/pull/70"&gt;new code of conduct&lt;/a&gt;. As part of this, they released a new version, which caused my setup to auto-update, wiping my DB.&lt;/p&gt;
&lt;h2&gt;Why move to Disqus&lt;/h2&gt;
&lt;p&gt;I decided to move to a managed comment service.&lt;br&gt;
In retrospect, maintaining my Juvia setup was way more effort than it's worth, as I never really customized it, and I neglected to take basic actions (e.g. DB backup, SSL setup).&lt;br&gt;
I saw that Disqus offers guest commenting (although it's relatively hidden), and allows you to export comments to a file. This means that if I'm unhappy with the platform, I can migrate away.&lt;br&gt;
Sounds like a good deal.&lt;/p&gt;
&lt;h2&gt;First impressions&lt;/h2&gt;
&lt;p&gt;Looks legit. &lt;/p&gt;</content><category term="FOSS"></category><category term="Disqus"></category><category term="Rambling"></category></entry><entry><title>Sortiq - sort, uniq, sort</title><link href="https://blog.backslasher.net/sortiq.html" rel="alternate"></link><published>2018-01-07T12:00:00+01:00</published><updated>2018-01-07T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2018-01-07:/sortiq.html</id><summary type="html">&lt;p&gt;This is a small snippet I find extremely useful. You should have it in your &lt;code&gt;~/.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sortiq() { sort | uniq -c | sort -rn ; }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It will count the instances of each line, sorting them from most common to least common.&lt;/p&gt;
&lt;h2&gt;What is this for&lt;/h2&gt;
&lt;p&gt;It answers the question "How much of each …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a small snippet I find extremely useful. You should have it in your &lt;code&gt;~/.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sortiq() { sort | uniq -c | sort -rn ; }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It will count the instances of each line, sorting them from most common to least common.&lt;/p&gt;
&lt;h2&gt;What is this for&lt;/h2&gt;
&lt;p&gt;It answers the question "How much of each line do I have?"
e.g. for this input:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;badger&lt;/span&gt;
&lt;span class="err"&gt;badger&lt;/span&gt;
&lt;span class="err"&gt;badger&lt;/span&gt;
&lt;span class="err"&gt;badger&lt;/span&gt;
&lt;span class="err"&gt;mushroom&lt;/span&gt;
&lt;span class="err"&gt;mushroom&lt;/span&gt;
&lt;span class="err"&gt;badger&lt;/span&gt;
&lt;span class="err"&gt;badger&lt;/span&gt;
&lt;span class="err"&gt;badger&lt;/span&gt;
&lt;span class="err"&gt;badger&lt;/span&gt;
&lt;span class="err"&gt;mushroom&lt;/span&gt;
&lt;span class="err"&gt;mushroom&lt;/span&gt;
&lt;span class="err"&gt;snake&lt;/span&gt;
&lt;span class="err"&gt;snake&lt;/span&gt;
&lt;span class="err"&gt;snake&lt;/span&gt;
&lt;span class="err"&gt;snake&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Piping it via sortiq (like &lt;code&gt;echo "$GOOD_INPUT" | sortiq&lt;/code&gt;) will give you:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;      8 badger&lt;/span&gt;
&lt;span class="err"&gt;      4 snake&lt;/span&gt;
&lt;span class="err"&gt;      4 mushroom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Very handy.&lt;/p&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="Scripting"></category><category term="Bash"></category></entry><entry><title>Driven by anger - my modus machinor</title><link href="https://blog.backslasher.net/driven-by-anger.html" rel="alternate"></link><published>2018-01-01T12:00:00+01:00</published><updated>2018-01-01T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2018-01-01:/driven-by-anger.html</id><summary type="html">&lt;p&gt;&lt;code&gt;modus machinor&lt;/code&gt; - my adjustment of "modus operandi" for "engineering"&lt;/p&gt;
&lt;p&gt;I recently noticed that I'm doing engineering work out of anger.&lt;br&gt;
However, it seems like I'm doing a good job, so I thought I'd share my method, which I worked hard on.&lt;br&gt;
You might recognize yourself in some of this, but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;modus machinor&lt;/code&gt; - my adjustment of "modus operandi" for "engineering"&lt;/p&gt;
&lt;p&gt;I recently noticed that I'm doing engineering work out of anger.&lt;br&gt;
However, it seems like I'm doing a good job, so I thought I'd share my method, which I worked hard on.&lt;br&gt;
You might recognize yourself in some of this, but not all. If you have something to say, I'm happy to recieve feedback / insults.  &lt;/p&gt;
&lt;h2&gt;TL;DR:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Get annoyed by things&lt;/li&gt;
&lt;li&gt;Write a fix&lt;/li&gt;
&lt;li&gt;Make sure to publish the fix&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;1. Get annoyed by things&lt;/h2&gt;
&lt;p&gt;Throughout my time working on comp-u-ters, I've encountered things that annoy me. I can divide them into those common annoyances:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The thing is manual, where it should be automated &lt;/li&gt;
&lt;li&gt;The thing is missing a feature that would make my life easier&lt;/li&gt;
&lt;li&gt;The thing takes a long time&lt;/li&gt;
&lt;li&gt;The thing is erroring out&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In all of those cases, my main response to the thing is anger. I'm so spoiled and used to everything working perfectly, that finding a fault in something angers me. How can this be not fixed? Am I the only one that notices something is wrong here?&lt;/p&gt;
&lt;h2&gt;2. Write a fix&lt;/h2&gt;
&lt;p&gt;All of this anger should not be wasted on getting high blood pressure, abusing your relatives, or strangling small animals. Instead, it's best channeled into &lt;strong&gt;fixing the broken thing&lt;/strong&gt;.&lt;br&gt;
Using your anger to fix the thing that angered you serves multiple purposes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you encountered said thing during your work, fixing it probably counts as work&lt;/li&gt;
&lt;li&gt;It fills you with the feeling of victory, a.k.a:&lt;ol&gt;
&lt;li&gt;"I have vanquished thee, annoying thing!"&lt;/li&gt;
&lt;li&gt;"I fixed the problem those others ignored. At least SOMEONE is capable around here."&lt;/li&gt;
&lt;li&gt;"I actually did a thing today"&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;You won't encounter this problem again, reducing the chances of you getting annoyed in future&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;3. Make sure to publish the fix&lt;/h2&gt;
&lt;p&gt;This is the tricky part. As an egoist, lazy bastard, you probably think you're done by now. &lt;strong&gt;Wrong&lt;/strong&gt;.&lt;br&gt;
Publishing your fix, whether it's by writing a blog post, sending an email on the devlist, or sending a PR (best option), has those benefits:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It &lt;em&gt;looks&lt;/em&gt; as an altruistic act, making you more valued amongst your colleagues &lt;/li&gt;
&lt;li&gt;Integrating your fix into the product / community means that more people will use it, meaning there's less chance of it breaking because of someone else making a change in the thing.
  This applies more strongly to a PR that you manage to push upstream, but can also apply if you change the "accepted" way of utilizing the product.&lt;/li&gt;
&lt;li&gt;You might gain recognition as "the guy that fixed the thing".&lt;br&gt;
  For instance, in FB, where I'm currently working, you're credited for time/trouble being saved for others by fixing things that you're both using.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Success anecdotes&lt;/h2&gt;
&lt;p&gt;As I've already said, in Facebook, you're credited for helping others, both directly and indirectly.&lt;br&gt;
One of my proudest moments in the last year is shaving off ~100h per week from a certain process, by moving 3LoC around.&lt;br&gt;
I did this not because it was my responsibility, but because I was waiting for this process to finish and was annoyed by "what the hell is it doing while I'm sitting here waiting".  &lt;/p&gt;
&lt;p&gt;Another issue I had - an internal bot broke down. I found it out by tagging it and getting no response. I asked around and was told that "yeah, it's broken for a while". I was angered by this approach, something like "is no one cleaning up here? I'll do it". So I fixed this bot, and afterwards found out that this bot has hundreds of invocations a month, each and every one of them failing for the last 3 months. More credit for me!  &lt;/p&gt;
&lt;p&gt;While I was working at my previous job, I was missing a small feature in Chef. This annoyed me greatly, as Chef was answering all my needs and was obviously designed by clever people. How could they neglect that part?&lt;br&gt;
Instead of building around this in a hacky way that I'd dare not show to other people, I made a proper fix and submitted it to Chef. Not only was my problem resolved, but I also got a cool "I help make Chef AWESOME" sticker for my laptop.  &lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Other, smarter people might define this approach differently. They might call the steps fancy names like "identify, remediate, notify". But you and I know the truth. Things make us angry. We can't let them win. My approach allows us to fight back, and claim the spoils of war. Most of the time.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Small note&lt;/strong&gt;: The reason closed-code products suck so hard, is that you can't use the above with them. My biggest issue with working with Microsoft products is being unable to prod into them to find out what exactly is wrong. This &lt;em&gt;also&lt;/em&gt; made me angry, but sadly there was no easy way to fight back.  &lt;/p&gt;</content><category term="Misc"></category><category term="Ramblings"></category></entry><entry><title>Populating a NetworkX graph with a scanner</title><link href="https://blog.backslasher.net/networkx-populate.html" rel="alternate"></link><published>2017-07-26T12:00:00+02:00</published><updated>2017-07-26T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2017-07-26:/networkx-populate.html</id><summary type="html">&lt;p&gt;I had a graph living outside Pythonland (a commit tree with dependencies) and wanted to do graphy things to it. To do that, I first had to put the data into a NetworkX graph.
I wrote this code bit to discover a graph-like structure and put into a NetworkX (or …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I had a graph living outside Pythonland (a commit tree with dependencies) and wanted to do graphy things to it. To do that, I first had to put the data into a NetworkX graph.
I wrote this code bit to discover a graph-like structure and put into a NetworkX (or similar enough) object.
It's basically a BFS scan, that delegates the actual node-to-edge discovery to a callable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;populate_graph_from_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;first_node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;edge_extractor&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;next_nodes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;first_node&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_nodes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;new_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;next_nodes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;new_edges&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;edge_extractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_edges_from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_edges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;next_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;edge&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;edge&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;new_edges&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;visited&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;edge_extractor&lt;/code&gt; callable should accept a node, and return edge-like tuples (either &lt;code&gt;(source, dest)&lt;/code&gt; or &lt;code&gt;(source, dest, data_dict)&lt;/code&gt;).&lt;br&gt;
I do not bother to validate that the source node in the edges is indeed the node we're currently scanning.&lt;br&gt;
An example call could be something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;span class="n"&gt;edge_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;networkx&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;nx&lt;/span&gt;
&lt;span class="n"&gt;graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DiGraph&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;populate_graph_from_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;
    &lt;span class="n"&gt;edge_dict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c1"&gt;# [(1, 2), (2, 3), (2, 4), (4, 3)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Scripts"></category><category term="Python"></category><category term="Graphing"></category></entry><entry><title>Getting Magent Links from Deluge</title><link href="https://blog.backslasher.net/deluge-show-magnet.html" rel="alternate"></link><published>2017-04-01T12:00:00+02:00</published><updated>2017-04-01T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2017-04-01:/deluge-show-magnet.html</id><summary type="html">&lt;p&gt;My latest weekend-hack is a plugin that shows the magnet link for a torrent entry&lt;/p&gt;
&lt;h2&gt;Why&lt;/h2&gt;
&lt;p&gt;I had something torrented a long time ago, and a friend asked me for the torrent.&lt;br&gt;
However, I haven't kept the original &lt;code&gt;.torrent&lt;/code&gt; file, she was tech-oriented enough so I can give her the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My latest weekend-hack is a plugin that shows the magnet link for a torrent entry&lt;/p&gt;
&lt;h2&gt;Why&lt;/h2&gt;
&lt;p&gt;I had something torrented a long time ago, and a friend asked me for the torrent.&lt;br&gt;
However, I haven't kept the original &lt;code&gt;.torrent&lt;/code&gt; file, she was tech-oriented enough so I can give her the hash/trackers by hand.&lt;br&gt;
I ended up manually composing a magnet link for her, and figured "I wish this was a built-in functionality in Deluge".  &lt;/p&gt;
&lt;p&gt;I then saw &lt;a href="http://dev.deluge-torrent.org/ticket/1337"&gt;ticket #1337&lt;/a&gt; that asked for something like this, which was implemented using &lt;a href="http://forum.deluge-torrent.org/viewtopic.php?f=9&amp;amp;t=47501"&gt;CopyMagnetURI&lt;/a&gt; plugin.&lt;br&gt;
My problem with this plugin is that it didn't work for me, and I figured interfacing with the clipboard is inherently more complicated that just displaying the link.&lt;br&gt;
I decided I'll roll my own&lt;/p&gt;
&lt;h2&gt;Result&lt;/h2&gt;
&lt;p&gt;Check it out:
&lt;a href="https://github.com/BackSlasher/deluge-ShowMagnet"&gt;https://github.com/BackSlasher/deluge-ShowMagnet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot" src="https://raw.githubusercontent.com/BackSlasher/deluge-ShowMagnet/master/readme/screnshot.png"&gt;&lt;/p&gt;
&lt;h2&gt;Process&lt;/h2&gt;
&lt;p&gt;I started from copying the &lt;a href="https://github.com/nicklan/Deluge-Pieces-Plugin"&gt;Deluge Pieces Plugin&lt;/a&gt;, because it had some of the behaviour I was looking for (adding a UI element to the torrent details pane).&lt;br&gt;
I then removed all of the bits related to the pieces, and instead displayed a label that occupied the whole panel.&lt;br&gt;
I then moved to understanding how to build a magnet URI from torrent information, and added this to &lt;code&gt;core.py&lt;/code&gt; to make it reusable from the WebUI, if I ever feel like it.&lt;br&gt;
After that came integration, and voilà!&lt;/p&gt;</content><category term="FOSS"></category><category term="Python"></category><category term="Scripts"></category><category term="BitTorrent"></category><category term="Deluge"></category></entry><entry><title>Prettify HTML pages with BeautifulSoup</title><link href="https://blog.backslasher.net/bs-prettify.html" rel="alternate"></link><published>2016-10-01T12:00:00+02:00</published><updated>2016-10-01T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-10-01:/bs-prettify.html</id><summary type="html">&lt;h1&gt;The story&lt;/h1&gt;
&lt;p&gt;Today I wrote some HTML page by hand (&lt;a href="http://backslasher.net"&gt;my new homepage&lt;/a&gt;).&lt;br&gt;
I then used this script to make the HTML code nicer:&lt;/p&gt;
&lt;h1&gt;The script&lt;/h1&gt;
&lt;p&gt;This requires the BeautifulSoup module for python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;bs_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;The story&lt;/h1&gt;
&lt;p&gt;Today I wrote some HTML page by hand (&lt;a href="http://backslasher.net"&gt;my new homepage&lt;/a&gt;).&lt;br&gt;
I then used this script to make the HTML code nicer:&lt;/p&gt;
&lt;h1&gt;The script&lt;/h1&gt;
&lt;p&gt;This requires the BeautifulSoup module for python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;bs_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lxml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;new_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prettify&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]:&lt;/span&gt;
  &lt;span class="n"&gt;bs_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It's pretty simple - The &lt;code&gt;bs_file&lt;/code&gt; method reads a file, asks BS to prettify its content, and writes the result to the file again.&lt;br&gt;
&lt;strong&gt;Do note&lt;/strong&gt; that BS takes a lot of liberty in interpreting files - it might add tags where it decides they're missing etc.&lt;br&gt;
To use the script, run it and provide the filenames you wish to prettify as arguments, e.g. &lt;code&gt;/tmp/bs.py index.html&lt;/code&gt;&lt;/p&gt;</content><category term="FOSS"></category><category term="Scripts"></category><category term="Python"></category><category term="BeautifulSoup"></category><category term="HTML"></category></entry><entry><title>My tips on Getting a Job</title><link href="https://blog.backslasher.net/job-guide.html" rel="alternate"></link><published>2016-09-18T12:00:00+02:00</published><updated>2016-09-18T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-09-18:/job-guide.html</id><summary type="html">&lt;p&gt;A lot of people (&amp;gt;3) asked me in the last month or so about how to land a first job after leaving the army / graduating from university, so I thought I'd write a post about it.&lt;br&gt;
I think this post will mainly be helpful for those who look for their …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A lot of people (&amp;gt;3) asked me in the last month or so about how to land a first job after leaving the army / graduating from university, so I thought I'd write a post about it.&lt;br&gt;
I think this post will mainly be helpful for those who look for their 1st job, because after that you get the feel for it.&lt;br&gt;
This is a work in progress - I'll update this every now and then.&lt;/p&gt;
&lt;h2&gt;Reservations and conditions&lt;/h2&gt;
&lt;p&gt;I'm assuming that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You're going into computer-science-ish fields&lt;/li&gt;
&lt;li&gt;You're above average, so your best strategy is not to do shady things like putting stuff you didn't really do / don't really know in your CV&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why my experience might not be applicable to you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I'm favoring startup mentality over big companies. This is because I can tolerate relative job insecurity (startups are more likely to die) and hate bureaucracy.&lt;br&gt;
    Your preferences may differ&lt;/li&gt;
&lt;li&gt;I went for DevOps / Production / Operations / SysAdmin positions (the definition is very loose), where positions are filled slowly and the advantage is on the employee's side.&lt;br&gt;
    A job-finding experience of a Software Engineer / Software Developer may be different&lt;/li&gt;
&lt;li&gt;I looked for work in Israel - some other country might have very different conventions&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Before interviews&lt;/h2&gt;
&lt;h3&gt;What would you like to do&lt;/h3&gt;
&lt;p&gt;You should establish, at large, what is the job type you're looking for.&lt;br&gt;
Example criteria you should consider:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Company type (enterprise, startup)&lt;/li&gt;
&lt;li&gt;Hours at the office (9-5, coming late and staying late, working a lot from home)&lt;/li&gt;
&lt;li&gt;Crisis management (are you OK with being oncall / waking up in the middle of the night)&lt;/li&gt;
&lt;li&gt;Tech area / platform (web, mobile, big data, security)&lt;/li&gt;
&lt;li&gt;Team size (want to be the first of your kind, need a team to learn from and back you up)&lt;/li&gt;
&lt;li&gt;Physical area (how far away from home are you willing to go, will you rent a new apartment if needed)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Expected salary&lt;/h3&gt;
&lt;p&gt;You should have some magnitude of your paycheck in mind.&lt;br&gt;
You can get a basic idea by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Asking your friends/colleagues/fellow students (they might lie. I found that some of my colleagues' self worth was so determined by their salary that they lied in order to not "feel ashamed")&lt;/li&gt;
&lt;li&gt;Checking salary tables. They might be grossly inaccurate but it's better than having no idea at all. Example for one: &lt;a href="http://www.sqlink.com/blog/hightechsalary/"&gt;http://www.sqlink.com/blog/hightechsalary/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;CVs&lt;/h3&gt;
&lt;p&gt;General tip - tailor the CV to your expected position. For instance, avoid mentioning classes that are completely irrelevant (knitting) or over-detailing things that are partially relevant (e.g. when looking for a position as a Software Developer, no one will care about the version of the NetApp appliance you worked with)&lt;/p&gt;
&lt;h4&gt;Properly divide your CV&lt;/h4&gt;
&lt;p&gt;These sections are important:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Familiar technology&lt;/strong&gt;&lt;br&gt;
    Avoid over-specifying (product versions when there is no major difference, for instance)&lt;br&gt;
    Try to group by tech (e.g. "html5" and "CSS" should come under "Web") - this is justified if you have 3+ such groups&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Employment history&lt;/strong&gt;&lt;br&gt;
    Listing what you did is better than what you worked with.&lt;br&gt;
    Example:&lt;ul&gt;
&lt;li&gt;"Implemented SharePoint backup end-to-end using NetApp SnapDrive" - Great&lt;/li&gt;
&lt;li&gt;"SharePoint backups" - OK&lt;/li&gt;
&lt;li&gt;"SharePoint, SnapDrive" - Bad&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Objective&lt;/strong&gt;&lt;br&gt;
    If you have one in your CV, it gives readers the first hint on what you're looking to do in your work, which is very interesting for interviewers&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Make it easy to read&lt;/h4&gt;
&lt;p&gt;The CV should be easy to navigate, and short (if possible).&lt;br&gt;
After working on it for a long time you might get used to it and not see the monstrosity it has become.&lt;br&gt;
A good way to test this is to let someone see it (even if they're not from the field).&lt;br&gt;
Should they start to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make weird faces about the layout&lt;/li&gt;
&lt;li&gt;Look scared because the doc is long&lt;/li&gt;
&lt;li&gt;Start straining their eyes due to small/weird font&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then you should probably rework it.&lt;/p&gt;
&lt;h3&gt;Start a LinkedIn account&lt;/h3&gt;
&lt;p&gt;LinkedIn is a good place to get your profile exposed to recruiters.&lt;br&gt;
This adds a way to "discover" you, and also an easy way for people to get your CV if they only have your name.&lt;/p&gt;
&lt;h2&gt;Setting up interviews&lt;/h2&gt;
&lt;h3&gt;You will suck in your first interview(s)&lt;/h3&gt;
&lt;p&gt;Since this is a relatively new challenge for you, you might fail the first couple of times. This is perfectly fine. However, you should plan accordingly, by not interviewing at your dream companies first.&lt;/p&gt;
&lt;h3&gt;Where to get jobs from&lt;/h3&gt;
&lt;p&gt;My ranking is based on this rationale: The more information you know about the job before beginning interviews, the better.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Personal contacts&lt;/strong&gt; like friends, family and former colleagues are good because:  &lt;ul&gt;
&lt;li&gt;They probablly will be accurate about the job (rather than embellishing it)&lt;/li&gt;
&lt;li&gt;They're familiar with both you and the workplace, and can appreciate whether you're going to fit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Recruitment agencies&lt;/strong&gt; are OK, because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They want you to find work through them, so they're "on your side"&lt;/li&gt;
&lt;li&gt;The agent you'll be working with probably has more experience than you in the job market, so they might be able to hint you in on things you miss&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My tips about recruitment agencies are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Avoid agencies that look useless - lazy, disorganized, unprofessional etc. You don't want to waste your time&lt;/li&gt;
&lt;li&gt;Apply at more than one agency&lt;/li&gt;
&lt;li&gt;Be sure to describe all of your job expectations to the agent, so they can filter what they offer you&lt;/li&gt;
&lt;li&gt;Reprimend them if you think they ignore your filters - you don't want them wasting your time&lt;/li&gt;
&lt;li&gt;Insist that the agent coordinate with you before sending your CV to some company. This will both help you filter out companies that don't match your criteria, list where your CV are going and keep tabs on the agent's work&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Classified ads / job portals&lt;/strong&gt; are a last resort in my opinion. If you decide to apply, know that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You don't have to answer every single requirement. Even if you're missing a couple, you can apply&lt;/li&gt;
&lt;li&gt;For some reason, some places think it's acceptable not to reply. Don't take it too hard.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Stick to your filters, sort of&lt;/h3&gt;
&lt;p&gt;You've already decided what you're looking for.&lt;br&gt;
If you allow yourself to deviate from it too much, you can only end up with offers that you won't want to take.&lt;br&gt;
Avoid filling your schedules with interviews that won't lead anywhere.&lt;br&gt;
However, if something is a bit out of your boundaries but looks promising, it might be OK to try it.&lt;/p&gt;
&lt;h3&gt;Avoid overscheduling&lt;/h3&gt;
&lt;p&gt;Interviewing is tiring (at least when it's serious interviews), so if you'll schedule too much during one day, you'll hit the last one(s) exhausted and probably won't do your best.&lt;br&gt;
I think 3 interviews a day is &lt;strong&gt;a lot&lt;/strong&gt; and tried to stick to 2.&lt;/p&gt;
&lt;h2&gt;Interviewing&lt;/h2&gt;
&lt;p&gt;Job interviews will probably be a new skill for you to learn, so you might not do very well the first couple of times, as I said above.&lt;br&gt;
Don't panic.&lt;/p&gt;
&lt;h3&gt;How to behave&lt;/h3&gt;
&lt;p&gt;This is sort of like a date - you and the interviewer haven't met before (at least not in this context) and are trying to evaluate each other.&lt;br&gt;
Therefore, all sensible guidelines for dates apply here. Be nice, polite, know what you want, show self confidence etc.&lt;/p&gt;
&lt;h3&gt;Interview them back&lt;/h3&gt;
&lt;p&gt;The interview is also about you seeing if the company would be a good fit for you, so make sure you tell the interviewer what you're looking for.&lt;br&gt;
You can also ask them about how their workday looks, what team they're designating you for, etc. All according to the progress of the interview (you'll get it eventually).  &lt;/p&gt;
&lt;h2&gt;When failing interviews&lt;/h2&gt;
&lt;p&gt;Failing something isn't fun, but it's a great learning opportunity.&lt;br&gt;
I'm referring here only to interviews where you didn't pass muster, and nothing like the workplace being a bad match for you etc.&lt;/p&gt;
&lt;h3&gt;Understand why you failed&lt;/h3&gt;
&lt;p&gt;Sometimes you have a feel that something didn't go well. You should analyze the situtation and try to understand what you could have done better. However, the main focus should be improving yourself for the next time and not being depressed about making a mistake.  &lt;/p&gt;
&lt;h3&gt;It doesn't hurt to ask&lt;/h3&gt;
&lt;p&gt;If you're really clueless about what went wrong, you can try asking the interviewer, assuming you can contact them.&lt;br&gt;
&lt;strong&gt;Never&lt;/strong&gt; argue with them - they've made their decision and no good will come from trying to convince them. You're only doing this to get information.&lt;br&gt;
Worst outcome - you'll get no response or some obvious lie. Best outcome - you'll get some feedback that can help you better yourself.&lt;/p&gt;
&lt;h2&gt;When passing interviews&lt;/h2&gt;
&lt;p&gt;In my book, "passing" is when you get an offer. Nothing short of it.&lt;/p&gt;
&lt;h3&gt;Coordinate your offer window&lt;/h3&gt;
&lt;p&gt;Usually, each offer has a time window (you should ask if you don't know it). Try to time it so you'll have several offers in the same window. Otherwise, you'd have the &lt;a href="https://en.wikipedia.org/wiki/Secretary_problem"&gt;Secretary problem&lt;/a&gt;, which is a tough problem to solve.&lt;/p&gt;</content><category term="Misc"></category><category term="Ramblings"></category></entry><entry><title>Keeping Windows Awake (with PowerShell)</title><link href="https://blog.backslasher.net/windows-awake-ps.html" rel="alternate"></link><published>2016-08-27T12:00:00+02:00</published><updated>2016-08-27T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-08-27:/windows-awake-ps.html</id><summary type="html">&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I got a new game on Steam and got set to downloading it.&lt;br&gt;
For some reason, Steam and Windows have decided that it's better to save some electricity and put my computer to sleep, rather than finish my game.&lt;br&gt;
Today I discovered that instead of playing my game …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I got a new game on Steam and got set to downloading it.&lt;br&gt;
For some reason, Steam and Windows have decided that it's better to save some electricity and put my computer to sleep, rather than finish my game.&lt;br&gt;
Today I discovered that instead of playing my game I have to &lt;strong&gt;wait&lt;/strong&gt; for it to finish downloading.&lt;br&gt;
This will be the last time.&lt;/p&gt;
&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;I wrote &lt;a href="https://blog.backslasher.net/putting-your-windows-to-sleep.html"&gt;a post&lt;/a&gt; about sleep. Basically, sleep is a middle ground between saving power (by turning off components) and staying ready to work in short notice (by keeping RAM alive).&lt;br&gt;
Some programs can tell Windows "I'm doing something, don't sleep now.". This can be your media player playing a movie, or your BitTorrent client downloading something.&lt;br&gt;
These "requests" can be shown using &lt;code&gt;powercfg -requests&lt;/code&gt; (as admin). This is an example of my Steam client behaving and asking Windows to keep awake:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Windows\system32&amp;gt;powercfg -requests
DISPLAY:
None.

SYSTEM:
[PROCESS] \Device\HarddiskVolume2\Program Files (x86)\Steam\Steam.exe

AWAYMODE:
None.

EXECUTION:
None.

PERFBOOST:
None.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;What I want to do is write a PowerShell script that does this request from Windows, waits for the user and then terminates. I wanted this as a PS script because it means there is no compilation involved, so people that can't code can see what's going on and run it without installing weird stuff on their system.&lt;br&gt;
The API I found for this is &lt;a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa373208(v=vs.85).aspx"&gt;SetThreadExecutionState&lt;/a&gt;, which can be used &lt;a href="http://stackoverflow.com/a/6302309"&gt;like this&lt;/a&gt;.&lt;br&gt;
I had my work practically done by &lt;a href="https://github.com/stefanstranger"&gt;Stefan Stranger&lt;/a&gt; in &lt;a href="https://github.com/stefanstranger/PowerShell/blob/master/Examples/SuspendPowerPlan.ps1"&gt;SuspendPowerPlan.ps1&lt;/a&gt;, to which I added a "main" behaviour &lt;a href="http://stackoverflow.com/q/22310114"&gt;like here&lt;/a&gt; that defaults to running the method doing nothing.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# ---------------------------------------------------&lt;/span&gt;
&lt;span class="c"&gt;# Script: C:\Users\stefstr\Documents\GitHub\PowerShell\Examples\SuspendPowerPlan.ps1&lt;/span&gt;
&lt;span class="c"&gt;# Version: 0.1&lt;/span&gt;
&lt;span class="c"&gt;# Author: Stefan Stranger&lt;/span&gt;
&lt;span class="c"&gt;# Date: 07/05/2014 15:01:57&lt;/span&gt;
&lt;span class="c"&gt;# Description: Helper Function to Suspend Power Plan when running PowerShell scripts&lt;/span&gt;
&lt;span class="c"&gt;# Comments:&lt;/span&gt;
&lt;span class="c"&gt;# Disclamer: This Sample Code is provided for the purpose of illustration only and is not intended to be used in a production environment.&lt;/span&gt;
&lt;span class="c"&gt;# ---------------------------------------------------&lt;/span&gt;


&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.Synopsis&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;   Function to suspend your current Power Plan settings when running a PowerShell script.&lt;/span&gt;
&lt;span class="sd"&gt;.DESCRIPTION&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;   Function to suspend your current Power Plan settings when running a PowerShell script.&lt;/span&gt;
&lt;span class="cm"&gt;   Scenario: When downloading files using Robocopy from PowerShell you don&amp;#39;t want your&lt;/span&gt;
&lt;span class="cm"&gt;   laptop to go into sleep mode.&lt;/span&gt;
&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;   Suspend-PowerPlan -script c:\scripts\mylongrunningscript.ps1&lt;/span&gt;
&lt;span class="cm"&gt;   Run mylongrunningscript with sleep idle timeout prevented&lt;/span&gt;
&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;   Suspend-Powerplan -script c:\scripts\mylongrunningscript.ps1 -option Display -Verbose&lt;/span&gt;
&lt;span class="cm"&gt;   Run mylongrunningscript with Display idle timeout prevented and verbose messages&lt;/span&gt;
&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;  http://www.microsofttranslator.com/bv.aspx?from=ru&amp;amp;to=en&amp;amp;a=http%3A%2F%2Fsocial.technet.microsoft.com%2FForums%2Fen-US%2F1f4754cb-37bf-4e1d-a59f-ec0f1aaf9d1c%2Fsetthreadexecutionstate-powershell%3FThread%3A1f4754cb-37bf-4e1d-a59f-ec0f1aaf9d1c%3DMicrosoft.Forums.Data.Models.Discussion%26ThreadViewModel%3A1f4754cb-37bf-4e1d-a59f-ec0f1aaf9d1c%3DMicrosoft.Forums.CachedViewModels.ThreadPageViewModel%26forum%3Dscrlangru&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Suspend-Powerplan&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;CmdletBinding&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Alias&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OutputType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;Param&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="c"&gt;# Param1 help description&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                   &lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="nv"&gt;$script&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ValidateSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Away&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Display&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;System&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$option&lt;/span&gt;

    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nv"&gt;$code&lt;/span&gt;&lt;span class="p"&gt;=@&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &lt;/span&gt;
&lt;span class="s1"&gt;[DllImport(&amp;quot;kernel32.dll&amp;quot;, CharSet = CharSet.Auto,SetLastError = true)]&lt;/span&gt;
&lt;span class="s1"&gt;  public static extern void SetThreadExecutionState(uint esFlags);&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;

    &lt;span class="nv"&gt;$ste&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Add-Type&lt;/span&gt; &lt;span class="n"&gt;-memberDefinition&lt;/span&gt; &lt;span class="nv"&gt;$code&lt;/span&gt; &lt;span class="n"&gt;-name&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt; &lt;span class="n"&gt;-namespace&lt;/span&gt; &lt;span class="n"&gt;Win32&lt;/span&gt; &lt;span class="n"&gt;-passThru&lt;/span&gt; 
    &lt;span class="nv"&gt;$ES_CONTINUOUS&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[uint32]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x80000000&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;#Requests that the other EXECUTION_STATE flags set remain in effect until SetThreadExecutionState is called again with the ES_CONTINUOUS flag set and one of the other EXECUTION_STATE flags cleared.&lt;/span&gt;
    &lt;span class="nv"&gt;$ES_AWAYMODE_REQUIRED&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[uint32]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x00000040&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;#Requests Away Mode to be enabled.&lt;/span&gt;
    &lt;span class="nv"&gt;$ES_DISPLAY_REQUIRED&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[uint32]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x00000002&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;#Requests display availability (display idle timeout is prevented).&lt;/span&gt;
    &lt;span class="nv"&gt;$ES_SYSTEM_REQUIRED&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[uint32]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x00000001&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;#Requests system availability (sleep idle timeout is prevented).&lt;/span&gt;

    &lt;span class="k"&gt;Switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$option&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;Away&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ES_AWAYMODE_REQUIRED&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;Display&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ES_DISPLAY_REQUIRED&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;System&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ES_SYSTEM_REQUIRED&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;Default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ES_SYSTEM_REQUIRED&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Power Plan suspended with option: $option&amp;quot;&lt;/span&gt;

    &lt;span class="nv"&gt;$ste&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;SetThreadExecutionState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ES_CONTINUOUS&lt;/span&gt; &lt;span class="o"&gt;-bor&lt;/span&gt; &lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


    &lt;span class="c"&gt;#do something&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Executing $script&amp;quot;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$script&lt;/span&gt;

    &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Power Plan suspension ended&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$ste&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;SetThreadExecutionState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ES_CONTINUOUS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# __main__&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyInvocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InvocationName&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Suspend-Powerplan&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;press enter to terminate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When taking another look in &lt;code&gt;powercfg -requests&lt;/code&gt; after running the script, we can see it in action:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Windows\system32&amp;gt;powercfg -requests
DISPLAY:
None.

SYSTEM:
[PROCESS] \Device\HarddiskVolume2\Program Files (x86)\Steam\Steam.exe
[PROCESS] \Device\HarddiskVolume2\Windows\System32\WindowsPowerShell\v1.0\powershell.exe

AWAYMODE:
None.

EXECUTION:
None.

PERFBOOST:
None.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let me know if it works / breaks!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Windows"></category><category term="Power Management"></category><category term="Performance"></category><category term="Scripts"></category><category term="PowerShell"></category></entry><entry><title>Chef "Share This" script</title><link href="https://blog.backslasher.net/chef-share.html" rel="alternate"></link><published>2016-03-26T12:00:00+01:00</published><updated>2016-03-26T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-03-26:/chef-share.html</id><summary type="html">&lt;p&gt;I wrote this little script to upload the current cookbook to the Chef Supermarket.&lt;br&gt;
It should be run from within the cookbook's directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
knife cookbook site share -o ../ &lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="k"&gt;$(&lt;/span&gt;realpath .&lt;span class="k"&gt;))&lt;/span&gt; -c ~/.chef/knife-supermarket.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where my supermarket config is as simple as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;node_name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SUPERMARKET_USERNAME&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;client_key&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CLIENTKEY_LOCATION&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Interesting points …&lt;/h3&gt;</summary><content type="html">&lt;p&gt;I wrote this little script to upload the current cookbook to the Chef Supermarket.&lt;br&gt;
It should be run from within the cookbook's directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
knife cookbook site share -o ../ &lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="k"&gt;$(&lt;/span&gt;realpath .&lt;span class="k"&gt;))&lt;/span&gt; -c ~/.chef/knife-supermarket.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where my supermarket config is as simple as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;node_name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SUPERMARKET_USERNAME&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;client_key&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CLIENTKEY_LOCATION&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Interesting points:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I'm using a specific Knife config file (that references the Supermarket credentials file)&lt;/li&gt;
&lt;li&gt;The entire &lt;code&gt;-o ../ $(basename $(realpath .))&lt;/code&gt; bit tells Knife our "cookbook library" is &lt;code&gt;..&lt;/code&gt; (the parent directory) and the "cookbook name" is our current directory's name.&lt;br&gt;
    Assuming we're running the script in &lt;code&gt;~/projects/cookbooks/backslasher-python&lt;/code&gt;, it'll be similar to &lt;code&gt;-o ~/projects/cookbooks/ backslasher-python&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="FOSS"></category><category term="Chef"></category><category term="Ruby"></category><category term="Scripts"></category></entry><entry><title>Dry Run for Python Pip</title><link href="https://blog.backslasher.net/pip-dry-run.html" rel="alternate"></link><published>2016-03-18T12:00:00+01:00</published><updated>2016-03-18T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-03-18:/pip-dry-run.html</id><summary type="html">&lt;p&gt;As I wrote &lt;a href="https://blog.backslasher.net/backslasher-python.html"&gt;some time ago&lt;/a&gt;, I started my own &lt;a href="https://github.com/BackSlasher/chef-backslasher-python"&gt;python cookbook&lt;/a&gt; for Chef because I didn't like the direction the "default" one was going.&lt;br&gt;
I recently added a new feature that I wanted to talk about. I called it &lt;code&gt;smart_install&lt;/code&gt; in the cookbook, but it's actually a "dry-run" mode …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I wrote &lt;a href="https://blog.backslasher.net/backslasher-python.html"&gt;some time ago&lt;/a&gt;, I started my own &lt;a href="https://github.com/BackSlasher/chef-backslasher-python"&gt;python cookbook&lt;/a&gt; for Chef because I didn't like the direction the "default" one was going.&lt;br&gt;
I recently added a new feature that I wanted to talk about. I called it &lt;code&gt;smart_install&lt;/code&gt; in the cookbook, but it's actually a "dry-run" mode for &lt;code&gt;pip install&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Motivation&lt;/h3&gt;
&lt;p&gt;When installing a Pip package using Chef, I have the "install" command, which is something like &lt;code&gt;pip install PACKAGENAME&lt;/code&gt;. After I do so, I consider the resource "updated" (as in, its state has changed), which means it'll notify any resoures subscribed to it (e.g. restarting a service after a package is upgraded).&lt;br&gt;
I have 3 constraints:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;install&lt;/code&gt; action of the Pip resource should look like it ran &lt;code&gt;pip install&lt;/code&gt; every time. In other words, if &lt;code&gt;pip install&lt;/code&gt; would do something, it should run.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;install&lt;/code&gt; action shouldn't notify other resources that subscribed to it if &lt;code&gt;pip install&lt;/code&gt; would have done nothing (e.g. if package is installed at the right version).&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;install&lt;/code&gt; action should notify other resources that subscribed to it if &lt;code&gt;pip install&lt;/code&gt; would have done something (e.g. installed a package if it's missing).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I saw 2 options to solve my constraints:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;pip install&lt;/code&gt; every time, and parse its output to determine whether it did something or not.&lt;/li&gt;
&lt;li&gt;Mark the resource as updated whenever I run &lt;code&gt;pip install&lt;/code&gt;, and use something beforehand to determine whether running &lt;code&gt;pip install&lt;/code&gt; is even needed (as in, would it do something).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Option 1 seemed too unreliable for me as it involved parsing a pretty verbose output that could change greatly between Pip versions, and might also include custom output (from installed packages' code), so I had to go for option 2.  &lt;/p&gt;
&lt;h3&gt;Initial implementation&lt;/h3&gt;
&lt;p&gt;The first implementation, which currently stays as a fallback to "smart install", is taken primarily from the original Python cookbook.&lt;br&gt;
It involves running &lt;code&gt;pip list&lt;/code&gt; and parsing its output to see which version is installed now, if any:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# https://github.com/BackSlasher/chef-backslasher-python/blob/5de6e03/providers/pip.rb#L51&lt;/span&gt;
&lt;span class="n"&gt;my_line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pip_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compact&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This information is joined with what little info we have about the package we're about to install (e.g. do we have a manually set version) and our intended action (install/upgrade) to decide whether to run &lt;code&gt;pip install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;My primary issue with it is that it didn't work when installing from a URL / complex requirement line (e.g. &lt;code&gt;requests&amp;gt;=2&lt;/code&gt;), and enriching it to work with these meant a lot of complexity (like downloading the package at the provided URL, extracting it and parsing its version) that I wasn't going to implement.&lt;/p&gt;
&lt;h3&gt;Smart install&lt;/h3&gt;
&lt;p&gt;To handle more complicated cases, I've decided to create a Python script that uses Pip's libraries to decide whether &lt;code&gt;pip install&lt;/code&gt; would do something.&lt;br&gt;
At first, I copied a lot of logic from &lt;code&gt;pip.commands.install&lt;/code&gt; and &lt;code&gt;pip.req&lt;/code&gt; to fill a &lt;code&gt;to_install&lt;/code&gt; array (the name given in the Pip code to a collection of "requirements" to be installed), and then check whether this array has anything in it.&lt;br&gt;
Problem was, some method headers differ between my tested Pip versions, so I decided to avoid using that script because it might break pretty easily, in addition to it being pretty bulky.&lt;br&gt;
The solution I settled on might look clever to some and stupid to others. I decided to patch the "install" method on the &lt;code&gt;RequirementSet&lt;/code&gt; object (used to represent a collection of needed packages) to add them all to my own array. I'm then checking whether this array is empty or not, and printing the result.&lt;br&gt;
The script looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# https://github.com/BackSlasher/chef-backslasher-python/blob/90631c3/files/default/smart_install.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pip.req&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RequirementSet&lt;/span&gt;

&lt;span class="n"&gt;to_install&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_install&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;install_options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;global_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;to_install&lt;/span&gt;
    &lt;span class="n"&gt;to_install&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;satisfied_by&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;RequirementSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;my_install&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pip&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-q&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-q&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# keep it quiet&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#print &amp;#39;to_install is&amp;#39;,[r.name for r in to_install]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to_install&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Interesting points:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The script is invoked just like Pip would, i.e. &lt;code&gt;python /tmp/smart_install.py install requests&amp;gt;=2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;I'm forcing &lt;code&gt;-q&lt;/code&gt; or "quiet" mode to avoid littering STDOUT with Pip's usual chatter.&lt;/li&gt;
&lt;li&gt;A non-0 exit code means failure to run. Whether anything is to be installed is determined by the script returning &lt;code&gt;True&lt;/code&gt;/&lt;code&gt;False&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;I'm not sure the script is fit for every use-case, so it's disabled by default. I'm especially afraid of it actually doing something (and not tellng Chef that it did).&lt;br&gt;
I would like to integrate it into Pip some day as &lt;code&gt;--dry-run&lt;/code&gt; (thinking big). I still haven't decided how it will behave in the way of output - I'm not big on changing the exit code on one hand, and afraid of my meaningful output drowning in Pip's output.&lt;br&gt;
As usual, any comments are welcome!&lt;/p&gt;</content><category term="FOSS"></category><category term="Scripts"></category><category term="Python"></category><category term="Pip"></category></entry><entry><title>Some Jenkins helpers for Chef</title><link href="https://blog.backslasher.net/chef-jenkins-helpers.html" rel="alternate"></link><published>2016-03-16T15:00:00+01:00</published><updated>2016-03-16T15:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-03-16:/chef-jenkins-helpers.html</id><summary type="html">&lt;p&gt;I've decided to share some code I use in Chef to pull some data and files from Jenkins&lt;/p&gt;
&lt;h3&gt;JenkinsQuery&lt;/h3&gt;
&lt;p&gt;This is a helper class, in charge of getting build-related data&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# slasher_development/libraries/jenkins_query.rb&lt;/span&gt;

&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;SlasherDevelopment&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JenkinsQuery&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@scheme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# Modify if needed&lt;/span&gt;
      &lt;span class="vi"&gt;@server …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I've decided to share some code I use in Chef to pull some data and files from Jenkins&lt;/p&gt;
&lt;h3&gt;JenkinsQuery&lt;/h3&gt;
&lt;p&gt;This is a helper class, in charge of getting build-related data&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# slasher_development/libraries/jenkins_query.rb&lt;/span&gt;

&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;SlasherDevelopment&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JenkinsQuery&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@scheme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# Modify if needed&lt;/span&gt;
      &lt;span class="vi"&gt;@server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;
      &lt;span class="vi"&gt;@user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
      &lt;span class="vi"&gt;@password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;
      &lt;span class="vi"&gt;@job&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;job&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_json&lt;/span&gt;
      &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uri&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@scheme&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;://&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@server&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/job/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/api/json?depth=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;nil&lt;/span&gt;
      &lt;span class="no"&gt;Net&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="ss"&gt;:use_ssl&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
         &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Net&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Get&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_uri&lt;/span&gt;
         &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_auth&lt;/span&gt; &lt;span class="vi"&gt;@user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@password&lt;/span&gt;
         &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="c1"&gt;# Net::HTTPResponse object&lt;/span&gt;
         &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;
       &lt;span class="k"&gt;end&lt;/span&gt;
       &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
       &lt;span class="n"&gt;dat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="n"&gt;dat&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;last_successful_build_revision&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repository_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;dat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;get_json&lt;/span&gt;
      &lt;span class="n"&gt;lastbuild&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dat&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lastSuccessfulBuild&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;dat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;lastbuild&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;changeSet&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;revisions&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;module&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="n"&gt;repository_url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;revision&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The constructor is job-specific, meaning an instance handles a single job.&lt;br&gt;
&lt;code&gt;get_json&lt;/code&gt; gets the job's metadata file. It contains several useful details (hit it yourself and find out).&lt;br&gt;
&lt;code&gt;last_successful_build_revision&lt;/code&gt; is a helper method for extracting a very specific detail - the source repository's revision that was used in the last successful build.&lt;br&gt;
It takes the repository url, since Jenkins assumes a single build can have multiple sources (rare but true).&lt;br&gt;
I use it for checking out a subversion repo to match an artifact's version (more on that later).&lt;br&gt;
This method can be generalized if needed.&lt;/p&gt;
&lt;h3&gt;JenkinsFile&lt;/h3&gt;
&lt;p&gt;This is a resource used to fetch an artifact from Jenkins&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# slasher_development/resources/jenkins_file.rb&lt;/span&gt;

&lt;span class="n"&gt;actions&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:delete&lt;/span&gt;
&lt;span class="n"&gt;default_action&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt;

&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:name_attribute&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:mode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:owner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:group&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;

&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:artifact&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:required&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:job&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:required&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:build&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:default&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lastSuccessfulBuild&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# slasher_development/providers/jenkins_file.rb&lt;/span&gt;

&lt;span class="n"&gt;use_inline_resources&lt;/span&gt;

&lt;span class="n"&gt;source_credentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_bag_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;secret_stuff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jenkins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;jenkins_server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jenkins_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jenkins_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;source_credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values_at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;remote_file&lt;/span&gt; &lt;span class="vi"&gt;@new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;mode&lt;/span&gt;  &lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;
    &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;
    &lt;span class="n"&gt;owner&lt;/span&gt; &lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;
    &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;jenkins_user&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;jenkins_password&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;@&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;jenkins_server&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/job/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/artifact/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;artifact&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:delete&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="vi"&gt;@new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:delete&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, this is a very simple use of &lt;code&gt;remote_file&lt;/code&gt;. The interesting thing here is the composition of the URL.&lt;br&gt;
Also note that Jenkins doesn't use "401 Unauthorized" to tell clients they need to login, it just flat-out rejects them. To handle this, you need to use &lt;a href="http://hc.apache.org/httpclient-3.x/authentication.html#Preemptive_Authentication"&gt;Preemptive Authentication&lt;/a&gt;, meaning that the client sends the credentials on the first request. Chef's &lt;code&gt;remote_file&lt;/code&gt; does so, but &lt;code&gt;wget&lt;/code&gt; doesn't.&lt;br&gt;
The default value for "build" causes it to retrieve the artifact from the last successful build.&lt;/p&gt;
&lt;h3&gt;JenkinsVersionedSvn&lt;/h3&gt;
&lt;p&gt;This is a resource used to check out an SVN repo in a specific version that matches the one used in the last successful build of a Jenkins job.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# slasher_development/resources/jenkins_versioned_svn.rb&lt;/span&gt;

&lt;span class="n"&gt;actions&lt;/span&gt; &lt;span class="ss"&gt;:checkout&lt;/span&gt;
&lt;span class="n"&gt;default_action&lt;/span&gt; &lt;span class="ss"&gt;:checkout&lt;/span&gt;

&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:name_attribute&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:repository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:jenkins_job&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# slasher_development/providers/jenkins_versioned_svn.rb&lt;/span&gt;

&lt;span class="n"&gt;use_inline_resources&lt;/span&gt;

&lt;span class="n"&gt;source_credentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_bag_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;secret_stuff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jenkins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:checkout&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;jenkins_server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jenkins_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jenkins_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;source_credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values_at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;svn_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;svn_pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_bag_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;secret_deployment&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;svn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values_at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;DyDevelopment&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;JenkinsQuery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jenkins_server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jenkins_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jenkins_password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jenkins_job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;my_revision&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last_successful_build_revision&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;my_revision&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dy_subversion&lt;/span&gt; &lt;span class="vi"&gt;@new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;
      &lt;span class="n"&gt;revision&lt;/span&gt; &lt;span class="n"&gt;my_revision&lt;/span&gt;
      &lt;span class="n"&gt;svn_username&lt;/span&gt; &lt;span class="n"&gt;svn_user&lt;/span&gt;
      &lt;span class="n"&gt;svn_password&lt;/span&gt; &lt;span class="n"&gt;svn_pass&lt;/span&gt;
      &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;updated_by_last_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;updated_by_last_action?&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jenkins_job&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; has no last successful build. Will not deploy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again, this resource can be generalized to support more build types.&lt;/p&gt;</content><category term="FOSS"></category><category term="Jenkins"></category><category term="Chef"></category><category term="HTTP"></category></entry><entry><title>Filtering in Shell</title><link href="https://blog.backslasher.net/shell-filter.html" rel="alternate"></link><published>2016-02-29T13:00:00+01:00</published><updated>2016-02-29T13:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-02-29:/shell-filter.html</id><summary type="html">&lt;p&gt;Today I told someone that a feature I'm missing in Bash is filtering.&lt;br&gt;
Then I thought about how much I miss it, so I went ahead and "implemented" it.&lt;/p&gt;
&lt;h3&gt;Filtering in other lanaugaes&lt;/h3&gt;
&lt;p&gt;Basically, I'm referring to taking a collection/stream of items, running some code on every one, and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I told someone that a feature I'm missing in Bash is filtering.&lt;br&gt;
Then I thought about how much I miss it, so I went ahead and "implemented" it.&lt;/p&gt;
&lt;h3&gt;Filtering in other lanaugaes&lt;/h3&gt;
&lt;p&gt;Basically, I'm referring to taking a collection/stream of items, running some code on every one, and only passing on the ones that make the code evaluate to a "truthy" value.&lt;/p&gt;
&lt;p&gt;In PowerShell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Some-Command&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;where-object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;SOME_CODE_HERE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Other-Command&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In Ruby:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;some_command&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="no"&gt;SOME_CODE_HERE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;other_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;some_command&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SOME_CODE_HERE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;other_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Basic Implementation&lt;/h3&gt;
&lt;p&gt;I thought about writing a script file but settled for a function. It can be extracted and moved to a file, should it matter to anyone.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;filter&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; __line&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    ! &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$__line&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$__line&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All of the parameters passed are evaluated in a subshell that has the function's STDIN.&lt;br&gt;
My only issue was that I wanted to avoid designating a specific replacement string for the "current item" (like &lt;code&gt;$_&lt;/code&gt; in PowerShell / Perl), so I use &lt;code&gt;$(head -n1)&lt;/code&gt;&lt;br&gt;
For example, this is how I can pull a list of Chef nodes and only show the ones responding to SSH:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;knife node list &lt;span class="p"&gt;|&lt;/span&gt; filter &lt;span class="s1"&gt;&amp;#39;ssh $(head -n1) -o ConnectTimeout=1 -o StrictHostKeyChecking=no hostname &amp;lt;/dev/null &amp;amp;&amp;gt;/dev/null&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Assuming I have a test I want to run on each server in a script (e.g. does it have a problematic kernel version), I can do it like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# script in /tmp/bla.sh&lt;/span&gt;
ssh &lt;span class="k"&gt;$(&lt;/span&gt;head -n1&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;uname -a | grep &amp;#39; 2.6&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;knife node list &lt;span class="p"&gt;|&lt;/span&gt; filter /tmp/bla.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also possible is actually using the internal variable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat /tmp/servers.txt &lt;span class="p"&gt;|&lt;/span&gt; filter ssh &lt;span class="s1"&gt;&amp;#39;$__line&amp;#39;&lt;/span&gt; hostname &lt;span class="s1"&gt;&amp;#39;&amp;amp;&amp;gt;/dev/null&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Parallel implementation&lt;/h3&gt;
&lt;p&gt;Using the wonderful &lt;code&gt;parallel&lt;/code&gt; utility, I can get parallel filtering&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;filter_parallel() {&lt;/span&gt;
&lt;span class="err"&gt;  parallel &amp;quot;! (echo &amp;#39;{}&amp;#39; | ($@)) || echo &amp;#39;{}&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Works about the same, except that because the command is evaluated in a sub-process rather than a sub-shell, no bash functions / variables are available&lt;/p&gt;
&lt;p&gt;I had a bet here whether this is useful to anyone. If you find that you've been missing this as well, please leave me a comment!&lt;/p&gt;</content><category term="FOSS"></category><category term="Scripts"></category><category term="Bash"></category><category term="Shell"></category></entry><entry><title>Cookbook Versioning Script</title><link href="https://blog.backslasher.net/cookbook-versioning.html" rel="alternate"></link><published>2016-02-29T12:00:00+01:00</published><updated>2016-02-29T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-02-29:/cookbook-versioning.html</id><summary type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;I've always disliked releasing cookbook versions manually. The process requires a lot of bureaucratic steps which are easy to forget and require no thought at all.&lt;br&gt;
Before I had this script, I sometimes avoided modifying the cookbook's version when I only applied "a little fix", losing the ability …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;I've always disliked releasing cookbook versions manually. The process requires a lot of bureaucratic steps which are easy to forget and require no thought at all.&lt;br&gt;
Before I had this script, I sometimes avoided modifying the cookbook's version when I only applied "a little fix", losing the ability to roll back to previous versions (for instance).&lt;br&gt;
I also had little success in having anybody else follow my tedious procedure, which led to the "only I can touch master" approach that turned me into a serious bottleneck in cookbook releases.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Nowdays I have a Jenkins job which is in charge of taking a "topical" branch and merging it "properly" to the cookbook's master branch.&lt;br&gt;
The job contains these steps:&lt;/p&gt;
&lt;h3&gt;1. Valdate git-etiquette&lt;/h3&gt;
&lt;p&gt;I need to make sure that this branch is following my guidelines for PRs:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It has to be a descendant of master&lt;br&gt;
    This is done to ensure that the resulting merge will be a fast-forward merge (FF), keeping my git history uncomplicated, saving me from unexpected merge conflicts, and avoiding merge-only issues (&lt;code&gt;master&lt;/code&gt; works fine, &lt;code&gt;topical&lt;/code&gt; works fine, their merge somehow doesn't. It happens).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It needs to be merge-commit free:&lt;br&gt;
    I really like my commit trees linear. I also expect merge-candidates to be short-lived topical branches, so it makes sense to expect a straightforward chain of commits from them&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; -e

&lt;span class="c1"&gt;# `git merge-base --is-ancestor` on git&amp;gt;1.8&lt;/span&gt;
&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git rev-parse --short HEAD&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#current commit&lt;/span&gt;
&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;master&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# target_branch&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;git merge-base &lt;span class="nv"&gt;$A&lt;/span&gt; &lt;span class="nv"&gt;$B&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;git rev-parse --verify &lt;span class="nv"&gt;$A&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Will not merge &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; into itself&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;git merge-base &lt;span class="nv"&gt;$B&lt;/span&gt; &lt;span class="nv"&gt;$A&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;git rev-parse --verify &lt;span class="nv"&gt;$B&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Will not perform a non-FF merge&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git log --merges &lt;span class="nv"&gt;$A&lt;/span&gt;..&lt;span class="nv"&gt;$B&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Will not introduce merge commits&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# All OK&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2. Test Cookbook&lt;/h3&gt;
&lt;p&gt;In real life, this is done by a different Jenkins job, since "testing a cookbook" is an action I use a lot in my workflows.
The simplest way of doing it, however, can be something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;berks install &lt;span class="c1"&gt;# Fetch dependencies&lt;/span&gt;
berks verify  &lt;span class="c1"&gt;# Check syntax etc&lt;/span&gt;
foodcritic .  &lt;span class="c1"&gt;# Linting&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These steps require the ChefDK installed, obviously&lt;/p&gt;
&lt;h3&gt;3. Choose a new version number&lt;/h3&gt;
&lt;p&gt;I use the &lt;a href="http://semver.org/"&gt;semantic versioning&lt;/a&gt; standard versioning, which basically means that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If I break backwards-compatibility, it's a major version (X.x.x)&lt;/li&gt;
&lt;li&gt;Else-if I add new features, it's a minor version (x.X.x)&lt;/li&gt;
&lt;li&gt;Else it's a build number (x.x.X)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To determine the increment required, I've decided to look through git commit messages and detect strings indicating big changes.&lt;br&gt;
My reasoning is that when a developer adds a significant change (e.g. a breaking change), they can include the string &lt;code&gt;MAJOR_BUMP&lt;/code&gt; in their commit message and forget about it.&lt;br&gt;
This script will see that the new commits include such messages and increment the major version.&lt;br&gt;
It might look a bit hackish, but it works&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class="c1"&gt;# monkey patching&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt; 

&lt;span class="n"&gt;target_branch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;has_minor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`git log &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;target_branch&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;.. --grep=BUMP_MINOR`&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;has_major&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`git log &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;target_branch&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;.. --grep=BUMP_MAJOR`&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;bump_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;has_major&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;major&amp;#39;&lt;/span&gt;
          &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;has_minor&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;minor&amp;#39;&lt;/span&gt;
          &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;build&amp;#39;&lt;/span&gt;
          &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# Get next version&lt;/span&gt;
&lt;span class="n"&gt;split_options&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;major&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;minor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;split_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;split_options&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bump_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;unknown bump modifier&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;split_index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;
&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./metadata.rb&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^\s*version\W/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;
&lt;span class="n"&gt;version_regex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/(&amp;quot;|&amp;#39;)([\d\.]+)(&amp;quot;|&amp;#39;)/&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;version_regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;split_index&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;split_index&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;# Zero other cells&lt;/span&gt;
&lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Export new_version somehow to the other scripts&lt;/span&gt;
&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NEW_VERSION&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;4. Modify the version identifier&lt;/h3&gt;
&lt;p&gt;Now that we have a version, we need to update the &lt;code&gt;metadata.rb&lt;/code&gt; file with the new version number&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class="c1"&gt;# monkey patching&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NEW_VERSION&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Read file&lt;/span&gt;
&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./metadata.rb&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Find version line&lt;/span&gt;
&lt;span class="n"&gt;version_regex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/(&amp;quot;|&amp;#39;)([\d\.]+)(&amp;quot;|&amp;#39;)/&lt;/span&gt;
&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^\s*version\W/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;

&lt;span class="c1"&gt;# Generate new one&lt;/span&gt;
&lt;span class="n"&gt;new_version_line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version_regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;new_metadata&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\n&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Regexp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;\n/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_version_line&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Write back to file&lt;/span&gt;
&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new_metadata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;5. Create changelog&lt;/h3&gt;
&lt;p&gt;This is by far the most tedious step to do manually, and also the hardest (IMO) to automate. I insist on maintaining a changelog for cookbooks, because:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The git history isn't always available (e.g. in the cookbook's "compiled" form)&lt;/li&gt;
&lt;li&gt;Compiled artifacts shouldn't rely on version-control-specific details, such as commits.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I support the changelog formats created by both &lt;code&gt;berks cookbook&lt;/code&gt; and &lt;code&gt;knife cookbook create&lt;/code&gt;.&lt;br&gt;
The gist of the script is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Extract commit message in a specific format from every commit to be merged&lt;/li&gt;
&lt;li&gt;Combine them into a markdown-like list&lt;/li&gt;
&lt;li&gt;Add the list at the right place in the &lt;code&gt;CHANGELOG&lt;/code&gt; file - before the topmost version&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class="c1"&gt;# monkey patching&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;target_branch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NEW_VERSION&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Collect messages&lt;/span&gt;
&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`git log &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;target_branch&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;.. --format=&amp;#39;%w(0,0,4)- [%h] (%an) %s%n%n%b&amp;#39;`&lt;/span&gt;

&lt;span class="c1"&gt;# Combine to markdown&lt;/span&gt;
&lt;span class="n"&gt;new_changes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;# &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Modify file&lt;/span&gt;
&lt;span class="n"&gt;changes_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./CHANGELOG.md&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changes_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Handle multiple formats&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^#/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# Berks format&lt;/span&gt;
  &lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/#/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_changes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^.* CHANGELOG\n=*\n/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# Knife format&lt;/span&gt;
  &lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\n[\d\.]+\n-*\n/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_changes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n\\&lt;/span&gt;&lt;span class="s2"&gt;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Added pound&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Unknown format in &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;changes_file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changes_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;6. Create the version commit&lt;/h3&gt;
&lt;p&gt;The modifications to the files need to be commited as the "version bump" commit. This commit will also be the tip for the new version.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git commit metadata.rb CHANGELOG.md -m &lt;span class="s2"&gt;&amp;quot;Upgraded to version &lt;/span&gt;&lt;span class="nv"&gt;$NEW_VERSION&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;7. Tag and push&lt;/h3&gt;
&lt;p&gt;The new version should be pushed to &lt;code&gt;master&lt;/code&gt; and tagged as &lt;code&gt;vNEW_VERSION&lt;/code&gt;. In my case, this is done in a Jenkins-specific action, but it can be scripted like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git tag &lt;span class="s2"&gt;&amp;quot;v&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;NEW_VERSION&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
git push --tags
git push origin HEAD:master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;8. Upload to production&lt;/h3&gt;
&lt;p&gt;This is the simple version:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;berks upload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And this is the one I actually use, which helps me generate a nice message about which cookbooks were modified:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;BERKS_OUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;berks upload &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;^Uploaded&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Uploaded: &amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$BERKS_OUT&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Update 25.11.16&lt;/h2&gt;
&lt;p&gt;I joined all of these to a standalone script I use for my own cookbooks:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class="c1"&gt;# Arguments&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;optparse&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;target_branch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="no"&gt;OptionParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Major bump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:major_bump&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Minor bump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:minor_bump&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--directory D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Working directory&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:directory&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--target TAR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Commit containing current version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:target_branch&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse!&lt;/span&gt;

&lt;span class="n"&gt;target_branch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:target_branch&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# monkey patching&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# cd to target directory&lt;/span&gt;
&lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:directory&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:directory&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# New version&lt;/span&gt;
&lt;span class="n"&gt;split_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:major_bump&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
              &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:minor_bump&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
              &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
              &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./metadata.rb&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^\s*version\W/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;
&lt;span class="n"&gt;version_regex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/(&amp;quot;|&amp;#39;)([\d\.]+)(&amp;quot;|&amp;#39;)/&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;version_regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;split_index&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;split_index&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;# Zero other cells&lt;/span&gt;
&lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;v_arr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#### Changelog&lt;/span&gt;

&lt;span class="c1"&gt;# Collect messages&lt;/span&gt;
&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`git log &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;target_branch&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;.. --format=&amp;#39;%w(0,0,4)- [%h] (%an) %s&amp;#39;`&lt;/span&gt;

&lt;span class="c1"&gt;# Combine to markdown&lt;/span&gt;
&lt;span class="n"&gt;new_changes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;# &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Modify file&lt;/span&gt;
&lt;span class="n"&gt;changes_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./CHANGELOG.md&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changes_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Handle multiple formats&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^#/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# Berks format&lt;/span&gt;
  &lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/#/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_changes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^.* CHANGELOG\n=*\n/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# Knife format&lt;/span&gt;
  &lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\n[\d\.]+\n-*\n/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_changes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n\\&lt;/span&gt;&lt;span class="s2"&gt;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Added pound&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Unknown format in &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;changes_file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changes_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;changes_content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#### Metadata file&lt;/span&gt;

&lt;span class="c1"&gt;# Read file&lt;/span&gt;
&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./metadata.rb&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Find version line&lt;/span&gt;
&lt;span class="n"&gt;version_regex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/(&amp;quot;|&amp;#39;)([\d\.]+)(&amp;quot;|&amp;#39;)/&lt;/span&gt;
&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^\s*version\W/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;

&lt;span class="c1"&gt;# Generate new one&lt;/span&gt;
&lt;span class="n"&gt;new_version_line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version_regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_version&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;new_metadata&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\n&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Regexp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version_line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;\n/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_version_line&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Write back to file&lt;/span&gt;
&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new_metadata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# TODO git tag&lt;/span&gt;
&lt;span class="c1"&gt;# TODO merge master&lt;/span&gt;
&lt;span class="c1"&gt;# TODO push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content><category term="FOSS"></category><category term="Scripts"></category><category term="Ruby"></category><category term="Bash"></category><category term="Chef"></category></entry><entry><title>Migrating Grafana's Dashboards</title><link href="https://blog.backslasher.net/grafana-migrate-dashboards.html" rel="alternate"></link><published>2016-02-22T12:00:00+01:00</published><updated>2016-02-22T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-02-22:/grafana-migrate-dashboards.html</id><summary type="html">&lt;p&gt;Similar to my &lt;a href="https://blog.backslasher.net/graphite-migrate-dashboards.html"&gt;Graphite dashboard migration script&lt;/a&gt;, I made a Grafana one.&lt;br&gt;
I'm targeting Grafana v2+.&lt;br&gt;
Note it's using &lt;a href="https://github.com/httprb/http"&gt;http&lt;/a&gt; for its HTTP calls.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;old_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://OLDY&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;new_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://NEWY&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pass&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;board_names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Similar to my &lt;a href="https://blog.backslasher.net/graphite-migrate-dashboards.html"&gt;Graphite dashboard migration script&lt;/a&gt;, I made a Grafana one.&lt;br&gt;
I'm targeting Grafana v2+.&lt;br&gt;
Note it's using &lt;a href="https://github.com/httprb/http"&gt;http&lt;/a&gt; for its HTTP calls.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;old_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://OLDY&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;new_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://NEWY&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pass&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;board_names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;old_server&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/api/search&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uri&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^db\//&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;

&lt;span class="n"&gt;board_names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;dat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;old_server&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/api/dashboards/db/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;dat&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dashboard&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_server&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/api/dashboards/db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;dashboard&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dat&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dashboard&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;overwrite&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Grafana"></category><category term="Ruby"></category><category term="Scripts"></category></entry><entry><title>Running external Ruby code from Vagrant</title><link href="https://blog.backslasher.net/running-external-ruby-code-from-vagrant.html" rel="alternate"></link><published>2016-02-21T12:00:00+01:00</published><updated>2016-02-21T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-02-21:/running-external-ruby-code-from-vagrant.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Like a lot of Chef users, I'm using Vagrant for testing my cookbooks. I'm also using Berkshelf for providing the Vagrant box with the cookbooks it needs.&lt;br&gt;
Until recently, I was happy using the ChefDK-provided Berlshelf (v4.0.1). I stopped being happy when running &lt;code&gt;berks&lt;/code&gt; started consuming …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Like a lot of Chef users, I'm using Vagrant for testing my cookbooks. I'm also using Berkshelf for providing the Vagrant box with the cookbooks it needs.&lt;br&gt;
Until recently, I was happy using the ChefDK-provided Berlshelf (v4.0.1). I stopped being happy when running &lt;code&gt;berks&lt;/code&gt; started consuming CPU for ~5 mins and then failing when my &lt;code&gt;Berksfile&lt;/code&gt; contained multiple sources (the Chef Supermarket and my private Chef server).&lt;br&gt;
While troubleshooting it I've learned that there's an issue with the native dependency graph solver, and I won't be able to fix it in less than a week.&lt;br&gt;
I also noticed that the latest version of the Berkshelf gem (v4.1.1) had no such issues (unless I'm mistaken, it's because it switched to the native Ruby graph solver).  &lt;/p&gt;
&lt;p&gt;The next logical step was migrating to the new version of Berkshelf&lt;/p&gt;
&lt;h3&gt;Attempting to upgrade Berkshelf in the ChefDK&lt;/h3&gt;
&lt;p&gt;I firstly tried working inside ChefDK by upgrading its version of ChefDK.&lt;br&gt;
This made me learn several interesting things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;/usr/bin/berks&lt;/code&gt; file (actually &lt;code&gt;/opt/chefdk/bin/berks&lt;/code&gt;) loads specific versions of Gems.&lt;br&gt;
    This means that even if I install the new version of Berkshelf correctly, I'd have to modify this entry point, and it won't be trivial.&lt;/li&gt;
&lt;li&gt;The ChefDK Ruby environment is configured to install new Gems into the User's home directory (using &lt;code&gt;GEM_HOME&lt;/code&gt;).&lt;br&gt;
    I'm not sure why (&lt;a href="https://github.com/chef/chef-dk/pull/160"&gt;something related&lt;/a&gt; with developing gems?)&lt;/li&gt;
&lt;li&gt;The only way I could execute the new Berkshelf gem "properly" inside the ChefDK was using a &lt;code&gt;Gemfile&lt;/code&gt; and something like &lt;code&gt;chef exec bundle exec Berkshelf&lt;/code&gt;, which was really annoying&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Eventually I decided that the comfort of working inside the ChefDK isn't worth the effort, as taking a clean Ruby 2 environment (e.g. using RVM or Bundler) and installing the Berkshelf Gem inside was effortless.&lt;br&gt;
This worked well for non-Vagrant usage (e.g. calling it from Jenkins), but I still had quite a lot of work.&lt;/p&gt;
&lt;h3&gt;Running Ruby in Vagrant&lt;/h3&gt;
&lt;p&gt;My second issue was with running any Ruby code from inside Vagrant.&lt;br&gt;
As any Vagrant-Berkshelf veteran knows, the workflow goes something like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;User runs some command requiring provisioning, like &lt;code&gt;vagrant up&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Vagrant calls the &lt;code&gt;vagrant-berkshelf&lt;/code&gt; methods pretty early in the Vagrant workflow (after &lt;code&gt;Vagrant::Action::Builtin::ConfigValidate&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant-berkshelf&lt;/code&gt; runs &lt;code&gt;berks install&lt;/code&gt; to locate all relevant cookbooks and generate the &lt;code&gt;Bersfile.lock&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant-berkshelf&lt;/code&gt; calls &lt;code&gt;berks vendor&lt;/code&gt; to make a directory containing all cookbooks that the VM needs, which will be accessed by the Chef client on the VM
And so forth&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This workflow heavily depends on Vagrant executing Berkshelf, which works with ChefDK's Berkshelf because its entry point is "environment-variable proof":&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/opt/chefdk/embedded/bin/ruby&lt;/span&gt;
&lt;span class="c1"&gt;#--APP_BUNDLER_BINSTUB_FORMAT_VERSION=1--&lt;/span&gt;
&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GEM_HOME&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GEM_PATH&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;APPBUNDLER_ALLOW_RVM&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Compare this to the "normal" entry point generated by Gems:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/ruby2.0&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# This file was generated by RubyGems.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# The application &amp;#39;berkshelf&amp;#39; is installed as part of a gem, and&lt;/span&gt;
&lt;span class="c1"&gt;# this file is here to facilitate running it.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;= 0&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;
  &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;
  &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;force_encoding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BINARY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt; &lt;span class="ss"&gt;:force_encoding&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;/\A_(.*)_\z/&lt;/span&gt;
    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vg"&gt;$1&lt;/span&gt;
    &lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shift&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;berkshelf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;
&lt;span class="nb"&gt;load&lt;/span&gt; &lt;span class="no"&gt;Gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bin_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;berkshelf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;berks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The environment negation (deleting &lt;code&gt;GEM_HOME&lt;/code&gt; and &lt;code&gt;GEM_PATH&lt;/code&gt;) is (IMO) related to the Vagrant use-case.&lt;br&gt;
Fact is, Vagrant is polluting the environment of subprocesses with Vagrant-specific Ruby-related variables.&lt;/p&gt;
&lt;h3&gt;Vagrant, Bundler and external processes&lt;/h3&gt;
&lt;p&gt;Vagrant uses Bundler as a way of managing its Ruby dependencies (both internal and plugins), so Vagrant suffers from the same issue that Bundler has - it assumes that subprocesses are supposed to run inside its own Ruby environment. To do so, it modifies its own ruby-related environment variables, such as &lt;code&gt;GEM_PATH&lt;/code&gt; (where to look for gems) and &lt;code&gt;GEM_HOME&lt;/code&gt; (where gems should be installed).&lt;br&gt;
For cases where it's not true, Bundler offers a method called &lt;a href="http://www.rubydoc.info/github/bundler/bundler/Bundler.with_clean_env"&gt;&lt;code&gt;Bundler.with_clean_env&lt;/code&gt;&lt;/a&gt;. This should yield (execute a given code block) with the "original" environment (the one bundler had when it started), so any processes spawned from that block should be free of the Bundler contamination.&lt;br&gt;
Vagrant tries to utilize this method, but it doesn't work as expected.  &lt;/p&gt;
&lt;h4&gt;&lt;code&gt;with_clean_env&lt;/code&gt; internals&lt;/h4&gt;
&lt;p&gt;Let's drill down a bit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# https://github.com/bundler/bundler/blob/5131fcd/lib/bundler.rb#L211&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;with_clean_env&lt;/span&gt;
  &lt;span class="n"&gt;with_original_env&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MANPATH&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BUNDLE_ORIG_MANPATH&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete_if&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BUNDLE_&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;has_key?&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;RUBYOPT&amp;#39;&lt;/span&gt;
      &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RUBYOPT&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RUBYOPT&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-rbundler/setup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
      &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RUBYOPT&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RUBYOPT&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-I&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;..&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# https://github.com/bundler/bundler/blob/5131fcd/lib/bundler.rb#L203&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;with_original_env&lt;/span&gt;
  &lt;span class="n"&gt;bundled_env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_hash&lt;/span&gt;
  &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;ORIGINAL_ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;yield&lt;/span&gt;
&lt;span class="k"&gt;ensure&lt;/span&gt;
  &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bundled_env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# https://github.com/bundler/bundler/blob/5131fcd/lib/bundler.rb#L16&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Bundler&lt;/span&gt;
  &lt;span class="no"&gt;ORIGINAL_ENV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;environment_preserver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;restore&lt;/span&gt;
  &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;environment_preserver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backup&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So, when the Bundler module is loaded, it creates a backup of the current environment variables. This backup (plus some modifications) is used whenever &lt;code&gt;with_clean_env&lt;/code&gt; is called. How can it break?&lt;/p&gt;
&lt;p&gt;By adding debug prints inside the Bundler gem, I deduced the following facts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bundler is invoked twice&lt;br&gt;
    First, the entry point is &lt;code&gt;pre-rubygems.rb&lt;/code&gt;, as evident from the &lt;a href="https://github.com/mitchellh/vagrant-installers/blob/c5eb9bb/substrate/launcher/main.go"&gt;vagrant launcher&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Line 187&lt;/span&gt;

&lt;span class="nx"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ruby&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gemPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lib&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pre-rubygems.rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note these bits at &lt;a href="https://github.com/mitchellh/vagrant/blob/27157b5/lib/vagrant/pre-rubygems.rb"&gt;lib/vagrant/pre-rubygems.rb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Line 19&lt;/span&gt;
&lt;span class="n"&gt;require_relative&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bundler&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;!-- --&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Line 30&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VAGRANT_EXECUTABLE&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="no"&gt;Kernel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ruby&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VAGRANT_EXECUTABLE&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="no"&gt;Kernel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And finally, this in &lt;a href="https://github.com/mitchellh/vagrant/blob/27157b5/bin/vagrant"&gt;&lt;code&gt;bin/vagrant&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Line 69&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bundler&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, the &lt;code&gt;pre-rubygems.rb&lt;/code&gt; file is invoked first, loads Bundler, and then &lt;a href="http://linux.die.net/man/3/exec"&gt;execs&lt;/a&gt; the Vagrant entry point, which loads its own Bundler.
So the Bundler gem is loaded twice, and the second instance "saves" the environment already modified by the first instace, meaning &lt;code&gt;with_clean_env&lt;/code&gt; is useless.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vagrant works around this&lt;br&gt;
    The Vagrant devs tried to solve this issue by backing up the environment variables before any modification, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// https://github.com/mitchellh/vagrant-installers/blob/c5eb9bb/substrate/launcher/main.go&lt;/span&gt;
&lt;span class="c1"&gt;// Line 18&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;envPrefix&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;VAGRANT_OLD_ENV&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;!-- --&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// https://github.com/mitchellh/vagrant-installers/blob/c5eb9bb/substrate/launcher/main.go&lt;/span&gt;
&lt;span class="c1"&gt;// Line 150&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Environ&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;idx&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IndexRune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s_%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;envPrefix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="nx"&gt;newEnv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then allow restoring from it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# https://github.com/mitchellh/vagrant/blob/27157b5/lib/vagrant.rb&lt;/span&gt;
&lt;span class="c1"&gt;# Line 236&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;original_env&lt;/span&gt;
    &lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tap&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_with?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VAGRANT_OLD_ENV&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^VAGRANT_OLD_ENV_/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This method works (sort of).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;code&gt;with_original_env&lt;/code&gt; is done wrong&lt;/h3&gt;
&lt;p&gt;Both the Bundler backup environment and the Vagrant backup environment are being handled in &lt;a href="https://github.com/mitchellh/vagrant/blob/dec5f70/lib/vagrant/util/env.rb"&gt;&lt;code&gt;Vagrant::Util::Env.with_original_env&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;with_original_env&lt;/span&gt;
  &lt;span class="n"&gt;original_env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_hash&lt;/span&gt;
  &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Bundler&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ORIGINAL_ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;defined?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Bundler&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ORIGINAL_ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;original_env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;yield&lt;/span&gt;
&lt;span class="k"&gt;ensure&lt;/span&gt;
  &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;original_env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, notice the two issues here:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the normal Vagrant flow (working via the Vagrant launcher), the &lt;code&gt;Bundler::ORIGINAL_ENV&lt;/code&gt; hash is useless because of the double invocation of Bundler.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Because we're only using &lt;code&gt;update&lt;/code&gt; with the "proper" environment backup, values won't be deleted, only replaced:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;bad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;bad&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bad&lt;/span&gt;
&lt;span class="c1"&gt;# =&amp;gt; {&amp;quot;a&amp;quot;=&amp;gt;1, &amp;quot;b&amp;quot;=&amp;gt;3}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So values that didn't exist in the backup and do exist in the current environment (e.g. &lt;code&gt;GEM_PATH&lt;/code&gt;) will stay.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/mitchellh/vagrant/pull/7047"&gt;This&lt;/a&gt; is the relevant PR&lt;/p&gt;
&lt;p&gt;Firsty, I modified &lt;code&gt;Vagrant::Util::Env.with_original_env&lt;/code&gt;.&lt;br&gt;
I made the assumption that if we're going through the Vagrant launcher, we only need to restore its environment.&lt;br&gt;
If not, we'll restore the Bundler environment, if one exists.&lt;br&gt;
The result looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;proxy_env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;original_env&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;original_env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;any?&lt;/span&gt;
  &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proxy_env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;defined?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Bundler&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ORIGINAL_ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Bundler&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ORIGINAL_ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After that, I had to locate the code in charge of spawning new processes and make sure that it's using the right logic.&lt;br&gt;
The interesting method is &lt;code&gt;Vagrant::Util::Subprocess#execute&lt;/code&gt; in &lt;a href="https://github.com/mitchellh/vagrant/blob/dec5f70/lib/vagrant/util/subprocess.rb"&gt;lib/vagrant/util/subprocess.rb&lt;/a&gt;.&lt;br&gt;
It's very long, but you can save yourself reading it by believing me that the only thing it does about saving the subprocess from the Bundler modifications is calling &lt;code&gt;jailbreak&lt;/code&gt;, which is defined in the same file.&lt;br&gt;
The introduction for this method is best quoted from the file direct:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is, quite possibly, the saddest function in all of Vagrant.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The method itself does plenty with the environment, mainly dealing with environment-related corner cases. Our interesting part is this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Bundler&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ORIGINAL_ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;defined?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Bundler&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ORIGINAL_ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;original_env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Instead of repeating the logic from &lt;code&gt;with_original_env&lt;/code&gt;, I removed it from &lt;code&gt;jailbreak&lt;/code&gt;, and instead took &lt;code&gt;process.start&lt;/code&gt; from &lt;code&gt;execute&lt;/code&gt; and wrapped it in &lt;code&gt;with_original_env&lt;/code&gt;, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Util&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;with_original_env&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I might have misunderstood jailbreak a bit, but hopefully it'll work OK.  &lt;/p&gt;
&lt;p&gt;And there you have it.&lt;/p&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="Vagrant"></category><category term="Ruby"></category><category term="Mysteries Solved"></category><category term="Chef"></category></entry><entry><title>Backslasher-Python: a simple Chef Python cookbook</title><link href="https://blog.backslasher.net/backslasher-python.html" rel="alternate"></link><published>2016-02-20T12:00:00+01:00</published><updated>2016-02-20T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-02-20:/backslasher-python.html</id><summary type="html">&lt;h3&gt;What's wrong with the current Python cookbook&lt;/h3&gt;
&lt;p&gt;Until now, we were using the &lt;a href="https://github.com/poise/python"&gt;Python cookbook&lt;/a&gt;. This worked well for a while, until I noticed these things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;This cookbook is being deprecated, and replaced by &lt;a href="https://github.com/poise/poise-python"&gt;poise-python&lt;/a&gt;, meaning some day the Python cookbook will be a wrapper around poise-python.&lt;/li&gt;
&lt;li&gt;Even today, when …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h3&gt;What's wrong with the current Python cookbook&lt;/h3&gt;
&lt;p&gt;Until now, we were using the &lt;a href="https://github.com/poise/python"&gt;Python cookbook&lt;/a&gt;. This worked well for a while, until I noticed these things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;This cookbook is being deprecated, and replaced by &lt;a href="https://github.com/poise/poise-python"&gt;poise-python&lt;/a&gt;, meaning some day the Python cookbook will be a wrapper around poise-python.&lt;/li&gt;
&lt;li&gt;Even today, when the poise-python cookbook is used in a Chef-run, it's taking over the Python cookbook's resources&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;What's wrong with the Poise-Python cookbook&lt;/h3&gt;
&lt;p&gt;This new cookbook is way too magical for me.&lt;br&gt;
I'm not in the habit of criticising other people's work, and I'm sure CodeRanger knows what he's doing, but I find the following facts disturbing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;All of the cookbook logic is stored inside &lt;code&gt;lib/&lt;/code&gt;, and processed using &lt;a href="https://github.com/poise/halite"&gt;halite&lt;/a&gt;&lt;br&gt;
    This means the division of recipes/resources/helpers is unclear and you have to "hunt" for the file containing the resource you want to troubleshoot.&lt;/li&gt;
&lt;li&gt;The resources use inheritance for state and logic&lt;br&gt;
    After you found the proper file for your resource, you might need to search other files for methods that are part of the flow you're troubleshooting.&lt;/li&gt;
&lt;li&gt;Some of the inheritance extends to other cookbooks, like &lt;a href="https://github.com/poise/poise-languages"&gt;poise-languages&lt;/a&gt; and &lt;a href="https://github.com/poise/poise"&gt;poise&lt;/a&gt;.&lt;br&gt;
    This is even more annoying because you now have multiple libraries/artifact to troubleshoot (so more lines in your Berksfile, more repos to clone etc), and it's unclear which logic arives from where.  &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some of the methods used are "magical"&lt;br&gt;
    By "magical" I mean methods that aren't defined in the normal way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;methodname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;# Logic here&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Instead, they are created by using &lt;a href="http://apidock.com/ruby/Module/define_method"&gt;define_method&lt;/a&gt; or &lt;a href="http://ruby-doc.org/core-2.1.0/BasicObject.html#method-i-method_missing"&gt;method_missing&lt;/a&gt;, and can't be easily found in the files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some resources automatically backreference other resources.&lt;br&gt;
    I'm talking about this usage pattern:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;python_runtime&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;python_virtualenv&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/opt/myapp/.env&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# Uses the `python_runtime` defined above automatically&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is done by looking at the resource collection and looking for the last item matching some definition (as far as I could understand).&lt;br&gt;
While this might seem neat, in order for this method to work you have to reorder your code to match the "proper" way. For instance, you can't separate the runtime and the venv to diffent recipes, because then some other runtime (even from a different cookbook) might be declared and be the one discovered by the virtualenv resource.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All of these facts, in addition to missing documentation, add up to make the cookbook code really difficult to understand or troubleshoot.&lt;br&gt;
On one hand, the reosurces included in this cookbook should be pretty simple. For instance, the package resource should install a python package (a single command), only if it's not already installed (another command).&lt;br&gt;
On the other hand, I wrestled with thie Poise-Python cookbook for 3 days and still couldn't get it to do what the original Python cookbook did. It might be because I have a unique use case (custom-compiled Python), but it's still furstrating.&lt;/p&gt;
&lt;h3&gt;Enter &lt;a href="https://supermarket.chef.io/cookbooks/backslasher-python"&gt;backslasher-python&lt;/a&gt; (&lt;a href="https://github.com/BackSlasher/chef-backslasher-python"&gt;source&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;Eventually, I chose to re-implement the Python cookbook by myself.&lt;br&gt;
I made sure to choose a different namespace for the resources (&lt;code&gt;backslasher_python_*&lt;/code&gt;), so it won't interfere with the existing usage of the Python cookbook (external cookbooks etc).&lt;br&gt;
The new cookbook is written as plainly as possible. &lt;del&gt;Its only vice is using the new custom resource syntax&lt;/del&gt; (Edit: Moved back to old syntax. &lt;code&gt;comapt_resource&lt;/code&gt; breaks so easily).&lt;/p&gt;
&lt;p&gt;For instance, this is the entire &lt;code&gt;backslasher_python_virtualenv&lt;/code&gt; definition (34 lines of code):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name_attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:interpreter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
&lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:owner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:user_valid_regex&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:group&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:group_valid_regex&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;# Additional options for venv initialization&lt;/span&gt;

&lt;span class="n"&gt;default_action&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exists?&lt;/span&gt;
  &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exist?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;directory?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/bin/activate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;nr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="c1"&gt;# me as new_resource&lt;/span&gt;
  &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;
    &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;execute&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;virtualenv &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--python=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;interpreter&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;interpreter&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;
    &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;
    &lt;span class="n"&gt;environment&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HOME&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;

    &lt;span class="n"&gt;not_if&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists?&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:delete&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:delete&lt;/span&gt;
    &lt;span class="n"&gt;recursive&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This code is not dependent on any external code (except for the Chef core logic), and is pretty easy to read.&lt;br&gt;
Compare it to the &lt;a href="https://github.com/poise/poise-python/blob/master/lib/poise_python/resources/python_virtualenv.rb"&gt;Poise-Python implementation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Personally, I've successfully replaced the Python cookbook with my Backslasher-Python cookbook in all of my internal uses and consider it a success. I'm curious to see what will happen in public cookbooks.&lt;/p&gt;</content><category term="FOSS"></category><category term="Ruby"></category><category term="Python"></category><category term="Chef"></category></entry><entry><title>Chef Custom Resources - Missing Documentation</title><link href="https://blog.backslasher.net/chef-custom-resources.html" rel="alternate"></link><published>2016-01-25T16:00:00+01:00</published><updated>2016-01-25T16:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-01-25:/chef-custom-resources.html</id><summary type="html">&lt;p&gt;The new Chef documentation for &lt;a href="https://docs.chef.io/custom_resources.html"&gt;Custom Resources&lt;/a&gt; is pretty lackluster.&lt;br&gt;
This is probably because they're too busy making awesome stuff, but I still needed to learn some stuff the hard way.&lt;br&gt;
Thought I'd share them.  &lt;/p&gt;
&lt;h3&gt;The basics&lt;/h3&gt;
&lt;p&gt;There is no longer a "state-only" resource and an implementing provider. Instead, there …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The new Chef documentation for &lt;a href="https://docs.chef.io/custom_resources.html"&gt;Custom Resources&lt;/a&gt; is pretty lackluster.&lt;br&gt;
This is probably because they're too busy making awesome stuff, but I still needed to learn some stuff the hard way.&lt;br&gt;
Thought I'd share them.  &lt;/p&gt;
&lt;h3&gt;The basics&lt;/h3&gt;
&lt;p&gt;There is no longer a "state-only" resource and an implementing provider. Instead, there is a single "resource" that contains both state and behaviour.&lt;br&gt;
A lot of terminology has been modified, partially to differentiate the new "custom resource" from the old "lightweight resource-provider" (LWRP) class.&lt;br&gt;
&lt;code&gt;attribute&lt;/code&gt; is now &lt;code&gt;property&lt;/code&gt; and the syntax is slightly different, but this is documented.&lt;br&gt;
If you want to use the "custom resource" paradigm on clients lower than Chef 12.5, you could depend on the 'compat_resource' cookbook and it'll work.&lt;/p&gt;
&lt;h3&gt;Actions are in the resource's context&lt;/h3&gt;
&lt;p&gt;Actions are part of the resource (and not the provider), so &lt;code&gt;self&lt;/code&gt; inside the action context refers to the resource.&lt;br&gt;
This means that this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# The LWRP way - Will not work in custom resources&lt;/span&gt;
&lt;span class="c1"&gt;# Resource&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:path&lt;/span&gt;

&lt;span class="c1"&gt;# Provider&lt;/span&gt;
&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:bla&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Path is &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One should use this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:path&lt;/span&gt;
&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:bla&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Path is &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;load_current_value&lt;/h3&gt;
&lt;p&gt;This is a new way for generating the "existing" resource (to see if you need to do anything).&lt;br&gt;
You define a code block, using something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;load_current_value&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# DETECTION LOGIC HERE&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This code is promoted into a method:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# lib/chef/resource.rb L1135&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;load_current_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;load_block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;define_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:load_current_value!&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;load_block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And called by Chef (more details below):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# lib/chef/resource/action_class.rb L31&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;load_current_resource&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:load_current_value!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# dup the resource and then reset desired-state properties.&lt;/span&gt;
    &lt;span class="n"&gt;current_resource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dup&lt;/span&gt;

    &lt;span class="c1"&gt;# We clear desired state in the copy, because it is supposed to be actual state.&lt;/span&gt;
    &lt;span class="c1"&gt;# We keep identity properties and non-desired-state, which are assumed to be&lt;/span&gt;
    &lt;span class="c1"&gt;# &amp;quot;control&amp;quot; values like `recurse: true`&lt;/span&gt;
    &lt;span class="n"&gt;current_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;desired_state?&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;identity?&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name_property?&lt;/span&gt;
        &lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_resource&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# Call the actual load_current_value! method. If it raises&lt;/span&gt;
    &lt;span class="c1"&gt;# CurrentValueDoesNotExist, set current_resource to `nil`.&lt;/span&gt;
    &lt;span class="k"&gt;begin&lt;/span&gt;
      &lt;span class="c1"&gt;# If the user specifies load_current_value do |desired_resource|, we&lt;/span&gt;
      &lt;span class="c1"&gt;# pass in the desired resource as well as the current one.&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;current_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:load_current_value!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arity&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;current_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_current_value!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;current_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_current_value!&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Exceptions&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;CurrentValueDoesNotExist&lt;/span&gt;
      &lt;span class="n"&gt;current_resource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="vi"&gt;@current_resource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;current_resource&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This method:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clones the resource&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Resets all fields that aren't:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Non "desired state" (&lt;code&gt;desired_state:false&lt;/code&gt;), meaning they describe the way to operate rather than a property of the resource&lt;/li&gt;
&lt;li&gt;"Identity" properties (&lt;code&gt;identity: true&lt;/code&gt;), meaning they help locate the resource&lt;/li&gt;
&lt;li&gt;"Name" properties (&lt;code&gt;name_property: true&lt;/code&gt;), meaning they default to the resource's name (like &lt;code&gt;path&lt;/code&gt; in the &lt;code&gt;directory&lt;/code&gt; resource) so it doesn't make sense to initialize them to another value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Brackets contain the decorator used to mark an attribute that way.&lt;br&gt;
All other fields are cleared so that the detection code can populate them with "current" values.&lt;br&gt;
One could read &lt;code&gt;lib/chef/property.rb&lt;/code&gt; to see some of the attribute decorators and their documentation.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Executes the provided code block in the current resource's context (now defined as &lt;code&gt;load_current_value!&lt;/code&gt;).&lt;br&gt;
    If this block accepts any arguments, pass it the resource provided by the user.&lt;br&gt;
    This block is run in the "current" resource's context.&lt;br&gt;
    If it throws a &lt;code&gt;CurrentValueDoesNotExist&lt;/code&gt; exception (done by calling &lt;code&gt;current_value_does_not_exist!&lt;/code&gt;), the discovery process is aborted and there is no "current" resource.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So in short:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You're supplying a code block to discover the current state of the resource&lt;/li&gt;
&lt;li&gt;This block is executed in the context of the "current" resoruce&lt;/li&gt;
&lt;li&gt;It starts with the Identity/Name/Non-desired-state properties initialized to the value in the "desired" state of the resource&lt;/li&gt;
&lt;li&gt;It's up to this block to either populate the remaining fields with the current value, or call &lt;code&gt;current_value_does_not_exist!&lt;/code&gt; if the resource has no current state (e.g. a package that isn't currently installed)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;current_value instead of current_resource&lt;/h3&gt;
&lt;p&gt;Because of the &lt;code&gt;resource -&amp;gt; value&lt;/code&gt; terminology changes, the current state of the resource is now accessed by &lt;code&gt;current_value&lt;/code&gt; instead of &lt;code&gt;current_resource&lt;/code&gt; like in the past.&lt;br&gt;
This object can be &lt;code&gt;nil&lt;/code&gt; (if there is no current state for the resource) or a copy of this resource, populated with values from the &lt;code&gt;load_current_value&lt;/code&gt; block&lt;/p&gt;</content><category term="FOSS"></category><category term="Ruby"></category><category term="Chef"></category><category term="Scripts"></category></entry><entry><title>Parsing AWS billing</title><link href="https://blog.backslasher.net/aws-billing.html" rel="alternate"></link><published>2016-01-23T12:00:00+01:00</published><updated>2016-01-23T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2016-01-23:/aws-billing.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I never understood the AWS billing very well and happily left it to my CTO.&lt;br&gt;
A couple of days ago, however, my CTO secretly told me he's mainly interested in learning 2 things from those bills:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How much are we paying for every component of the application?&lt;/li&gt;
&lt;li&gt;How …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I never understood the AWS billing very well and happily left it to my CTO.&lt;br&gt;
A couple of days ago, however, my CTO secretly told me he's mainly interested in learning 2 things from those bills:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How much are we paying for every component of the application?&lt;/li&gt;
&lt;li&gt;How much are we paying for every type of AWS service?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With that knowledge came the task of helping him extract that information from the billing statements.&lt;br&gt;
Being a strong believer in self-service, I crafted some scripts to generate a CSV to answer both questions (and possible intersections, which are also interesting).&lt;/p&gt;
&lt;h2&gt;Some prepwork&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Make sure your different AWS resources (EC2 VMs, S3 buckets, CloudFront distributions...) are tagged with the same tag, describing their "applicative" component (e.g. &lt;code&gt;Component: FrontEnd-PHP&lt;/code&gt;). This tag will help us aggregate the lines in the detailed AWS billing reports (see below)&lt;/li&gt;
&lt;li&gt;Include this tag under &lt;a href="https://console.aws.amazon.com/billing/home?region=us-east-1#/preferences/tags"&gt;"Cost Allocation Tags"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using the &lt;a href="https://console.aws.amazon.com/billing/home?region=us-east-1#/preferences"&gt;preferences page&lt;/a&gt;, set up a bucket and enable "Cost allocation report" (contains billing with our selected tags) and "Detailed billing report" (contains billing per resource). We'll use these reports as our data source&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Pivoting&lt;/h2&gt;
&lt;h3&gt;Abstract&lt;/h3&gt;
&lt;p&gt;If you take a look at the "Cost allocation report" (&lt;code&gt;aaaaaaaaaaaa-aws-cost-allocation-yyyy-mm.csv&lt;/code&gt;), you'll find these columns that are of interest:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"user:TAGNAME", correlating with the tag we chose earlier (e.g. &lt;code&gt;user:Component&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;"UsageType", succinctly describing the type of usage (e.g. "EU-SAE1-AWS-In-Bytes")&lt;/li&gt;
&lt;li&gt;"TotalCost", containing the cost (in USD for me) of that usage of that resource&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Pivot_table"&gt;Pivoting&lt;/a&gt; these columns should give me a matrix I can pass the executives. I chose this form:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;| \              | UsageType     |
| user:Component | sum:TotalCost |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So the columns will be the different usage types, the rows will be the different components, and the values will be the cost of this specific combination (the "sum" is just a formality, since every combination should appear only once).&lt;/p&gt;
&lt;h3&gt;Scripting&lt;/h3&gt;
&lt;p&gt;One can do that pivot manually (using LibreOffice Calc / Microsoft Excel, for instance), but I like scripts.&lt;br&gt;
I chose to use the Pandas library in Python because it's built for stuff like this (I believe a vanilla Python solution is possible but will take more time).&lt;br&gt;
This is a basic script for pivoting our data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user:Component&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;COST_ALOCATION.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;skiprows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# First row is some warning about tags not included by default&lt;/span&gt;
&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UsageType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;???&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;???&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pivot_table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UsageType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;TotalCost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;aggfunc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;margins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# for newer versions of pandas: raw.pivot_table(index=[tag_name], columns=[&amp;#39;UsageType&amp;#39;], values=[&amp;#39;TotalCost&amp;#39;], aggfunc=numpy.sum, margins=True)&lt;/span&gt;
&lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OUT_FILE.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Things to note&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;I'm using &lt;code&gt;fillna&lt;/code&gt; to replace "empty" items in selected columns (e.g. lines with the component tag empty) with "???". This is important as Pandas discards such rows, but still includes them for its subtotals&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;numpy.sum&lt;/code&gt; is somehow better than using &lt;code&gt;sum&lt;/code&gt; as an aggregator. If I don't use it, I don't get a grand total&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Drilldown&lt;/h2&gt;
&lt;p&gt;Say you have a cell that costs you more than you think is proper (for instance, "queue-manager"/"EU-SAE1-AWS-In-Bytes") and you want to analyze it.&lt;br&gt;
The "Detailed billing report with resources and tags" (&lt;code&gt;aaaaaaaaaaaa-aws-billing-detailed-line-items-with-resources-and-tags-yyyy-mm.csv.zip&lt;/code&gt;), which is also located in our billing bucket (although zipped) contains the billing at an item-level detail, along with our tags.&lt;br&gt;
You can try analyzing this report manually (e.g. using Excel), but since it's a huge file it will take some time.&lt;br&gt;
Using the same library, this is how we extract the values for a specific pivot cell (Component/Usage combination):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;
&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user:Component&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;tag_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ExpensiveComonent&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;usage_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ExpensiveUsage&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DETAILED.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;filtered&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;tag_value&lt;/span&gt;&lt;span class="p"&gt;][[&lt;/span&gt;&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ResourceId&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UsageType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Cost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

&lt;span class="c1"&gt;# Optionally filter by non-zero costs&lt;/span&gt;
&lt;span class="n"&gt;filtered&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Cost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OUT_FILE.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Other sugggestions&lt;/h2&gt;
&lt;p&gt;These are some other reports I did that might be interesting&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pivot by resource id / usage type in a specific component:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user:Component&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;tag_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ExpensiveComonent&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DETAILED.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;filtered&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;tag_value&lt;/span&gt;&lt;span class="p"&gt;][[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ResourceId&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UsageType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Cost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ResourceId&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;???&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pivot_table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ResourceId&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UsageType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Cost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;aggfunc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;margins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Newer pandas - see above&lt;/span&gt;
&lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OUT_FILE.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pivot component/usage type, use regex to select usage type, only show cells that cost money, and show Usage amount instead of cost&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user:Component&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;usage_regex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.*-Out-Bytes$&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;COST_ALOCATION.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;skiprows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;raw_nonna&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UsageType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# Drop lines without usage type&lt;/span&gt;
&lt;span class="n"&gt;filtered&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw_nonna&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;raw_nonna&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UsageType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;usage_regex&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;???&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;filtered&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Cost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;pivot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filtered&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pivot_table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tag_name&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UsageType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Rate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UsageQuantity&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;aggfunc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;margins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#TODO complete&lt;/span&gt;
&lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OUT_FILE.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;</content><category term="FOSS"></category><category term="AWS"></category><category term="Billing"></category><category term="Scripts"></category><category term="Python"></category></entry><entry><title>Managing Jenkins API Tokens</title><link href="https://blog.backslasher.net/jenkins-token.html" rel="alternate"></link><published>2015-12-31T00:00:00+01:00</published><updated>2015-12-31T00:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-12-31:/jenkins-token.html</id><summary type="html">&lt;h2&gt;The problem&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Authenticating+scripted+clients"&gt;Api Tokens&lt;/a&gt; are like user passwords, except they are always managed by Jenkins (even if you're using an external authentication scheme), and can only be used for "API" actions (e.g. using &lt;code&gt;curl&lt;/code&gt;).&lt;br&gt;
The storage scheme of these tokens is a little weird - the stored value is hashed …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The problem&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Authenticating+scripted+clients"&gt;Api Tokens&lt;/a&gt; are like user passwords, except they are always managed by Jenkins (even if you're using an external authentication scheme), and can only be used for "API" actions (e.g. using &lt;code&gt;curl&lt;/code&gt;).&lt;br&gt;
The storage scheme of these tokens is a little weird - the stored value is hashed and then compared to the user-submitted input (usually the process goes the other way around):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// https://github.com/jenkinsci/jenkins/blob/master/core/src/main/java/jenkins/security/ApiTokenProperty.java#L111&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;matchesPassword&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;  &lt;span class="nf"&gt;getApiTokenInsecure&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// https://github.com/jenkinsci/jenkins/blob/master/core/src/main/java/jenkins/security/ApiTokenProperty.java#L99&lt;/span&gt;
&lt;span class="nd"&gt;@Nonnull&lt;/span&gt;
&lt;span class="nd"&gt;@Restricted&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NoExternalUse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="cm"&gt;/*package*/&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;getApiTokenInsecure&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apiToken&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getPlainText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Util&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getDigestOf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Jenkins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInstance&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSecretKey&lt;/span&gt;&lt;span class="o"&gt;()+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getId&lt;/span&gt;&lt;span class="o"&gt;())))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// if the current token is the initial value created by pre SECURITY-49 Jenkins, we can&amp;#39;t use that.&lt;/span&gt;
        &lt;span class="c1"&gt;// force using the newer value&lt;/span&gt;
        &lt;span class="n"&gt;apiToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Secret&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;API_KEY_SEED&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;mac&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getId&lt;/span&gt;&lt;span class="o"&gt;()));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Util&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getDigestOf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The implication of this is that in order to modify the API token, it's not enough to know the token, but rather the "seed" used to calculate it. One could say that the UI/API doesn't offer a way to set the token directly anyway (only to &lt;a href="https://github.com/jenkinsci/jenkins/blob/master/core/src/main/java/jenkins/security/ApiTokenProperty.java#L148"&gt;generate a random one&lt;/a&gt;), but I still don't see the logic behind this.&lt;br&gt;
Because of the storage scheme, the normal "ensure password is XYZ" action one would expect is split into 2 actions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calculate the token from the current seed and compare it to our required token, and if there's a mismatch, get angry (provided the required token)&lt;/li&gt;
&lt;li&gt;Compare the seed to our required seed, and modify it if it mismatches (provided the required seed)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don't want my clients to depend on the hashing method done by Jenkins, so I have to present them with the token.&lt;br&gt;
I also want to be able to reset the token if it diverges (rather than throw a tantrum), so I have to keep the seed.
So sadly I have to keep both.  &lt;/p&gt;
&lt;h2&gt;The solution&lt;/h2&gt;
&lt;p&gt;I created this Groovy script to do both tasks (modify the seed if needed, and ensure it matches the token):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;???&amp;#39;&lt;/span&gt;
&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;???&amp;#39;&lt;/span&gt;
&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;???&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;// Leave null if unkown&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hudson.model.User&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;jenkins.security.ApiTokenProperty&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hudson.util.Secret&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Get the actual token&lt;/span&gt;
&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tokprop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getProperty&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiTokenProperty&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;actual_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getApiTokenInsecure&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// Get pissed if not equal&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;actual_token&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Try to modify seed&lt;/span&gt;
    &lt;span class="n"&gt;tokprop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;apiToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Secret&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// Check that seed will yield required token&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;tokprop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getApiTokenInsecure&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt;
      &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Exception&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sprintf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Token mismatch, seed wont cause token to become required token\\ncurrent key:%s\\nresulting key:%s&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;actual_token&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tokprop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getApiTokenInsecure&lt;/span&gt;&lt;span class="o"&gt;()]))&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="c1"&gt;// Can&amp;#39;t set a better token, just complain&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Exception&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sprintf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Mismatching tokens. Actual token:%s&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;actual_token&lt;/span&gt;&lt;span class="o"&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I actually implemented this as a LWRP in Chef using the &lt;code&gt;jenkins_script&lt;/code&gt; resource found in the &lt;a href="https://github.com/chef-cookbooks/jenkins"&gt;Jenkins cookbook&lt;/a&gt;. If the implementation is interesting, leave me a comment and I might add it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 20.02.16&lt;/strong&gt;: Here is my current implementation&lt;/p&gt;
&lt;h3&gt;Chef implementation&lt;/h3&gt;
&lt;p&gt;resources/jenkins_key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;actions&lt;/span&gt; &lt;span class="ss"&gt;:set&lt;/span&gt;
&lt;span class="n"&gt;default_action&lt;/span&gt; &lt;span class="ss"&gt;:set&lt;/span&gt;

&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;kind_of&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name_attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;kind_of&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;# We can&amp;#39;t set this, only verify it matches&lt;/span&gt;
                                               &lt;span class="c1"&gt;# This is because the actual key is being realtime-hashed from some string&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="ss"&gt;:raw_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;kind_of&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt; &lt;span class="c1"&gt;# Used to allow setting the new key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;providers/jenkins_key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;use_inline_resources&lt;/span&gt;

&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:set&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;

  &lt;span class="n"&gt;jenkins_script&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ensure_key&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class="dl"&gt;EOH&lt;/span&gt;
&lt;span class="sh"&gt;    def username = &amp;#39;#{new_resource.user}&amp;#39;&lt;/span&gt;
&lt;span class="sh"&gt;    def wanted_key = &amp;#39;#{new_resource.key}&amp;#39;&lt;/span&gt;
&lt;span class="sh"&gt;    def raw_key = &amp;#39;#{new_resource.raw_key.to_s}&amp;#39;&lt;/span&gt;

&lt;span class="sh"&gt;    import hudson.model.User;&lt;/span&gt;
&lt;span class="sh"&gt;    import jenkins.security.ApiTokenProperty;&lt;/span&gt;
&lt;span class="sh"&gt;    import hudson.util.Secret;&lt;/span&gt;

&lt;span class="sh"&gt;    // Get the actual key&lt;/span&gt;
&lt;span class="sh"&gt;    u = User.get(username)&lt;/span&gt;
&lt;span class="sh"&gt;    tok =  u.getProperty(ApiTokenProperty.class)&lt;/span&gt;
&lt;span class="sh"&gt;    actual_key = tok.getApiTokenInsecure()&lt;/span&gt;

&lt;span class="sh"&gt;    // Get pissed if not equal&lt;/span&gt;
&lt;span class="sh"&gt;    if (wanted_key != actual_key)&lt;/span&gt;
&lt;span class="sh"&gt;      if (raw_key) {&lt;/span&gt;
&lt;span class="sh"&gt;        old_key = tok.getApiTokenInsecure()&lt;/span&gt;
&lt;span class="sh"&gt;        tok.apiToken = Secret.fromString(raw_key)&lt;/span&gt;
&lt;span class="sh"&gt;        // Check that raw key will yield required key&lt;/span&gt;
&lt;span class="sh"&gt;        if (wanted_key == tok.getApiTokenInsecure())&lt;/span&gt;
&lt;span class="sh"&gt;          u.save()&lt;/span&gt;
&lt;span class="sh"&gt;        else&lt;/span&gt;
&lt;span class="sh"&gt;          throw new Exception(sprintf(&amp;#39;Key mismatch, raw_key wont cause wanted_key to become actualy key\\ncurrent key:%s\\nresulting key:%s&amp;#39;,[actual_key, tok.getApiTokenInsecure()]))&lt;/span&gt;
&lt;span class="sh"&gt;      }&lt;/span&gt;
&lt;span class="sh"&gt;      else&lt;/span&gt;
&lt;span class="sh"&gt;        // Can&amp;#39;t set a better key, just complain&lt;/span&gt;
&lt;span class="sh"&gt;        throw new Exception(sprintf(&amp;#39;Mismatching keys. Actual key:%s&amp;#39;, [actual_key]))&lt;/span&gt;
&lt;span class="dl"&gt;    EOH&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Jenkins"></category><category term="Security"></category><category term="Scripts"></category><category term="Groovy"></category></entry><entry><title>Open-Gridview - the FOSS Out-Gridview</title><link href="https://blog.backslasher.net/open-gridview.html" rel="alternate"></link><published>2015-12-13T00:00:00+01:00</published><updated>2015-12-13T00:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-12-13:/open-gridview.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I've been a Microsoft SysAdmin for a long time before switching for Linux. During which, I scripted a lot in PowerShell.&lt;br&gt;
PowerShell has several "output" functions like &lt;code&gt;Out-File&lt;/code&gt; (which passes the input to a file), &lt;code&gt;Out-Null&lt;/code&gt; etc.&lt;br&gt;
One of these functions was &lt;a href="https://technet.microsoft.com/en-us/library/hh849920.aspx"&gt;Out-Gridview&lt;/a&gt; which tabularizes its input and …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I've been a Microsoft SysAdmin for a long time before switching for Linux. During which, I scripted a lot in PowerShell.&lt;br&gt;
PowerShell has several "output" functions like &lt;code&gt;Out-File&lt;/code&gt; (which passes the input to a file), &lt;code&gt;Out-Null&lt;/code&gt; etc.&lt;br&gt;
One of these functions was &lt;a href="https://technet.microsoft.com/en-us/library/hh849920.aspx"&gt;Out-Gridview&lt;/a&gt; which tabularizes its input and displays it in an interactive table:&lt;br&gt;
&lt;img alt="out-gridview" src="https://blog.backslasher.net/images/open-gridview/out-gridview.jpg"&gt;&lt;br&gt;
You can see how easy it is to tabulate your objects.  &lt;/p&gt;
&lt;p&gt;The advantage might be hard to explain to hardcore *nix CLI users - they might scoff and say that you can filter using &lt;code&gt;grep&lt;/code&gt;, sort using &lt;code&gt;sort&lt;/code&gt; and extract columns using &lt;code&gt;awk&lt;/code&gt;, and that all output is beautiful in its own way.&lt;br&gt;
However, since switching to Linux I've had numerous incidents of either trying to format my output so that it is both readable and parsable, or piping output to some filter and regret filtering it. How I missed being able to pass the output to &lt;code&gt;Out-Gridview&lt;/code&gt; and being able to manipulate it via GUI.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;I've decided that Out-Gridview is a basic enough problem so I can tackle it, and also writing UI is fun (as if), so I implemented it via GTK and Python.&lt;br&gt;
The result is the package &lt;a href="https://pypi.python.org/pypi/opengridview"&gt;opengridview&lt;/a&gt;.  &lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;For regular usage, use the pip package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pip install opengridview
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For modification and hacking, set up a venv in the git repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/BackSlasher/opengridview .
virtualenv . --system-site-packages
. bin/activate
pip install -e .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Basic usage&lt;/h3&gt;
&lt;p&gt;To use it, pipe your output into &lt;code&gt;ogv&lt;/code&gt; (or &lt;code&gt;open-gridview&lt;/code&gt;), optionally specifying how to parse each row (the default is "autosplit") and how the columns are named (usually the first row is taken as a header row).&lt;br&gt;
&lt;code&gt;ogv&lt;/code&gt; can accept regular files, but it's more interesting to pipe streams into it.&lt;br&gt;
Multiple files can be passed (causing multiple windows to appear) by using bash's &lt;a href="http://tldp.org/LDP/abs/html/process-sub.html"&gt;process substitution&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ogv &amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;ls -l /home/bob &lt;span class="p"&gt;|&lt;/span&gt; tail -n+2&lt;span class="o"&gt;)&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;ls -l /var &lt;span class="p"&gt;|&lt;/span&gt; tail -n+2&lt;span class="o"&gt;)&lt;/span&gt; --headers permissions,links,user,group,size,mod-month,mod-day,mod-time,name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Parsers&lt;/h3&gt;
&lt;h4&gt;autosplit&lt;/h4&gt;
&lt;p&gt;Emulates perl's &lt;code&gt;autosplit&lt;/code&gt;, using &lt;code&gt;re.split&lt;/code&gt; and a delimiter (defaults to &lt;code&gt;\s+&lt;/code&gt;)&lt;/p&gt;
&lt;h4&gt;csv&lt;/h4&gt;
&lt;p&gt;Uses the &lt;code&gt;csv&lt;/code&gt; module to prase every line. Configurable delimeter (defaults to &lt;code&gt;,&lt;/code&gt;)&lt;/p&gt;
&lt;h4&gt;line_json&lt;/h4&gt;
&lt;p&gt;Treats each line as a separate JSON object&lt;/p&gt;
&lt;h3&gt;Neat features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The autosplit parser uses &lt;code&gt;re.split&lt;/code&gt; to create the columns. This method honors capturing groups inside the separator, meaning you can use the separator as a Regex parser, and discard the "split" columns using empty column headers, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip list &lt;span class="p"&gt;|&lt;/span&gt; ogv -s &lt;span class="s1"&gt;&amp;#39;^([^ ]*) \(([^ ]*)\)$&amp;#39;&lt;/span&gt; --headers ,name,version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(see below for screenshot of the result)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I implemented &lt;code&gt;Ctrl+c&lt;/code&gt; (inside the GUI) to copy selected rows as CSV text, in order to ease copying data into spreadsheet applications (a common action for me when handling tabulated data)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example use cases&lt;/h2&gt;
&lt;h3&gt;Filesystem stuff&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls -l &lt;span class="p"&gt;|&lt;/span&gt; tail -n+2 &lt;span class="p"&gt;|&lt;/span&gt; ogv --headers permissions,links,user,group,size,mod-month,mod-day,mod-time,name &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
du -h &lt;span class="p"&gt;|&lt;/span&gt; ogv --separator &lt;span class="s1"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt; --headers size,path &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="nb"&gt;wait&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/open-gridview/filesystem.png"&gt;&lt;/p&gt;
&lt;h3&gt;Show all packages installed&lt;/h3&gt;
&lt;p&gt;Preset the filter to "python"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;aptitude search ~i --disable-columns -F &lt;span class="s1"&gt;&amp;#39;%p,%v,%t&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; ogv -p csv --headers name,version,source --filter python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/open-gridview/aptitude.png"&gt;&lt;/p&gt;
&lt;h3&gt;Pip package list&lt;/h3&gt;
&lt;p&gt;Custom headers, column extraction using capturing groups&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip list &lt;span class="p"&gt;|&lt;/span&gt; ogv -s &lt;span class="s1"&gt;&amp;#39;^([^ ]*) \(([^ ]*)\)$&amp;#39;&lt;/span&gt; --headers ,name,version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/open-gridview/pip.png"&gt;&lt;/p&gt;
&lt;h3&gt;Multiple module search&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; platform name version
  pip list &lt;span class="p"&gt;|&lt;/span&gt; perl -ne &lt;span class="s1"&gt;&amp;#39;print &amp;quot;python $_&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  gem list &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;(&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; perl -ne &lt;span class="s1"&gt;&amp;#39;print &amp;quot;ruby $_&amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; ogv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/open-gridview/pip-gem.png"&gt;&lt;/p&gt;
&lt;h2&gt;Interesting bits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I chose to implement Open-Gridview on GTK because I'm running Gnome&lt;/li&gt;
&lt;li&gt;I chose Python (as opposed to Ruby / Perl) because Python comes preinstalled on most major Linux distros&lt;/li&gt;
&lt;li&gt;Since I chose &lt;a href="https://wiki.gnome.org/action/show/Projects/PyGObject?action=show&amp;amp;redirect=PyGObject"&gt;PyGObject&lt;/a&gt; as my GTK library, I'm annoyingly missing some features, like:&lt;ul&gt;
&lt;li&gt;Writing custom data to the clipboard&lt;/li&gt;
&lt;li&gt;Directly connecting functions to key shortcuts (I'm currently using menu items as a middleman)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Gtk.Application&lt;/code&gt; class forces "single-instance" applications on you (think firefox). Although there was &lt;a href="https://mail.gnome.org/archives/gtk-devel-list/2011-February/msg00091.html"&gt;some discussion&lt;/a&gt; about this decision, it seems mandated. I had to work around this by managing multiple &lt;code&gt;Gtk.Window&lt;/code&gt; instances by myself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Some Python utilities (e.g. &lt;code&gt;csv.reader&lt;/code&gt;) use internal buffering when reading streams. This means that using them directly caused delay when parsing a live stream (and not a file). I'm currently reading one line at a time, then feeding it to a parser. This is also why all current parsers are line-based&lt;/li&gt;
&lt;li&gt;I found no easy/elegant way to interrupt streams while they were waiting for input. Eventually I found about "daemon threads", which are threads that don't justify keeping the process alive (if only daemon threads are left, the process is closed)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;TODOs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add item selection functionality (like out-gridview's &lt;code&gt;OutputMode&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Support advanced filtering (e.g. regex, specific columns)&lt;/li&gt;
&lt;li&gt;Support hiding and re-ordering columns&lt;/li&gt;
&lt;li&gt;Add a progress bar if the stream isn't closed (EOFed)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please let me know if you find this useful.&lt;/p&gt;</content><category term="FOSS"></category><category term="Python"></category><category term="PowerShell"></category><category term="Scripts"></category></entry><entry><title>Using a global lock in Chef</title><link href="https://blog.backslasher.net/chef-lock.html" rel="alternate"></link><published>2015-12-03T18:00:00+01:00</published><updated>2015-12-03T18:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-12-03:/chef-lock.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Our dev team is currently using a &lt;a href="https://blog.twitter.com/2010/announcing-snowflake"&gt;Snowflake&lt;/a&gt;-like ID generation scheme that looks like this:&lt;br&gt;
&lt;img alt="snowflake diagram" src="https://blog.backslasher.net/images/chef-lock/snowflake.jpg"&gt;&lt;br&gt;
(Diagram by Elad Rosenhim, architect and companion at Dynamic Yield. See &lt;a href="https://www.dynamicyield.com/2015/05/apache-hbase-for-the-win-2/"&gt;his post&lt;/a&gt; about distributed keys and how to survive managing an HBase cluster)  &lt;/p&gt;
&lt;p&gt;Those familiar with MongoDB might notice this structure …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Our dev team is currently using a &lt;a href="https://blog.twitter.com/2010/announcing-snowflake"&gt;Snowflake&lt;/a&gt;-like ID generation scheme that looks like this:&lt;br&gt;
&lt;img alt="snowflake diagram" src="https://blog.backslasher.net/images/chef-lock/snowflake.jpg"&gt;&lt;br&gt;
(Diagram by Elad Rosenhim, architect and companion at Dynamic Yield. See &lt;a href="https://www.dynamicyield.com/2015/05/apache-hbase-for-the-win-2/"&gt;his post&lt;/a&gt; about distributed keys and how to survive managing an HBase cluster)  &lt;/p&gt;
&lt;p&gt;Those familiar with MongoDB might notice this structure is very similar to &lt;a href="https://docs.mongodb.org/manual/reference/object-id/"&gt;MongoDB's ObjectId&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;This ID generator has several advantages over sequential generation, mainly:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Partitioning-friendly:&lt;br&gt;
    Because the most significant bits are rotated frequently, consecutive IDs will go to different partitions, avoiding a "hot-zone" problem.&lt;/li&gt;
&lt;li&gt;Independent generation:&lt;br&gt;
    Every machine can generate IDs by itself, meaning there's no single point of failure (as opposed to using MySQL sequences for ID generation)&lt;/li&gt;
&lt;li&gt;Packed metadata:&lt;br&gt;
    The key allows including 4 bytes of arbitrary metadata (e.g. user's country of origin), which can be later inferred from the key, in addition to the creation date. This metadata is "free" (not requiring an auxilary lookup).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;The problematic bit for me&lt;/strong&gt; is the need to assign a unique ID for every machine (to avoid machines creating duplicate keys).&lt;br&gt;
As you can see from the diagram, I have 2 bytes allocated for this, which might seem like a lot (255 different machines), but this is not enough space to just put unique machine identifiers I already have (like FQDN, SSH fingerprint, EC2 instance ID).&lt;br&gt;
I therefore needed to tell Chef to pick a machine ID that no other node has and use that.&lt;br&gt;
Naively one could do something like this in a Chef recipe:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;machine&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_a&lt;/span&gt; &lt;span class="c1"&gt;# Total range allowed&lt;/span&gt;
  &lt;span class="c1"&gt;# IDs in used, extracted using Chef search:&lt;/span&gt;
  &lt;span class="n"&gt;used_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;machine_id:*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;filter_result&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;machine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;available_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;range&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;used_ids&lt;/span&gt; &lt;span class="c1"&gt;# Deduce remaining pool&lt;/span&gt;
  &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No free ids&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;available_ids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;any?&lt;/span&gt; &lt;span class="c1"&gt;# Upset if none&lt;/span&gt;
  &lt;span class="n"&gt;my_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;available_ids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;
  &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;machine&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;my_id&lt;/span&gt; &lt;span class="c1"&gt;# save it&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;, several nodes could be running the same code at the same time, and since Chef offers no concurrency control, those nodes could get identical &lt;code&gt;available_ids&lt;/code&gt; and choose the same &lt;code&gt;my_id&lt;/code&gt;, leading to nodes with duplicate machine IDs, meaning they might create duplicate user IDs.&lt;/p&gt;
&lt;h2&gt;The solution&lt;/h2&gt;
&lt;p&gt;I initially thoguht about outsourcing the ID generation to a single-threaded HTTP application to eliminate any concurrency issues.&lt;br&gt;
However, this application would have to hold all of the assigned IDs (as opposed to them being stored in the Chef server), and I find stateful applications much harder to maintain (backups, scaling etc).&lt;br&gt;
Eventually, I thought about keeping the code inside a Chef recipe, but rely on an external service to ensure concurrency.&lt;br&gt;
I found the &lt;a href="https://github.com/thefab/restful-distributed-lock-manager"&gt;RDLM&lt;/a&gt; (Restful Distributed Lock Manager) which is a simple global lock holder, where locks are acquired and released via HTTP requests, which was perfect for me.  &lt;/p&gt;
&lt;p&gt;To utilize the RDLM in Chef recipes, I built the &lt;a href="https://github.com/BackSlasher/chef-lock_rdlm"&gt;lock_rdlm&lt;/a&gt; cookbook  which includes several interesting functions.&lt;br&gt;
The first is &lt;a href="https://github.com/BackSlasher/chef-lock_rdlm/#user-content-lockrdlmwith_lock"&gt;&lt;code&gt;LockRDLM::with_lock&lt;/code&gt;&lt;/a&gt;, which executes a code block as a critical section, using a specified lock name.&lt;br&gt;
One could use it to run a "critical" code section like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="no"&gt;LockRDLM&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;with_lock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lockname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# Code here will be exclusive&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_bag_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;misc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;last_run&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The second is &lt;a href="https://github.com/BackSlasher/chef-lock_rdlm/#user-content-lockrdlmassign_identity"&gt;&lt;code&gt;LockRDLM::assign_identity&lt;/code&gt;&lt;/a&gt;, which uses &lt;code&gt;with_lock&lt;/code&gt; to look for identities of other machines and choose a different one (out of a range) for the current node.&lt;br&gt;
It's using the &lt;code&gt;with_lock&lt;/code&gt; method internally, with the critical section doing the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Iterates over all of the nodes in the Chef server and collects their values&lt;/li&gt;
&lt;li&gt;Chooses a free value for its own use&lt;/li&gt;
&lt;li&gt;Saves the value in the node object (for the current run).  &lt;/li&gt;
&lt;li&gt;Loads this node's object from the server, saves the value and immediately saves it back.&lt;br&gt;
    This is done to ensure that the newly chosen value is present in the server upon leaving the critical section, and not in the run's end (when the Chef client updates the node object).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I use it to solve my use unique identity issue like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="no"&gt;LockRDLM&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;assign_identity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:machine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;254&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Now I can use node[&amp;#39;machine&amp;#39;][&amp;#39;id&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Interesting bits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Because the identities are stored in Chef node attributes, they are cleaned up when node objects are removed. This is another benefit over having all of the ID assignment handled in a separate application.&lt;/li&gt;
&lt;li&gt;When creating the lock handling functions, I couldn't rely on the Chef HTTP methods because they don't return HTTP headers, which I needed. I had to fall back to &lt;code&gt;net/http&lt;/code&gt;, but it wasn't so bad.&lt;/li&gt;
&lt;li&gt;I found &lt;a href="https://github.com/websterclay/chef-dominodes"&gt;Dominodes&lt;/a&gt; that solves the same problem (critical sections accross nodes), but uses data bag items as the locks.&lt;br&gt;
    I didn't take it becaue it doesn't seem to handle race conditions. Also, it's unmaintained since 2011, and I don't think it's because it's perfect.&lt;/li&gt;
&lt;li&gt;I use the helper function &lt;code&gt;LockRDLM::find_duplicate_identity&lt;/code&gt; to monitor for duplicates. One can use this function in their recipe to fail a Chef run if a duplicate is found - I prefer having servers with an assigned identity not depending on the lock during run and one server being in charge of looking for duplicates.&lt;/li&gt;
&lt;/ul&gt;</content><category term="FOSS"></category><category term="Chef"></category><category term="Mutex"></category><category term="Lock"></category><category term="Ruby"></category><category term="Scripts"></category></entry><entry><title>Enhancing Packer Templates with eRuby</title><link href="https://blog.backslasher.net/packer-erb.html" rel="alternate"></link><published>2015-11-18T12:00:00+01:00</published><updated>2015-11-18T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-11-18:/packer-erb.html</id><summary type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.packer.io/"&gt;Packer&lt;/a&gt; is a great tool for creating machine images, and I'm using it to create EC2 AMIs.&lt;br&gt;
My issue with it is that Packer is using JSON for input, and JSON is very inflexible. For instance, you can't:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write comments (there was &lt;a href="https://github.com/mitchellh/packer/issues/283"&gt;an issue&lt;/a&gt; open for two years …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.packer.io/"&gt;Packer&lt;/a&gt; is a great tool for creating machine images, and I'm using it to create EC2 AMIs.&lt;br&gt;
My issue with it is that Packer is using JSON for input, and JSON is very inflexible. For instance, you can't:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write comments (there was &lt;a href="https://github.com/mitchellh/packer/issues/283"&gt;an issue&lt;/a&gt; open for two years about this)&lt;/li&gt;
&lt;li&gt;Comment blocks out for testing (part of "write comments" but different usage)&lt;/li&gt;
&lt;li&gt;Create identical blocks with subtle changes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;After reading the comment-related issue in Packer's GitHub page, I decided to use some wrapper. I considered writing a DSL wrapper for Ruby, but settled for using eRuby templates as a quick win.&lt;br&gt;
The basic usage is writing an &lt;code&gt;erb&lt;/code&gt; file instead of a &lt;code&gt;json&lt;/code&gt; one, and passing it to Packer like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;packer build &amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;erb cherry.json.erb&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The redirection causes Bash to first execute &lt;code&gt;erb&lt;/code&gt; with our template, and provide the output as a file (actually a pipe), to &lt;code&gt;packer&lt;/code&gt;, who sees it as regular JSON.&lt;br&gt;
A slight variation is using Packer's STDIN, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;erb cherry.json.erb &lt;span class="p"&gt;|&lt;/span&gt; packer build -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I dislike the idea of passing things via STDIN to binaries I'm not familiar with (since they might want some input and accidentally read it from the file), but that's just me.&lt;/p&gt;
&lt;h3&gt;Basic usage&lt;/h3&gt;
&lt;p&gt;The file inside can look almost identical to the JSON one but with Ruby snippets inside, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Comments:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%#&lt;/span&gt;&lt;span class="c"&gt; Upload cloud-init preconfig &lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;{&amp;quot;type&amp;quot;:&amp;quot;file&amp;quot;,&amp;quot;source&amp;quot;:&amp;quot;cloud-init/userdata.yaml&amp;quot;,&amp;quot;destination&amp;quot;:&amp;quot;/etc/cloud/cloud.cfg.d/50_slasher.cfg&amp;quot;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reducing magic constants:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="n"&gt;ssh_timeout_minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;ssh -o ConnectTimeout &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;ssh_timeout_minutes&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt; server get_stuff.sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSON-proofing strings (quick and dirty version):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;{&amp;quot;type&amp;quot;:&amp;quot;shell&amp;quot;, &amp;quot;inline&amp;quot;: &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sed \&amp;#39;s/^pidfile.*$/pidfile \/tmp\/redis.pid\&amp;#39; -i /etc/redis.conf&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inspect&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;More Ruby&lt;/h3&gt;
&lt;p&gt;You can use heavier Ruby code to do more awesome stuff.&lt;br&gt;
For instance, this is me creating both PV and HVM versions of my AMI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;build_config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;instance_type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;t1.micro&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;source_ami&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-c2a818aa&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hvm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;instance_type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;t2.micro&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;source_ami&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-42718735&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;builders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;build_config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aws &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:type&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;amazon-ebs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;source_ami&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:source_ami&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;instance_type&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:instance_type&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ami_description&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;packer &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:instance_type&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;quot;builders&amp;quot;: &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pretty_generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;builders&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And here's choosing the right CentOS 6 AMI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;source_ami&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;platform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;is_hvm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;is_hvm&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="c1"&gt;# PV  https://aws.amazon.com/marketplace/ordering/ref=dtl_psb_continue?ie=UTF8&amp;amp;productId=f4325b48-37b0-405a-9847-236c64622e3e&amp;amp;region=us-east-1&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;region&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eu-central-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt; &lt;span class="c1"&gt;# No such image&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sa-east-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-7d02a260&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ap-northeast-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-81294380&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eu-west-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-42718735&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-8997afe0&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;us-west-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-1a013c5f&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;us-west-2&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-b6bdde86&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ap-southeast-2&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-e7138ddd&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ap-southeast-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-a08fd9f2&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Cannot choose AMI&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="c1"&gt;# HVM https://aws.amazon.com/marketplace/ordering?productId=74e73035-3435-48d6-88e0-89cc02ad83ee&amp;amp;ref_=dtl_psb_continue&amp;amp;region=us-east-1&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;region&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eu-central-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-46c4f65b&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sa-east-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-9b952086&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ap-northeast-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-13614b12&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eu-west-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-30ff5c47&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-c2a818aa&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;us-west-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-57cfc412&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;us-west-2&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-81d092b1&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ap-southeast-2&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-b3523089&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ap-southeast-1&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ami-b4a582e6&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Cannot choose AMI&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;...&lt;/span&gt;
&lt;span class="x"&gt;&amp;quot;builders&amp;quot;: [&lt;/span&gt;
&lt;span class="x"&gt;  ...&lt;/span&gt;
&lt;span class="x"&gt;  &amp;quot;region&amp;quot;: &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;source_ami&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;  ...&lt;/span&gt;
&lt;span class="x"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Arguments&lt;/h3&gt;
&lt;p&gt;One can imagine arguments would be useful (e.g. "regions to build the AMI in").&lt;br&gt;
However, the &lt;code&gt;erb&lt;/code&gt; binary doesn't accept arguments, so I had to pass those as environment variables. Less elegant but works OK:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;packer build &amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;REGIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;us-east-1,us-west-2 erb cherry.json.erb&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And inside the template:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;
&lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;REGIONS&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="ss"&gt;:strip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty?&lt;/span&gt;
&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Going full Ruby&lt;/h3&gt;
&lt;p&gt;I haven't done it, but if your template is really complicated you can use a real Ruby file that prints the Packer template.&lt;br&gt;
Taking the exmaple template from the &lt;a href="https://www.packer.io/docs/templates/introduction.html"&gt;Packer docs&lt;/a&gt;, it'll look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;span class="n"&gt;builder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="ss"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;amazon-ebs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;access_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;secret_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./passwd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;# interpolate files&lt;/span&gt;
  &lt;span class="ss"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;region&lt;/span&gt; &lt;span class="c1"&gt;# arguments&lt;/span&gt;
  &lt;span class="ss"&gt;source_ami&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;get_ami&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;# functions&lt;/span&gt;
  &lt;span class="ss"&gt;instance_type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;t1.micro&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;ssh_username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;ami_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;packer {{timestamp}}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# Packer&amp;#39;s variables still work&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="ss"&gt;builders&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;provisioners&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;shell&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;setup_things.sh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Print result&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pretty_generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Have fun templating!&lt;/p&gt;</content><category term="FOSS"></category><category term="Ruby"></category><category term="Packer"></category><category term="Scripts"></category></entry><entry><title>Listing Chef Cookbook Licenses</title><link href="https://blog.backslasher.net/chef-licenses.html" rel="alternate"></link><published>2015-11-11T14:00:00+01:00</published><updated>2015-11-11T14:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-11-11:/chef-licenses.html</id><summary type="html">&lt;p&gt;As part of a compliance check for our company, I was required to print the name/version of all FOSS proejcts I'm using.&lt;br&gt;
Most of it was digging around &lt;code&gt;Gemfile&lt;/code&gt;s and &lt;code&gt;setup.py&lt;/code&gt;s, which isn't that interesting. The neat part was this snippet to extract license information from …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As part of a compliance check for our company, I was required to print the name/version of all FOSS proejcts I'm using.&lt;br&gt;
Most of it was digging around &lt;code&gt;Gemfile&lt;/code&gt;s and &lt;code&gt;setup.py&lt;/code&gt;s, which isn't that interesting. The neat part was this snippet to extract license information from cookbooks installed on Chef server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;chef&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;config_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~/.chef/knife.rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:chef_server_url&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cbs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_rest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/cookbooks?num_versions=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Get all cookbooks, latest version&lt;/span&gt;
&lt;span class="n"&gt;cbs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reject!&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^slasher-/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;# Remove my cookbooks&lt;/span&gt;
&lt;span class="n"&gt;vers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cbs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="c1"&gt;# Extract details&lt;/span&gt;
  &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;versions&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;deet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_rest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;lic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;deet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;license&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;license&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;lic&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# Extract to CSV&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;csv&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;csv_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;:license&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;csv&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;
  &lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values_at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;csv_string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Execute it using &lt;code&gt;chef exec ruby&lt;/code&gt;&lt;br&gt;
The result looks something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;name,license
rvm,Apache 2.0
yum-mysql-community,Apache 2.0
deploy_wrapper,none
tomcat,Apache 2.0
elasticsearch,Apache 2.0
...
graphite,Apache 2.0
curl,Apache 2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The interesting bit is extracting the cookbook list and information using &lt;code&gt;Chef::REST&lt;/code&gt;. This is how &lt;code&gt;knife cookbook list&lt;/code&gt; does it.&lt;/p&gt;</content><category term="FOSS"></category><category term="Chef"></category><category term="Ruby"></category><category term="Licensing"></category></entry><entry><title>Detecting Invalid External References in Group Policy Preferences</title><link href="https://blog.backslasher.net/gpp-external-references.html" rel="alternate"></link><published>2015-11-03T22:54:00+01:00</published><updated>2015-11-03T22:54:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-11-03:/gpp-external-references.html</id><summary type="html">&lt;h2&gt;Guest post&lt;/h2&gt;
&lt;p&gt;This is a post written by my former colleague, &lt;a href="https://il.linkedin.com/pub/ofri-sherf/108/295/6a0"&gt;Ofri Sherf&lt;/a&gt;.&lt;br&gt;
I've been bugging her to upload her script and write how it works because it sounded interesting to me.&lt;/p&gt;
&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I was asked to arrange Group Policy in one of our networks - e.g delete all …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Guest post&lt;/h2&gt;
&lt;p&gt;This is a post written by my former colleague, &lt;a href="https://il.linkedin.com/pub/ofri-sherf/108/295/6a0"&gt;Ofri Sherf&lt;/a&gt;.&lt;br&gt;
I've been bugging her to upload her script and write how it works because it sounded interesting to me.&lt;/p&gt;
&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I was asked to arrange Group Policy in one of our networks - e.g delete all unneccessary GPOs.&lt;br&gt;
That sounded like it was going to be a tedious, frustrating, I-wanna-stab-my-neck-with-a-fork kind of work, so naturally I wanted to make my job a little bit easier by scripting it.&lt;/p&gt;
&lt;p&gt;I divided my work into three stages:&lt;/p&gt;
&lt;h3&gt;1. Obvious cases&lt;/h3&gt;
&lt;p&gt;To find the following, first we need to retrieve all Group Policy Objects:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$GPOs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="n"&gt;-All&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;GUID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-GPOReport&lt;/span&gt; &lt;span class="n"&gt;-Guid&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-ReportType&lt;/span&gt; &lt;span class="n"&gt;XML&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;GPO&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I searched for GPOs (Group Policy objects) that are either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Unlinked (a GPO that has no links in the AD, so it doesn't apply anywhere):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$GPOs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LinksTo&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Empty (a GPO that contains no definition, so even if applied it contains nothing):  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$GPOs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ExtensionData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ExtensionData&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both "Computer settings" and "User settings" segments are disabled:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/gpp-external-references/disabled-example.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$GPOs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Enabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Enabled&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2. Invalid "Administrative Templates" / "Windows Settings":&lt;/h3&gt;
&lt;p&gt;Here I targeted GPOs that have bad settings in either the "Administrative Templates" or "Windows Settings" segments. I have a script for this, but it's cumbersome and not fit for release. I might publish it after I clean it up.&lt;/p&gt;
&lt;h3&gt;3. Invalid Group Policy Preferences&lt;/h3&gt;
&lt;p&gt;The same invalid settings could be found in &lt;a href="https://technet.microsoft.com/en-us/library/dn581922.aspx"&gt;Group Policy Preference&lt;/a&gt;. However, preferences don't show up properly in the XML document generated by &lt;a href="https://technet.microsoft.com/en-us/library/ee461057.aspx"&gt;&lt;code&gt;Get-GPOReport&lt;/code&gt;&lt;/a&gt;, so I didn't handle them in phase 2.&lt;br&gt;
My script solved this issue by directly checking the XML files used to define these settings in the SYSVOL.&lt;br&gt;
It produces a list of GPOs and the path to the file marking them as problematic by checking every XML and searching for something that looks like a path / AD SID, and checking it actually exists.&lt;/p&gt;
&lt;p&gt;Note that if you're using a version of powershell &amp;lt; 3, you need to add these two lines to the start of the script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Import-Module&lt;/span&gt; &lt;span class="n"&gt;ActiveDirectory&lt;/span&gt;
&lt;span class="nb"&gt;Import-Module&lt;/span&gt; &lt;span class="n"&gt;GroupPolicy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And here is the script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# This script searches for GPOs who refer to something that does not exist&lt;/span&gt;
&lt;span class="c"&gt;# Ofri Sherf&lt;/span&gt;
&lt;span class="c"&gt;# sherf.ofri@gmail.com&lt;/span&gt;

&lt;span class="c"&gt;#region Params&lt;/span&gt;
&lt;span class="c"&gt;# Domain to be checked. Defaults to the current domain&lt;/span&gt;
&lt;span class="nv"&gt;$domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADDomain&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;NetBIOSName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# FQDN of domain to be checked&lt;/span&gt;
&lt;span class="nv"&gt;$fullDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADDomain&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DNSRoot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Policy segments to check. E.g. modify to &amp;quot;Machine&amp;quot; to avoid checking the user segment&lt;/span&gt;
&lt;span class="nv"&gt;$type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Machine&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c"&gt;#endregion&lt;/span&gt;

&lt;span class="nv"&gt;$ErrorActionPreference&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SilentlyContinue&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Group Policy Preference to go over&lt;/span&gt;
&lt;span class="nv"&gt;$preferenceType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Drives&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;path=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Files&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fromPath=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Groups&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Member name=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;NetworkShares&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;path=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Shortcuts&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;targetPath=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;IniFiles&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;path=&amp;quot;([^&amp;quot;]+)&amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$preferenceType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetEnumerator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;

    &lt;span class="nv"&gt;$currPreference&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;
    &lt;span class="nv"&gt;$pattern&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;

    &lt;span class="c"&gt;# Analyze segment&lt;/span&gt;
    &lt;span class="nv"&gt;$type&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="nv"&gt;$currType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
        &lt;span class="c"&gt;# Find all GPOs&lt;/span&gt;
        &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;\\&lt;/span&gt;&lt;span class="nv"&gt;$fullDomain&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sysvol&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="nv"&gt;$fullDomain&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Policies&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;GPGuid&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt; 
            &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\{|\}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;GPName&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt; 
            &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GPGuid&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="n"&gt;-Guid&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DisplayName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;Preference&lt;/span&gt; &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$currPreference&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;$setting&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt; &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;$GPName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;

        &lt;span class="c"&gt;# Check if GPO contains relevant GPP&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$fullDomain\sysvol\$fullDomain\Policies\$GPName\$currType\Preferences\$currPreference\$currPreference.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-Content&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$fullDomain\sysvol\$fullDomain\Policies\$GPName\$currType\Preferences\$currPreference\$currPreference.xml&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Encoding&lt;/span&gt; &lt;span class="n"&gt;UTF8&lt;/span&gt;
            &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
                &lt;span class="c"&gt;# If GPP file matches the pattern of &amp;quot;external references&amp;quot;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="nv"&gt;$pattern&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$currPreference&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;Groups&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c"&gt;# This is a SID reference. Look for it in AD&lt;/span&gt;
                            &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
                            &lt;span class="nv"&gt;$group&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$domain*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                                &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$domain\\&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
                                &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADUser&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;
                                &lt;span class="nv"&gt;$group&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADGroup&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;
                                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$group&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                                    &lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,$name&amp;quot;&lt;/span&gt;
                                &lt;span class="p"&gt;}&lt;/span&gt;
                                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;Shortcuts&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c"&gt;# This is a shortcut. It can point to a URL (http://)&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;targetPath=&amp;quot;(http.+?)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                                &lt;span class="nv"&gt;$web&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;-UseDefaultCredentials&lt;/span&gt;
                                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$web&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                                    &lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                &lt;span class="p"&gt;}&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt;
                            &lt;span class="c"&gt;# If it&amp;#39;s not HTTP, fall-through&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="c"&gt;# This is a path&lt;/span&gt;
                            &lt;span class="c"&gt;# Check if the path is a network path&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                                &lt;span class="c"&gt;# Check if path is accessible&lt;/span&gt;
                                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt; &lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])){&lt;/span&gt;
                                    &lt;span class="c"&gt;# Check if path exists yet inaccessible&lt;/span&gt;
                                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nv"&gt;$Error&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Access is denied&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                                        &lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$Matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                    &lt;span class="p"&gt;}&lt;/span&gt;
                                &lt;span class="p"&gt;}&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;

                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nv"&gt;$setting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c"&gt;# If the GPO has invalid settings, pipe it out&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="Group Policy"></category><category term="Powershell"></category></entry><entry><title>Writing Complex Scripts in HBase Shell</title><link href="https://blog.backslasher.net/complex-hbase-shell.html" rel="alternate"></link><published>2015-10-18T12:00:00+02:00</published><updated>2015-10-18T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-10-18:/complex-hbase-shell.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;HBase installations include a shell for running arbitrary commands.&lt;br&gt;
For instance, if you want to view all of your snapshots, you can do something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[me@server ~]$ hbase shell
HBase Shell; enter &amp;#39;help&amp;lt;RETURN&amp;gt;&amp;#39; for list of supported commands.
Type &amp;quot;exit&amp;lt;RETURN&amp;gt;&amp;quot; to leave the HBase Shell
Version …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;HBase installations include a shell for running arbitrary commands.&lt;br&gt;
For instance, if you want to view all of your snapshots, you can do something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[me@server ~]$ hbase shell
HBase Shell; enter &amp;#39;help&amp;lt;RETURN&amp;gt;&amp;#39; for list of supported commands.
Type &amp;quot;exit&amp;lt;RETURN&amp;gt;&amp;quot; to leave the HBase Shell
Version 0.94.22, rb3b224ddca3530139c0685fd5c52e37368b428df, Fri Aug  1 20:11:17 UTC 2014

hbase(main):001:0&amp;gt; list_snapshots
SNAPSHOT                                             TABLE + CREATION TIME
 snapname                                            tablename (Sun Oct 18 04:31:03 +0000 2015)
 ...
35 row(s) in 0.9470 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, these functions are implemented in such a way that they print their output to STDOUT directly. If you wanted to create a complex script, like deleting all snapshots taken yesterday, you're out of luck:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[me@server ~]$ hbase shell
HBase Shell; enter &amp;#39;help&amp;lt;RETURN&amp;gt;&amp;#39; for list of supported commands.
Type &amp;quot;exit&amp;lt;RETURN&amp;gt;&amp;quot; to leave the HBase Shell
Version 0.94.22, rb3b224ddca3530139c0685fd5c52e37368b428df, Fri Aug  1 20:11:17 UTC 2014

hbase(main):001:0&amp;gt; a = list_snapshots
...
hbase(main):002:0&amp;gt; a.nil?
=&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Until now, I accomplished things by wrapping them around in bash scripts, but this got annoying fast.  &lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;I sat around to messing with the HBase source code, and found the way these functions are defined.&lt;br&gt;
I'm referencing &lt;code&gt;v0.94.22&lt;/code&gt; because that's what I'm running, but the functions are similarly defined at the &lt;code&gt;master&lt;/code&gt; branch too.&lt;br&gt;
This is the interesting bit of &lt;a href="https://github.com/apache/hbase/blob/0.94.22/src/main/ruby/shell/commands/list_snapshots.rb"&gt;list_snapshots&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;creation_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getCreationTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;
  &lt;span class="n"&gt;formatter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getTable&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; (&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;creation_time&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Problem is, this &lt;code&gt;admin&lt;/code&gt; variable isn't accessible from the main scope:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hbase(main):010:0&amp;gt; admin
NameError: undefined local variable or method `admin&amp;#39; for #&amp;lt;Object:0x3faea1b0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After much digging around, I found out that &lt;code&gt;admin&lt;/code&gt; is accessible via &lt;code&gt;@shell.hbase_admin&lt;/code&gt;, so I can do something like &lt;code&gt;@shell.hbase_admin.list_snapshot&lt;/code&gt;.&lt;br&gt;
To remove a snapshot, we'll copy from &lt;a href="https://github.com/apache/hbase/blob/0.94.22/src/main/ruby/shell/commands/delete_snapshot.rb"&gt;delete_snapshot&lt;/a&gt;, and now I have my cleanup script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;snaps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@shell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbase_admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_snapshot&lt;/span&gt;
&lt;span class="n"&gt;snaps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getCreationTime&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="vi"&gt;@shell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbase_admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete_snapshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I can then run it using something like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/path/to/hbase shell ~/scripts/cleanup.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And all is well.&lt;/p&gt;</content><category term="FOSS"></category><category term="HBase"></category><category term="Ruby"></category><category term="Java"></category><category term="Scripting"></category></entry><entry><title>Running Inline DSL in ChefSpec</title><link href="https://blog.backslasher.net/chefspec-inline.html" rel="alternate"></link><published>2015-10-17T00:00:00+02:00</published><updated>2015-10-17T00:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-10-17:/chefspec-inline.html</id><summary type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;I have a pet Chef cookbook in charge of managing SELinux policies in Linux machines (&lt;a href="https://github.com/BackSlasher/chef-selinuxpolicy"&gt;Take a look&lt;/a&gt;).&lt;br&gt;
Until today I got along fine without testing, because the cookbook barely had any logic to be tested. The only test I had (contributed by someone) just made sure the …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;I have a pet Chef cookbook in charge of managing SELinux policies in Linux machines (&lt;a href="https://github.com/BackSlasher/chef-selinuxpolicy"&gt;Take a look&lt;/a&gt;).&lt;br&gt;
Until today I got along fine without testing, because the cookbook barely had any logic to be tested. The only test I had (contributed by someone) just made sure the cookbook isn't completely bonkers.&lt;br&gt;
I started working on a pretty complex feature (detecting when ports are assigned using a range) and it required testing. I'm familiar with 2 interesting options for testing cookbooks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://docs.chef.io/kitchen.html"&gt;Kitchen&lt;/a&gt;: Uses Vagrant to create VMs and runs your recipes on it. Can optionally run tests on the machine to ensure it's provisioned OK&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sethvargo/chefspec"&gt;ChefSpec&lt;/a&gt;: Creates an in-memory Chef client that compiles the resource collection (see &lt;a href="https://docs.chef.io/chef_client.html#the-chef-client-title-run"&gt;this&lt;/a&gt; for details about the Chef client run) and allows you to ensure that the resource collection looks as you expected.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Running kitchen tests takes a while and requires a machine capable of virtualization (so it can't be run inside a VM), so I thought I'd try creating a ChefSpec test.&lt;br&gt;
The recommended way of using ChefSpec is by supplying the runner with a list of recipes to run, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chef_run&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;ChefSpec&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SoloRunner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;converge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recipe::one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;other::recipe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;does stuff&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chef_run&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;install_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, when testing LWRPs this becomes annoying, as you have to create "test recipes" for your LWRPs. These either go inside a different cookbook (and complicate your repo and testing) or stay in your main cookbook (and should be marked to not be run by end users), and it looks bad.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;After a bit of hacking, I was able to monkey-patch the ChefSpec classes to accept Chef DSL instead, making the tests look a lot better.&lt;br&gt;
The patch looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# This can go at the beginning of your spec file&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;ChefSpec&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SoloRunner&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;converge_dsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;recipes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;cookbook_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;imaginary&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;recipe_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;converge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;recipes&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;recipe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Recipe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cookbook_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;recipe_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@run_context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;recipe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The main difference between my method and the "normal" one (&lt;code&gt;converge&lt;/code&gt;), is that mine executes the block it's given inside a new recipe called &lt;code&gt;imaginary::temp&lt;/code&gt; (hardly a name that will be used by anyone). This allows you to do something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="ss"&gt;:chef_run&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="no"&gt;ChefSpec&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SoloRunner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;converge_dsl&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;does stuff&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chef_run&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;install_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While the difference looks minute, when testing LWRPs it looks a lot different.&lt;br&gt;
Here is some code from my actual tests:&lt;/p&gt;
&lt;h3&gt;Without patch&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;single port&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="ss"&gt;:chef_run&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;runner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ChefSpec&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SoloRunner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;step_into&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;selinux_policy_port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:cookbook_path&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./test/cookbooks&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# Allow Chef to find test cookbook&lt;/span&gt;
    &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;converge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;selinux_policy_test::single_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;defines a single port&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="c1"&gt;#... irelevant stuff&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chef_run&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;run_execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;selinux-port-1080-addormodify&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What is in &lt;code&gt;single_port&lt;/code&gt; recipe? Where is it?&lt;br&gt;
Are we guranteed to run with the CWD set in the cookbook's directory?&lt;br&gt;
You have to admit it looks weird.&lt;/p&gt;
&lt;h3&gt;With patch&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;single port&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="ss"&gt;:chef_run&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;runner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ChefSpec&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SoloRunner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;step_into&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;selinux_policy_port&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;converge_dsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;selinux_policy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="c1"&gt;# recipe menitoned to force cookbook load&lt;/span&gt;
      &lt;span class="n"&gt;selinux_policy_port&lt;/span&gt; &lt;span class="mi"&gt;1080&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="n"&gt;protocol&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tcp&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;secontext&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http_port_d&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;defines a single port&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="c1"&gt;#... irelevant stuff&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chef_run&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;run_execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;selinux-port-1080-addormodify&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I think it looks a lot more elegant. The test is self-contained (except for "real" code used in the actual cookbook) and is easily understood (what it does and what it expects to happen).&lt;/p&gt;
&lt;h2&gt;And even so...&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Update 19.02.16:&lt;/strong&gt; I am using this method successfully in my cookbooks, e.g. &lt;a href="https://github.com/BackSlasher/chef-selinuxpolicy/blob/master/spec/boolean_spec.rb"&gt;selinux_policy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Even though I think it's great, I'm currently not using it.&lt;br&gt;
My reasons for it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I'm so new to testing cookbooks that I think I should currently stick to the accepted working methods.&lt;/li&gt;
&lt;li&gt;Keeping the test recipes in a separate test cookbook allows it to be shared between ChefSpec and the Chef Kitchen. I currently think it helps maintainability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I might decide to use this method eventually, and I still think it looks really neat, so it deserves a blog post.&lt;/p&gt;</content><category term="FOSS"></category><category term="Chef"></category><category term="Testing"></category><category term="Ruby"></category><category term="Scripts"></category><category term="ChefSpec"></category></entry><entry><title>Generating known_hosts file using Chef</title><link href="https://blog.backslasher.net/chef-known-hosts.html" rel="alternate"></link><published>2015-10-13T15:00:00+02:00</published><updated>2015-10-13T15:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-10-13:/chef-known-hosts.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;This post relates to my &lt;a href="https://blog.backslasher.net/merge-known-hosts.html"&gt;previous post&lt;/a&gt;. I was trying to create a script to amend my &lt;code&gt;known_hosts&lt;/code&gt; file (where SSH keeps fingerprints of all of the servers it connected to in the past, to prevent MitM attacks) with SSH keys collected by Chef. This benefits me in …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;This post relates to my &lt;a href="https://blog.backslasher.net/merge-known-hosts.html"&gt;previous post&lt;/a&gt;. I was trying to create a script to amend my &lt;code&gt;known_hosts&lt;/code&gt; file (where SSH keeps fingerprints of all of the servers it connected to in the past, to prevent MitM attacks) with SSH keys collected by Chef. This benefits me in two major ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reduces the chance for &lt;a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack"&gt;MITM attacks&lt;/a&gt;:&lt;br&gt;
    When connecting to a server for the first time, you usually blindly accept its fingerprint, because you have nothing to compare it to. I saw it being referred to as "the web gap".&lt;br&gt;
    When using my script, you get the fingerprint from the Chef server (which you already trust).&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eases replacing nodes / IPs:&lt;br&gt;
    My original pain point was that a colleague rebuilt a server, and named the new server the same as the old one.&lt;br&gt;
    While this is a reasonable thing to do, the new server had a different key from the old server, so SSH thought I was experiencing a MITM attack. I obviously discovered this only while doing something like this, to ensure the iptables service was running on all servers (we had a &lt;a href="https://en.wikipedia.org/wiki/SYN_flood"&gt;SYN flood&lt;/a&gt; scare):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;knife search &lt;span class="s1"&gt;&amp;#39;tags:public&amp;#39;&lt;/span&gt; -i &lt;span class="p"&gt;|&lt;/span&gt; parallel ssh &lt;span class="o"&gt;{}&lt;/span&gt; sudo pkill -USR1 chef-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The SSH errors messed up my little script and I had to iterate somewhat manually.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;The Script&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Init Chef stuff&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;chef&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;config_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~/.chef/knife.rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:node_name&lt;/span&gt;&lt;span class="o"&gt;]||=&lt;/span&gt;&lt;span class="sb"&gt;`hostname`&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;
&lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DataQuery&lt;/span&gt;

&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;keys_ssh:*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# find nodes with SSH keys&lt;/span&gt;
&lt;span class="n"&gt;key_rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fqdn&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
  &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ec2&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ec2&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;public_ipv4&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ipaddress&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Public IP if machine is EC2&lt;/span&gt;
  &lt;span class="n"&gt;key_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;keys&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key_data&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;host_ecdsa_type&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]]=&lt;/span&gt;&lt;span class="n"&gt;key_data&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;host_ecdsa_public&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key_data&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;host_ecdsa_type&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;key_data&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;host_ecdsa_public&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh-rsa&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key_data&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;host_rsa_public&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key_data&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;host_rsa_public&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;key_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;key_value&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;%s %s %s&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;key_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key_value&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;key_rows&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Script should be executed using Chef's embedded ruby. The two easy ways I know of:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;chef exec ruby SCRIPTPATH&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Adding a shebang to the script reading something like &lt;code&gt;#!/opt/chefdk/embedded/bin/ruby&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Interesting points&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The first block accepts a non-default location for a Chef client config file. This is to allow it to operate on actual Chef clients (nodes), but to default to Chef human users.&lt;/li&gt;
&lt;li&gt;When running on EC2 machines, the "regular" IP address listed in &lt;code&gt;n['ipaddress']&lt;/code&gt; (the one registered on the NIC) is the internal one, and therefor not the one I'm using when connecting to the machine.&lt;br&gt;
  This is why I'm using that little selection about what I'm pushing to &lt;code&gt;names&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;ecdsa&lt;/code&gt; (&lt;a href="https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm"&gt;Elliptic Curve Digital Signature Algorithm&lt;/a&gt;) key is registered in a strange way&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The two scripts combined&lt;/h2&gt;
&lt;p&gt;When actually updating my &lt;code&gt;known_hosts&lt;/code&gt;, I'm running this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;scripts/merge-known-hosts.py &amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;chef &lt;span class="nb"&gt;exec&lt;/span&gt; ruby scripts/chef-ssh-keys.rb&lt;span class="o"&gt;)&lt;/span&gt; ~/.ssh/known_hosts -o ~/.ssh/known_hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Ruby"></category><category term="Scripts"></category><category term="Chef"></category><category term="SSH"></category></entry><entry><title>Merging known_hosts files</title><link href="https://blog.backslasher.net/merge-known-hosts.html" rel="alternate"></link><published>2015-10-13T12:00:00+02:00</published><updated>2015-10-13T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-10-13:/merge-known-hosts.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Some time ago, some colleague rebuilt several servers and reused their names (think &lt;code&gt;sql1&lt;/code&gt;,&lt;code&gt;sql2&lt;/code&gt; etc).&lt;br&gt;
Obviously the new servers had different SSH server keys than the old ones, so my &lt;code&gt;known_hosts&lt;/code&gt; file was out of date.&lt;br&gt;
I considered manually removing the old key fingerprints, but decided that …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Some time ago, some colleague rebuilt several servers and reused their names (think &lt;code&gt;sql1&lt;/code&gt;,&lt;code&gt;sql2&lt;/code&gt; etc).&lt;br&gt;
Obviously the new servers had different SSH server keys than the old ones, so my &lt;code&gt;known_hosts&lt;/code&gt; file was out of date.&lt;br&gt;
I considered manually removing the old key fingerprints, but decided that I should make this process more robust, so instead I created a script that fetches all server SSH keys from our Chef server (coming soon).&lt;br&gt;
However, I found no script to merge the new file with the one I had. So I made one.&lt;/p&gt;
&lt;h2&gt;The Script&lt;/h2&gt;
&lt;h3&gt;Update 22.10.15&lt;/h3&gt;
&lt;p&gt;My script was only allowing the first key type for each host. Fixed&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="c1"&gt;# Merges known_hosts files &lt;/span&gt;
&lt;span class="c1"&gt;# http://blog.backslasher.net/merge-known-hosts.html&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Merge known_hosts files sequentially&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;epilog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;Duplicates are removed with eariler appearances having higher precedence (if a host is mentioned several times, only the first appearance is used). &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;One can use only one file, like `merge-known-hosts.py ~/.ssh/known_hosts -o ~/.ssh/known_hosts` to remove duplicates. &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;files that should be merged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-o&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--output&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;output file (defaults to STDOUT). Only opened after merge is complete, so can be used for inplace merge.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;StringIO&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;

&lt;span class="n"&gt;familiar_hosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;line_split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;hosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line_split&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;key_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line_split&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;hosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hosts&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;key_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;familiar_hosts&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# Filter out familiar hosts&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt; &lt;span class="c1"&gt;# skip this row if no hosts left&lt;/span&gt;
      &lt;span class="n"&gt;familiar_hosts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;key_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
      &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;key_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line_split&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getvalue&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Interesting points:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The script starts printing lines immediately. This means that it'll work on large files / pipes / whatever.&lt;br&gt;
  The only exception is when the output destination is a file. In order to avoid writing to the same file I'm reading (and corrupting it), I write to a "memory stream" and write it all to the file at the end.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;familiar_hosts&lt;/code&gt; is a set and not a list. This is because I don't need it ordered, and membership checks (testing if a host was already mentioned before) is much quicker in a set.&lt;br&gt;
  However, the &lt;code&gt;hosts&lt;/code&gt; list that represents the hosts in the current row, &lt;strong&gt;is&lt;/strong&gt; a list (and not a set) because I wanted to keep the ordering of the source file (when using a set, Python placed the IP addresses before the hostnames in the same row).&lt;/li&gt;
&lt;li&gt;I'm not hashing my &lt;code&gt;known_hosts&lt;/code&gt; file (see "HashKnownHosts" under &lt;code&gt;man ssh_config&lt;/code&gt;) because it prevents autocomplete in my SSH client. If you are using hashing, you should ensure that you're consistent - either have all input files hashed, or none of them. My script won't bother hashing plaintext hosts when looking for duplicates (if you implement it and find it useful, please send me a patch!)&lt;/li&gt;
&lt;/ul&gt;</content><category term="FOSS"></category><category term="Python"></category><category term="Scripts"></category><category term="SSH"></category></entry><entry><title>Managing AWS Security Groups with Piculet</title><link href="https://blog.backslasher.net/piculet.html" rel="alternate"></link><published>2015-10-07T09:00:00+02:00</published><updated>2015-10-07T09:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-10-07:/piculet.html</id><summary type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;One of the first things I noticed when starting to work with AWS is that security groups are very hard to maintain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name and description are immutable - One can't modify the name/description of a Security Group after it's created&lt;/li&gt;
&lt;li&gt;Groups contain magical constants - There is no place …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;One of the first things I noticed when starting to work with AWS is that security groups are very hard to maintain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name and description are immutable - One can't modify the name/description of a Security Group after it's created&lt;/li&gt;
&lt;li&gt;Groups contain magical constants - There is no place for labeling IP ranges or port numbers&lt;/li&gt;
&lt;li&gt;The rules can only refer to other security groups in the same VPC (or classic region, if outside VPC) or bare IPs, meaning that cross-VPC rules must contain a list of IPs that can change (since EC2 machines can change their IPs)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since I didn't finish migrating our environment to documented and organized CloudFormation stacks (and I might never get around to it), I needed a way to manage security groups that doesn't cause me to change paradigms, meaning it won't force me to deploy tunneling solutions or push the servers into stacks.&lt;/p&gt;
&lt;p&gt;Luckily I found &lt;a href="https://github.com/winebarrel/piculet"&gt;Piculet&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;What does it do&lt;/h2&gt;
&lt;p&gt;Piculet allowed me to define all of my Security Groups in a specific region using its DSL (it even has an export function for your existing groups).&lt;br&gt;
By using &lt;code&gt;piculet --apply&lt;/code&gt; one can make the actual security groups look like the DSL file (or its compiled form), meaning that Piculet will create/delete security groups and add/remove rules to match your file.&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/piculet/apply.png"&gt;&lt;br&gt;
This is already great as you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;add comments to document your rules&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# LB healthcheck&lt;/span&gt;
&lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="ss"&gt;:tcp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8644&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;8644&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;use ruby constructs to simpify your rules&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;
  &lt;span class="mi"&gt;2003&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# carbon incoming&lt;/span&gt;
  &lt;span class="mi"&gt;4567&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# grafana UI&lt;/span&gt;
&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="ss"&gt;:tcp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;keep the files under source control to see who changed what, when and why&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/piculet/git.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What I'm doing with it&lt;/h2&gt;
&lt;p&gt;Using piculet as is was fine for a while, but aside from modifying the gem itself I modified the way we're using it.&lt;/p&gt;
&lt;h3&gt;Helper methods for IPs&lt;/h3&gt;
&lt;p&gt;I have some cross-VPC rules (like servers in Singapore talking to servers in Ireland), so I can't use security group references. If I used IPs, my rules would look like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Ireland rule&lt;/span&gt;
&lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="ss"&gt;:tcp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5678&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;5678&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;ip_ranges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;1.2.3.4/0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# serverA.singapore.slash.com&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;5.6.7.8/0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# serverB.singapore.slash.com&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This isn't ideal because I have to update the list whenever an IP changes (or I add a new server).
I ended up creating a helper file that monkey-patches the Piculet classes to include my helper methods such as &lt;code&gt;aws_role&lt;/code&gt; (finds IP addresses of instances by a tag named "role") or &lt;code&gt;aws_vpc&lt;/code&gt; (IP addresses of all instances in a specific VPC).&lt;br&gt;
This is most of my helper file. I might release it properly if it's interesting.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Slasher&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Firewall&lt;/span&gt;
      &lt;span class="c1"&gt;# Create instance hash&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;set_instances&lt;/span&gt;
      &lt;span class="n"&gt;extract_tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;mt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;mt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;mt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aws-sdk-core&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Aws&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;EC2&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;regions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe_regions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;region_name&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="n"&gt;instances&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="no"&gt;Aws&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;EC2&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe_instances&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reservations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select!&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;extract_tag&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;piculet_ignore&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;empty?&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="vc"&gt;@@instance_hash&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;extract_tag&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;public_ip_address&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;role&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;extract_tag&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Role&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;extract_tag&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Role&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="ss"&gt;:strip&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="ss"&gt;vpc_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vpc_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;placement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;availability_zone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/.$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;set_instances&lt;/span&gt; &lt;span class="c1"&gt;# Actually run&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;instance_hash&lt;/span&gt;
      &lt;span class="vc"&gt;@@instance_hash&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# DNS resolution&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;host_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;resolv&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Resolv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getaddress&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/32&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# By name tag&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;aws_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;instance_hash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:ip&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# By role tag&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;aws_role&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;role&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;instance_hash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:roles&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;include?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;role&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:ip&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# All in classic EC2 in region&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;aws_classic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;instance_hash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:region&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:vpc_id&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:ip&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# All in specific VPC&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;aws_vpc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vpc_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;instance_hash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:vpc_id&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="n"&gt;vpc_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:ip&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# IPs of health checkers in Route53&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;route53_ips&lt;/span&gt;
      &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;54.228.16.0/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.232.40.64/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.241.32.64/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.243.31.192/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.245.168.0/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.248.220.0/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.251.31.128/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.252.79.128/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.183.255.128/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.244.52.192/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.250.253.192/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.252.254.192/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;54.255.254.192/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;107.23.255.0/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;176.34.159.192/26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;177.71.207.128/26&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# Every IP we can think of&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;all_ips&lt;/span&gt;
      &lt;span class="n"&gt;instance_hash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:ip&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;route53_ips&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Piculet&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;EC2&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SecurityGroup&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Permissions&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Permission&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Slasher&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Firewall&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now I can use it in my rules, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# App healthcheck&lt;/span&gt;
&lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="ss"&gt;:tcp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8644&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;8644&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;ip_ranges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;route53_ips&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# Backroom API&lt;/span&gt;
&lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="ss"&gt;:tcp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8081&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;8081&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;ip_ranges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;aws_role&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backroom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;# From around the world&lt;/span&gt;
    &lt;span class="n"&gt;host_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;important.client.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Apply all regions&lt;/h3&gt;
&lt;p&gt;I have this helper script to apply each file to its matching region.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
cat regions &lt;span class="p"&gt;|&lt;/span&gt; parallel -j &lt;span class="m"&gt;0&lt;/span&gt; bundle &lt;span class="nb"&gt;exec&lt;/span&gt; piculet &lt;span class="nv"&gt;$@&lt;/span&gt; -a -f &lt;span class="o"&gt;{}&lt;/span&gt; -r &lt;span class="o"&gt;{}&lt;/span&gt; --exclude &lt;span class="s1"&gt;&amp;#39;/^packer\s[\w\-]+$/&amp;#39;&lt;/span&gt; --exclude_tag piculet_ignore
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Interesting things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;regions&lt;/code&gt; file contains all of the regions you want to apply. This is handy because you can stop handling a region without removing its file, have unrelated files around, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--exclude&lt;/code&gt; is being used to ignore temporary security groups created by packer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--exlcude_tag&lt;/code&gt; only exists in my fork of the gem (currently) and allows me to ignore security groups belonging to CloudFormation stacks.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parallel&lt;/code&gt; is used to run all regions at the same time and keep the output tidy. If you don't care about output tidiness, you can use &lt;code&gt;xargs -P 0 -I {}&lt;/code&gt; instead&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Automatically updating rules&lt;/h3&gt;
&lt;p&gt;Since our rules are in a git repository, I have a server that keeps an updated copy of said repo and applies it every once in a while. This allows me to keep a CI/CD feel (infrastructure as code) and allow "regular" users to modify the FW rules using pull requests on the repo.&lt;/p&gt;</content><category term="FOSS"></category><category term="AWS"></category><category term="Security"></category><category term="Firewall"></category><category term="Piculet"></category><category term="Ruby"></category></entry><entry><title>Running Xbox360 controllers on Ubuntu</title><link href="https://blog.backslasher.net/xbox360-controller-ubuntu.html" rel="alternate"></link><published>2015-09-06T10:00:00+02:00</published><updated>2015-09-06T10:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-09-06:/xbox360-controller-ubuntu.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/xbox360-controller-ubuntu/ubuntu360.png"&gt;&lt;/p&gt;
&lt;p&gt;I wanted to write a few lines on how I configured my controller on Ubuntu to work with Steam games, since I discovered some neat stuff.&lt;/p&gt;
&lt;h3&gt;What I've got&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.xbox.com/en-US/xbox-360/accessories/controllers/wireless-controller-with-play-and-charge-kit"&gt;Xbox 360 wireless standard controller&lt;/a&gt;, with cable (the one you use with the Xbox 360 console)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Xbox-Wireless-Gaming-Receiver-Windows/dp/B000HZFCT2"&gt;Xbox 360 Gaming Reciever&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ubuntu …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/xbox360-controller-ubuntu/ubuntu360.png"&gt;&lt;/p&gt;
&lt;p&gt;I wanted to write a few lines on how I configured my controller on Ubuntu to work with Steam games, since I discovered some neat stuff.&lt;/p&gt;
&lt;h3&gt;What I've got&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.xbox.com/en-US/xbox-360/accessories/controllers/wireless-controller-with-play-and-charge-kit"&gt;Xbox 360 wireless standard controller&lt;/a&gt;, with cable (the one you use with the Xbox 360 console)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Xbox-Wireless-Gaming-Receiver-Windows/dp/B000HZFCT2"&gt;Xbox 360 Gaming Reciever&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ubuntu 14.04.3 LTS&lt;/li&gt;
&lt;li&gt;Steam, as installed from the Ubuntu repo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your inventory differs, you might have other issues.&lt;/p&gt;
&lt;h2&gt;The play and charge is a lie&lt;/h2&gt;
&lt;p&gt;The cable can't transfer any data, and is useless for connecting the gamepad to the computer.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Controller:        Microsoft Xbox 360 Play&amp;amp;Charge Kit
Vendor/Product:    045e:028f
USB Path:          003:029
Controller Type:   Xbox360 Play&amp;amp;Charge

-- [ ERROR ] ------------------------------------------------------
The Xbox360 Play&amp;amp;Charge cable is for recharging only, it does not transmit data, thus xboxdrv can&amp;#39;t support it. You have to get a wireless receiver:

* http://www.xbox.com/en-ca/hardware/x/xbox360wirelessgamingreceiver/
-------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Above is &lt;code&gt;xboxdrv&lt;/code&gt; reproaching me for trying to work with the cable.&lt;/p&gt;
&lt;h2&gt;xpad&lt;/h2&gt;
&lt;p&gt;(not the &lt;a href="https://apps.ubuntu.com/cat/applications/xpad/"&gt;Ubuntu package&lt;/a&gt; that emulates sticky notes).&lt;br&gt;
A  kernel module in charge of interfacing with gamepads, now bundled with Ubuntu. &lt;a href="https://help.ubuntu.com/community/Xbox360Controller"&gt;See more here&lt;/a&gt;.&lt;br&gt;
This module handles regular Xbox 360 controllers (see "What I've got" above) well enough, but some games didn't recognize the controller.&lt;br&gt;
It also does nothing to indicate the controller was recognized - the controller keeps blinking (like it's searching for an owner), and no message in &lt;code&gt;dmesg&lt;/code&gt; or any log (&lt;code&gt;/var/log/{syslog,kern.log,dmesg}&lt;/code&gt;).&lt;br&gt;
The reason is that the driver registers 4 controllers (&lt;code&gt;/dev/input/js{0,1,2,3}&lt;/code&gt;) when the reciever is plugged in, so nothing happens when it's detecting a new actual controller.&lt;/p&gt;
&lt;h2&gt;xboxdrv&lt;/h2&gt;
&lt;p&gt;An alternative userspace driver avaialble from the Ubuntu repos.&lt;br&gt;
To run it, you first have to unload the xpad module using &lt;code&gt;sudo rmmod xpad&lt;/code&gt; or by supplying &lt;code&gt;-d&lt;/code&gt; to xboxdrv. It can also be &lt;a href="http://askubuntu.com/q/110341"&gt;blacklisted&lt;/a&gt;.&lt;br&gt;
It has to be run as root (because it handles raw input devices), and gives much more visibilty to the controller's state (for instance, it sets the controller's status LED to indicate that the controller is connected).&lt;br&gt;
Some games only detected my input when running &lt;code&gt;xboxdrv&lt;/code&gt; with &lt;code&gt;--mimic-xpad&lt;/code&gt;, even though they wouldn't work with the real &lt;code&gt;xpad&lt;/code&gt;. Weird.
It has a lot of interesting arguments (really) and the manpage is really worth a read (&lt;code&gt;man xboxdrv&lt;/code&gt;). I think the secret to success is trying different kinds of configurations.&lt;/p&gt;
&lt;h2&gt;Steam Games and Gamepads&lt;/h2&gt;
&lt;p&gt;When using Steam's &lt;a href="http://store.steampowered.com/bigpicture"&gt;Big Picture&lt;/a&gt; (accessible by pressing the big Xbox logo while browsing steam), games with the gamepad icon are supposed to support gamepads (duh).&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/xbox360-controller-ubuntu/meatboy.png"&gt;&lt;/p&gt;
&lt;p&gt;I'm going to list a few games I managed to get working with the controller, so you'll know that if you can't get these working, you have some configuration issue.&lt;br&gt;
Please let me know if you have any insights / additions!&lt;/p&gt;
&lt;h3&gt;Works with xpad&lt;/h3&gt;
&lt;p&gt;Since these work with the default setup, I didn't test them on xboxdrv.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://store.steampowered.com/app/70300"&gt;VVVVVV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://store.steampowered.com/app/40800"&gt;Super Meat Boy&lt;/a&gt; - so much better with a gamepad!&lt;/li&gt;
&lt;li&gt;&lt;a href="http://store.steampowered.com/app/218820"&gt;Mercenary Kings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://store.steampowered.com/app/305050"&gt;Outland&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Works with xboxdrv&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://store.steampowered.com/app/113200"&gt;The Binding of Isaac&lt;/a&gt; - required &lt;code&gt;--mimic-xpad&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://store.steampowered.com/app/247020"&gt;Cook, Serve, Delicious!&lt;/a&gt; - required &lt;code&gt;--mimic-xpad&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Image Attribution&lt;/h2&gt;
&lt;p&gt;First image taken from here: &lt;a href="https://scognito.wordpress.com/2009/11/18/streaming-movies-and-music-from-ubuntu-to-xbox360/"&gt;https://scognito.wordpress.com/2009/11/18/streaming-movies-and-music-from-ubuntu-to-xbox360/&lt;/a&gt;&lt;/p&gt;</content><category term="FOSS"></category><category term="xbox"></category><category term="ubuntu"></category><category term="steam"></category></entry><entry><title>Chef Snippets</title><link href="https://blog.backslasher.net/chef-snippets.html" rel="alternate"></link><published>2015-08-23T14:00:00+02:00</published><updated>2015-08-23T14:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-08-23:/chef-snippets.html</id><summary type="html">&lt;p&gt;I thought I'd upload some interesting Chef-related snippets I accumulated.&lt;/p&gt;
&lt;h2&gt;Chef Shell&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;chef-shell&lt;/code&gt; is an easy way to gain the context of a Chef client.&lt;br&gt;
I mainly use it to debug recipes by executing little bits of them in the shell.&lt;/p&gt;
&lt;h3&gt;As client&lt;/h3&gt;
&lt;p&gt;If you're running it on a standard …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I thought I'd upload some interesting Chef-related snippets I accumulated.&lt;/p&gt;
&lt;h2&gt;Chef Shell&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;chef-shell&lt;/code&gt; is an easy way to gain the context of a Chef client.&lt;br&gt;
I mainly use it to debug recipes by executing little bits of them in the shell.&lt;/p&gt;
&lt;h3&gt;As client&lt;/h3&gt;
&lt;p&gt;If you're running it on a standard Chef node (connected to a Chef server), you can simply use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo chef-shell -z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;As human client&lt;/h3&gt;
&lt;p&gt;If you want to run &lt;code&gt;chef-shell&lt;/code&gt; from your Knife-wielding workstation, use a similar trick:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chef-shell -z -c ~/.chef/knife.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Of course, I'm assuming your Knife config is in the default location. Modify if necessary.&lt;/p&gt;
&lt;h3&gt;As solo in Vagrant&lt;/h3&gt;
&lt;p&gt;When using Chef solo in Vagrant, you can run Chef shell to simulate it by running something like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo chef-shell -s --config /tmp/vagrant-chef/solo.rb --json-attributes /tmp/vagrant-chef/dna.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I got the arguments from running &lt;code&gt;vagrant provision&lt;/code&gt; and during the provisioning running something like &lt;code&gt;ps aux | grep chef&lt;/code&gt;.&lt;br&gt;
To load your cookbooks (which is not automatic) you can run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Normal runlist&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OR&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Custom set of recipes&lt;/span&gt;
&lt;span class="n"&gt;recipes&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nginx&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OpenStruct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;recipes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;recipes&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Chef in Ruby&lt;/h2&gt;
&lt;p&gt;Sometimes I want to use Chef logic in my Ruby scripts or I just want direct access to Chef's libraries.&lt;br&gt;
The easiest way to accomplish it is to use Chef's own Ruby instance, available under &lt;code&gt;/opt/chefdk/embedded/bin/ruby&lt;/code&gt; (for ChefDK) or &lt;code&gt;/opt/chef/embedded/bin/ruby&lt;/code&gt; (for Chef client). I sometimes use the &lt;code&gt;irb&lt;/code&gt; binary instead.&lt;br&gt;
You can also use &lt;code&gt;chef exec&lt;/code&gt; in newer editions of Chef.&lt;br&gt;
I have this boilerplate snippet to load the Chef config file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;chef&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;human_user&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="c1"&gt;# Whether we&amp;#39;re running as a Chef user or as a Chef client&lt;/span&gt;
  &lt;span class="n"&gt;config_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~/.chef/knife.rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="n"&gt;config_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/etc/chef/client.rb&amp;#39;&lt;/span&gt;
  &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:node_name&lt;/span&gt;&lt;span class="o"&gt;]||=&lt;/span&gt;&lt;span class="sb"&gt;`hostname`&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you can run some Chef-dependant code, like:&lt;/p&gt;
&lt;h4&gt;Getting all nodes&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Translate node FQDN to AWS instance ID&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DataQuery&lt;/span&gt;

&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ec2_instance_id:*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fqdn&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ec2&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;instance_id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Update a databag&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DataQuery&lt;/span&gt;

&lt;span class="n"&gt;mu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data_bag_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;song&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;of&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mu&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ice&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fire&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;mu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Query for group membership&lt;/h4&gt;
&lt;p&gt;Taken from the &lt;a href="https://github.com/chef/knife-acl"&gt;knife-acl&lt;/a&gt; project&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_usag?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;gname&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;gname&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;/^[0-9a-f]+$/&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;client_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;best.machine.com&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;rest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Search&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rest&lt;/span&gt;
&lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_rest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/groups&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;is_usag?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="n"&gt;current_groups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_rest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/groups/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;actors&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;include?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Mass operations in Bash&lt;/h2&gt;
&lt;p&gt;Some of these commands use &lt;code&gt;parallel&lt;/code&gt;. It can be switches with &lt;code&gt;xargs -I {}&lt;/code&gt; but it won't run as fast.&lt;/p&gt;
&lt;h3&gt;Get all nodes who's last run failed&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;knife node list &lt;span class="p"&gt;|&lt;/span&gt; parallel &lt;span class="s1"&gt;&amp;#39;knife runs list -r1 {} | egrep &amp;quot;status:\s+failure&amp;quot;&amp;gt;/dev/null &amp;amp;&amp;amp; echo {}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Chef"></category><category term="Ruby"></category><category term="Vagrant"></category></entry><entry><title>How Chef's use_inline_resources works</title><link href="https://blog.backslasher.net/chef-inline.html" rel="alternate"></link><published>2015-08-17T17:00:00+02:00</published><updated>2015-08-17T17:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-08-17:/chef-inline.html</id><summary type="html">&lt;p&gt;I recently had an issue with &lt;a href="https://docs.chef.io/lwrp.html#use-inline-resources"&gt;use_inline_resources&lt;/a&gt;.&lt;br&gt;
This feature's documentation is lackluster, and I learnt about its magic thanks to some &lt;a href="https://github.com/chef/chef/issues/3748#issuecomment-127361292"&gt;scraps of information&lt;/a&gt;.&lt;br&gt;
I wanted to share some of my info about how it actually works.&lt;/p&gt;
&lt;h2&gt;The basics&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;use_inline_resources&lt;/code&gt; is used to separate a LWRP's run context from the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently had an issue with &lt;a href="https://docs.chef.io/lwrp.html#use-inline-resources"&gt;use_inline_resources&lt;/a&gt;.&lt;br&gt;
This feature's documentation is lackluster, and I learnt about its magic thanks to some &lt;a href="https://github.com/chef/chef/issues/3748#issuecomment-127361292"&gt;scraps of information&lt;/a&gt;.&lt;br&gt;
I wanted to share some of my info about how it actually works.&lt;/p&gt;
&lt;h2&gt;The basics&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;use_inline_resources&lt;/code&gt; is used to separate a LWRP's run context from the main run, making it run in an isolated "mini-run".&lt;br&gt;
Assume the following structure inside cookbook &lt;code&gt;slasher&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;resources/default.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# resource definition for slasher LWRP&lt;/span&gt;
&lt;span class="n"&gt;actions&lt;/span&gt; &lt;span class="ss"&gt;:swing&lt;/span&gt;
&lt;span class="n"&gt;default_action&lt;/span&gt; &lt;span class="ss"&gt;:swing&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;providers/default.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# provider for slasher LWRP&lt;/span&gt;
&lt;span class="n"&gt;use_inline_resources&lt;/span&gt;

&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:swing&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;execute&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;echo swish&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This causes the following effects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You cannot subscribe to / notify resources that are not part of this resource's context.&lt;br&gt;
  This will break:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# provider for slasher LWRP&lt;/span&gt;
&lt;span class="n"&gt;use_inline_resources&lt;/span&gt;

&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;:swing&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;execute&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;echo swish&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;notifies&lt;/span&gt; &lt;span class="ss"&gt;:restart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;service[nginx]&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# not defined in this LWRP!&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The external resource is automatically "updated" (meaning it triggers other resources using subscribe/notify) whenever one of the resources in the run changes.&lt;br&gt;
  This will work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# External usage of slash&lt;/span&gt;
&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;

&lt;span class="n"&gt;slash&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;notifies&lt;/span&gt; &lt;span class="ss"&gt;:restart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;service[nginx]&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# Will happen because the execute resource will &amp;quot;update&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This behaviour is the encouraged way to implement LWRPs, because it helps encapsulation - they feel like "atomic" resources when used in recipes, and have no need to consider other resources when managing naming, notifications etc., especially other instances of the same resource. It'll probably be enabled by default in Chef13.&lt;/p&gt;
&lt;h2&gt;The internals&lt;/h2&gt;
&lt;p&gt;This is the interesting part - how it's actually implemented.
If you'll look at the &lt;a href="https://github.com/chef/chef/blob/12.4.1/lib/chef/provider/lwrp_base.rb"&gt;Chef source&lt;/a&gt; (not in &lt;code&gt;master&lt;/code&gt;, where I guess everything changed because it's the default behaviour), under file &lt;code&gt;lib/chef/provider/lwrp_base.rb&lt;/code&gt;, we'll see that the method &lt;code&gt;use_inline_resources&lt;/code&gt; does some mixin magic:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;use_inline_resources&lt;/span&gt;
    &lt;span class="kp"&gt;extend&lt;/span&gt; &lt;span class="no"&gt;InlineResources&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ClassMethods&lt;/span&gt;
    &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;InlineResources&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The mixed-in module (in the same file) overrides the method &lt;code&gt;action&lt;/code&gt; (used to define actions in LWRP) with the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;define_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;action_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;recipe_eval_with_update_check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, it calls &lt;code&gt;recipe_eval_with_update_check&lt;/code&gt; (instead of &lt;code&gt;instance_eval&lt;/code&gt; in the regular version), which will temporarily replace the run context with a new one (with an empty resource collection), run the resource's action, and then inspect the resources defined in this temporary context and see if any of them were updated. If so, it'll mark this resource (the LWRP) as updated too:&lt;br&gt;
(Comments are mine)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recipe_eval_with_update_check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;saved_run_context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@run_context&lt;/span&gt;                                &lt;span class="c1"&gt;# Save that for later&lt;/span&gt;
  &lt;span class="n"&gt;temp_run_context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@run_context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dup&lt;/span&gt;                             &lt;span class="c1"&gt;# Create new run context&lt;/span&gt;
  &lt;span class="vi"&gt;@run_context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp_run_context&lt;/span&gt;                                 &lt;span class="c1"&gt;# Set it as current&lt;/span&gt;
  &lt;span class="vi"&gt;@run_context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource_collection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ResourceCollection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="c1"&gt;# New and empty collection&lt;/span&gt;

  &lt;span class="n"&gt;return_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;instance_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                            &lt;span class="c1"&gt;# Compile LWRP&lt;/span&gt;
  &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@run_context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;converge&lt;/span&gt;                         &lt;span class="c1"&gt;# Execute compiled LWRP&lt;/span&gt;
  &lt;span class="n"&gt;return_value&lt;/span&gt;                                                    &lt;span class="c1"&gt;# Return result&lt;/span&gt;
&lt;span class="k"&gt;ensure&lt;/span&gt;                                                            &lt;span class="c1"&gt;# Always happens, even if we had an error&lt;/span&gt;
  &lt;span class="vi"&gt;@run_context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;saved_run_context&lt;/span&gt;                                &lt;span class="c1"&gt;# Restore old run context&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;temp_run_context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource_collection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;any?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;updated?&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="c1"&gt;# Search for modified resources&lt;/span&gt;
    &lt;span class="n"&gt;new_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;updated_by_last_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     &lt;span class="c1"&gt;# If found, update LWRP&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that's how it's done!&lt;/p&gt;</content><category term="FOSS"></category><category term="Chef"></category><category term="Linux"></category><category term="Ruby"></category></entry><entry><title>Troubleshooting story - Java HTTP client crashes on connections</title><link href="https://blog.backslasher.net/java-ssl-crash.html" rel="alternate"></link><published>2015-08-12T16:44:00+02:00</published><updated>2015-08-12T16:44:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-08-12:/java-ssl-crash.html</id><summary type="html">&lt;h2&gt;Google Bait&lt;/h2&gt;
&lt;p&gt;This post isn't about the solution, but rather about the methodology. Anyway, to help people experiencing the same issue find this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CentOS 6.6 (fresh from &lt;code&gt;chef/centos-6.6&lt;/code&gt; Vagrant Box)&lt;/li&gt;
&lt;li&gt;Java 1.7.0 (&lt;code&gt;java-1.7.0-openjdk&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;DOES NOT happen with Java 1.8.0 (&lt;code&gt;java-1 …&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;Google Bait&lt;/h2&gt;
&lt;p&gt;This post isn't about the solution, but rather about the methodology. Anyway, to help people experiencing the same issue find this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CentOS 6.6 (fresh from &lt;code&gt;chef/centos-6.6&lt;/code&gt; Vagrant Box)&lt;/li&gt;
&lt;li&gt;Java 1.7.0 (&lt;code&gt;java-1.7.0-openjdk&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;DOES NOT happen with Java 1.8.0 (&lt;code&gt;java-1.8.0-openjdk&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Happens because of interaction with &lt;code&gt;nss&lt;/code&gt; (was version &lt;code&gt;3.16.1&lt;/code&gt;, resolved when upgrading to &lt;code&gt;3.19.1&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;One of our boxes ships with Elasticsearch, and we also include a plugin called &lt;a href="http://bigdesk.org/"&gt;BigDesk&lt;/a&gt; which provides monitoring.
To do so, we run the following command (with Chef):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/share/elasticsearch/bin/plugin -install lukas-vlcek/bigdesk/2.5.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Recently, it started failing on our Vagrant development VMs. When trying with &lt;code&gt;--verbose&lt;/code&gt;, I got this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Trying http://download.elasticsearch.org/lukas-vlcek/bigdesk/bigdesk-2.5.0.zip...
Failed: IOException[Can&amp;#39;t get http://download.elasticsearch.org/lukas-vlcek/bigdesk/bigdesk-2.5.0.zip to /usr/share/elasticsearch/plugins/bigdesk.zip]; nested: FileNotFoundException[http://download.elasticsearch.org/lukas-vlcek/bigdesk/bigdesk-2.5.0.zip]; nested: FileNotFoundException[http://download.elasticsearch.org/lukas-vlcek/bigdesk/bigdesk-2.5.0.zip]; 
Trying http://search.maven.org/remotecontent?filepath=lukas-vlcek/bigdesk/2.5.0/bigdesk-2.5.0.zip...
Failed: SSLException[java.security.ProviderException: java.security.KeyException]; nested: ProviderException[java.security.KeyException]; nested: KeyException; 
Trying https://oss.sonatype.org/service/local/repositories/releases/content/lukas-vlcek/bigdesk/2.5.0/bigdesk-2.5.0.zip...
Failed: SSLException[java.security.ProviderException: java.security.KeyException]; nested: ProviderException[java.security.KeyException]; nested: KeyException; 
Trying https://github.com/lukas-vlcek/bigdesk/archive/2.5.0.zip...
Failed: SSLException[java.security.ProviderException: java.security.KeyException]; nested: ProviderException[java.security.KeyException]; nested: KeyException; 
Trying https://github.com/lukas-vlcek/bigdesk/archive/master.zip...
Failed: SSLException[java.security.ProviderException: java.security.KeyException]; nested: ProviderException[java.security.KeyException]; nested: KeyException; 
Failed to install lukas-vlcek/bigdesk/2.5.0, reason: failed to download out of all possible locations..., use --verbose to get detailed information
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As we can see, there is probably something wrong with the SSL handshake. cURLing to these URLs worked, so this is a client-specific issue.  &lt;/p&gt;
&lt;h2&gt;Basic troubleshooting&lt;/h2&gt;
&lt;p&gt;I made this snippet to test the HTTP handshake and get the real error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.net.HttpURLConnection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.net.URL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bla&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://github.com/lukas-vlcek/bigdesk/archive/2.5.0.zip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;HttpURLConnection&lt;/span&gt; &lt;span class="n"&gt;httpConnection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpURLConnection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;openConnection&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;httpConnection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Error\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;About to loop\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;currentThread&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);}&lt;/span&gt; &lt;span class="c1"&gt;//Crudest debug ever&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When running it, I got something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Hello
javax.net.ssl.SSLException: java.security.ProviderException: java.security.KeyException
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
        at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1916)
        at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1874)
        at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1857)
        at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1378)
        at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1355)
        at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559)
        at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
        at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153)
        at Bla.main(Bla.java:10)
Caused by: java.security.ProviderException: java.security.KeyException
        at sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:146)
        at java.security.KeyPairGenerator$Delegate.generateKeyPair(KeyPairGenerator.java:704)
        at sun.security.ssl.ECDHCrypt.&amp;lt;init&amp;gt;(ECDHCrypt.java:78)
        at sun.security.ssl.ClientHandshaker.serverKeyExchange(ClientHandshaker.java:714)
        at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:278)
        at sun.security.ssl.Handshaker.processLoop(Handshaker.java:913)
        at sun.security.ssl.Handshaker.process_record(Handshaker.java:849)
        at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1035)
        at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1344)
        at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1371)
        ... 5 more
Caused by: java.security.KeyException
        at sun.security.ec.ECKeyPairGenerator.generateECKeyPair(Native Method)
        at sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:126)
        ... 14 more
Error
About to loop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This, however, worked:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.51-1.b16.el6_7.x86_64/jre/bin/java Bla
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Meaning this problem was java-1.7.0 specific.&lt;br&gt;
Upgrading everything (&lt;code&gt;sudo yum upgrade -y&lt;/code&gt;) also solved it, but upgrading &lt;code&gt;java-1.7.0-openjdk&lt;/code&gt; didn't, so it must be some external library.&lt;br&gt;
Running with SSL debugging, like &lt;code&gt;java -Djavax.net.debug=all Bla&lt;/code&gt;, printed a lot of output, where the interesting part is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;...
main, handling exception: java.security.ProviderException: java.security.KeyException
%% Invalidated:  [Session-1, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA]
main, SEND TLSv1 ALERT:  fatal, description = internal_error
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So it's definitely some weird error (not something like untrusted CA or key expiration).&lt;/p&gt;
&lt;h2&gt;Sysadmin Trickery&lt;/h2&gt;
&lt;p&gt;Thanks to putting my small snippet in an infinite loop, I could browse its &lt;code&gt;/proc&lt;/code&gt; directory and dig around.&lt;br&gt;
I was really interested in which libraries it was using, since it wasn't cURL (which worked).&lt;br&gt;
I executed something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; cat /proc/&lt;span class="k"&gt;$(&lt;/span&gt;pgrep -f Bla&lt;span class="k"&gt;)&lt;/span&gt;/maps  &lt;span class="p"&gt;|&lt;/span&gt; perl -a -ne &lt;span class="s1"&gt;&amp;#39;print $F[5],$/&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And got all of the memory-mapped files, which include loaded libraries. It looked like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[heap]
/lib64/ld-2.12.so
/lib64/libc-2.12.so
/lib64/libdbus-1.so.3.4.0
/lib64/libdl-2.12.so
/lib64/libgcc_s-4.4.7-20120601.so.1
/lib64/libglib-2.0.so.0.2800.8
/lib64/libgmodule-2.0.so.0.2800.8
/lib64/libgobject-2.0.so.0.2800.8
/lib64/libgthread-2.0.so.0.2800.8
/lib64/libm-2.12.so
/lib64/libnspr4.so
/lib64/libnss_dns-2.12.so
/lib64/libnss_files-2.12.so
/lib64/libplc4.so
/lib64/libplds4.so
/lib64/libpthread-2.12.so
/lib64/libresolv-2.12.so
/lib64/librt-2.12.so
/lib64/libz.so.1.2.3
[stack]
/tmp/hsperfdata_vagrant/26329
/usr/lib64/libgconf-2.so.4.1.5
/usr/lib64/libnss3.so
/usr/lib64/libnssutil3.so
/usr/lib64/libORBit-2.so.0.1.0
/usr/lib64/libsmime3.so
/usr/lib64/libssl3.so
/usr/lib64/libstdc++.so.6.0.13
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/bin/java
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/amd64/jli/libjli.so
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/amd64/libjava.so
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/amd64/libnet.so
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/amd64/libsunec.so
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/amd64/libverify.so
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/amd64/libzip.so
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/amd64/server/libjvm.so
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/ext/gnome-java-bridge.jar
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/ext/pulse-java.jar
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/ext/sunec.jar
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/ext/sunjce_provider.jar
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/ext/sunpkcs11.jar
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/jce.jar
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/jsse.jar
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/resources.jar
/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85.x86_64/jre/lib/rt.jar
/usr/lib/locale/locale-archive
[vdso]
[vsyscall]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The interesting bit is obviously &lt;code&gt;/usr/lib64/libssl3.so&lt;/code&gt;, so I wanted to see where it's coming from:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum provides /usr/lib64/libssl3.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which got me &lt;code&gt;nss&lt;/code&gt;.&lt;br&gt;
Upgrading &lt;code&gt;nss&lt;/code&gt; (&lt;code&gt;sudo yum upgrade nss&lt;/code&gt;) solved the problem.&lt;/p&gt;
&lt;h2&gt;Post-op tests&lt;/h2&gt;
&lt;p&gt;I was curious about why Java 1.8.0 works, and used the same looping trick to inspect its loaded libraries. Turns out it wasn't loading nss but rather using some internal SSL implementation.&lt;br&gt;
This was confirmed by &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1167153#c26"&gt;some comment&lt;/a&gt; on the RedHat bugtracker.&lt;/p&gt;
&lt;h2&gt;My solution&lt;/h2&gt;
&lt;p&gt;Since this problem only occurs in our Vagrant VMs (because the production machines are kept up to date, and the Vagrant ones are created from the same template over and over), I chose to use some Chef hackery:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nss&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;3.19.1-3.el6_6&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;only_if&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;vagrant?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Checking if current node is a Vagrant VM&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now everything is working.&lt;/p&gt;</content><category term="FOSS"></category><category term="Ramblings"></category><category term="Java"></category><category term="SSL"></category><category term="HTTP"></category><category term="CentOS"></category><category term="Linux"></category></entry><entry><title>Migrating Graphite's Dashboards</title><link href="https://blog.backslasher.net/graphite-migrate-dashboards.html" rel="alternate"></link><published>2015-08-10T12:00:00+02:00</published><updated>2015-08-10T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-08-10:/graphite-migrate-dashboards.html</id><summary type="html">&lt;p&gt;I just made a small script to migrate dashboards between two graphite servers.&lt;br&gt;
Couldn't find a similar one anywhere, so I thought I'd upload it.&lt;br&gt;
Note it's using &lt;a href="https://github.com/httprb/http"&gt;http&lt;/a&gt; for its HTTP calls. It looks real nice.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;old_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://old.server.com:1234&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;new_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://better.server.com:123&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;creds …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I just made a small script to migrate dashboards between two graphite servers.&lt;br&gt;
Couldn't find a similar one anywhere, so I thought I'd upload it.&lt;br&gt;
Note it's using &lt;a href="https://github.com/httprb/http"&gt;http&lt;/a&gt; for its HTTP calls. It looks real nice.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;old_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://old.server.com:1234&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;new_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://better.server.com:123&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;top&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;board_names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;old_server&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/dashboard/find/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;form&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dashboards&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;board_names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;dat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;old_server&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/dashboard/load/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;
    &lt;span class="n"&gt;state_str&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dat&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;state&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_json&lt;/span&gt; &lt;span class="c1"&gt;# :(&lt;/span&gt;
    &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_server&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/dashboard/save/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;form&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;state_str&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dat&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Graphite"></category><category term="Ruby"></category><category term="Scripts"></category></entry><entry><title>Sending mail on coredumps</title><link href="https://blog.backslasher.net/mail-coredumps.html" rel="alternate"></link><published>2015-07-23T09:00:00+02:00</published><updated>2015-07-23T09:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-07-23:/mail-coredumps.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I recently found out that some of our backend code suffers from memory-related ceashes, namely &lt;code&gt;SIGSEGV&lt;/code&gt; (a program tries to access memory it doesn't own). My initial response was to install and enable &lt;a href="https://fedorahosted.org/abrt/"&gt;Abrt&lt;/a&gt;, which is a collection of utilities used in RHEL. Ubuntu has a similar tool …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I recently found out that some of our backend code suffers from memory-related ceashes, namely &lt;code&gt;SIGSEGV&lt;/code&gt; (a program tries to access memory it doesn't own). My initial response was to install and enable &lt;a href="https://fedorahosted.org/abrt/"&gt;Abrt&lt;/a&gt;, which is a collection of utilities used in RHEL. Ubuntu has a similar tool called &lt;a href="https://wiki.ubuntu.com/Apport"&gt;Apport&lt;/a&gt;.&lt;br&gt;
I like this tool because it sends the root user an email after every coredump / kernel oops / kernel panic, with the coredump attached (configurable) and helpful information about the process's state (environment variables, open files, uid...).&lt;br&gt;
However, our issue was that our crashing processes are quite big (at least 2G of working memory) and might crash a lot, so taking coredumps for these processes was putting quite a strain on our servers' I/O. &lt;/p&gt;
&lt;h2&gt;A bit about Abrt&lt;/h2&gt;
&lt;p&gt;Abrt is built from multiple processes. The ones relevant to my issue were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;abrt-hook-ccpp&lt;/code&gt;, registered as the kernel's &lt;code&gt;core_pattern&lt;/code&gt;, meaning it's invoked whenever a process should coredump. This utility creates a "dump" directory under &lt;code&gt;/var/spool/abrt&lt;/code&gt; and puts the coredump and process trivia there&lt;/li&gt;
&lt;li&gt;&lt;code&gt;abrtd&lt;/code&gt;, a deamon that monitors said directory, and whenever a new dump directory appears, it reads the data inside and takes action (sends emails, reports to RHEL's support API...)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;abrt-ccpp&lt;/code&gt;, a service that runs on startup and registers &lt;code&gt;abrt-hook-ccpp&lt;/code&gt; as the &lt;code&gt;core_pattern&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;abrt-ccpp&lt;/code&gt; is registered by modifying &lt;code&gt;/proc/sys/kernel/core_pattern&lt;/code&gt;, which usually specifies the filename to write core dumps to. However, when specifying a path that starts with &lt;code&gt;|&lt;/code&gt;, it's instead treated as a program to execute on coredumps. The program's &lt;code&gt;STDIN&lt;/code&gt; contains the coredump, and the offending process's &lt;code&gt;/proc/&lt;/code&gt; directory is kept alive so you can collect the interesting data.&lt;br&gt;
I couldn't utilize Abrt and skip the coredump - &lt;code&gt;abrt-hook-ccpp&lt;/code&gt; refused to skip creating the coredump, and &lt;code&gt;abrtd&lt;/code&gt; refused to process directories without the coredump. I had to emulate the behaviour on my own script.&lt;/p&gt;
&lt;h2&gt;The Script&lt;/h2&gt;
&lt;p&gt;This is my crude replacement - it's supposed to be called from &lt;code&gt;core_pattern&lt;/code&gt;, so I also wrote a "service" to register it.&lt;br&gt;
It's written in Python (and not Ruby, for instance) because Python comes installed on every server I encountered so far (because it powers Apt and Yum).&lt;br&gt;
It basically harvests all interesting data from the failing process and emails it. The current list is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;cgroup&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cmdline&lt;/strong&gt;: The commmand used to start the process, arguments and everything&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;executable&lt;/strong&gt;: Path to the binary file being executed&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;signal&lt;/strong&gt;: The signal causing the process to coredump&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hostname&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;kernel&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pwd&lt;/strong&gt;: Current working directory for the faulting process&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;start_time&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;end_time&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uid&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dso_list&lt;/strong&gt;: Loaded dynamic libraries&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;environ&lt;/strong&gt;: Environment variables&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;limits&lt;/strong&gt;: Ulimits for the process&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;maps&lt;/strong&gt;: Allocated memory areas (including memory-mapped files)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;open_fds&lt;/strong&gt;: Open file descriptors (files, sockets, pipes...)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="c1"&gt;###########&lt;/span&gt;
&lt;span class="c1"&gt;# Nitz Abrt&lt;/span&gt;
&lt;span class="c1"&gt;###########&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# A crude emulation of the Abrt utility for monitoring and diagnosing segfaults&lt;/span&gt;
&lt;span class="c1"&gt;# Should be hooked from core_pattern - see your sysadmin&lt;/span&gt;
&lt;span class="c1"&gt;# http://blog.backslasher.net/mail-coredumps.html&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pwd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;syslog&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Usage: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%c&lt;/span&gt;&lt;span class="s1"&gt; %p &lt;/span&gt;&lt;span class="si"&gt;%u&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%g&lt;/span&gt;&lt;span class="s1"&gt; %t e&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;  number of signal causing dump&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%c&lt;/span&gt;&lt;span class="s1"&gt;  core file size soft resource limit of crashing process&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;%p  PID of dumped process&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%u&lt;/span&gt;&lt;span class="s1"&gt;  (numeric) real UID of dumped process&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%g&lt;/span&gt;&lt;span class="s1"&gt;  (numeric) real GID of dumped process&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;%t  time of dump, expressed as seconds since the Epoch, 1970-01-01 00:00:00 +0000 (UTC)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;e   ignored&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;Should be called from core_pattern&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;dump_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;proc_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;



&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proc_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_symlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proc_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_start_time&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proc_path&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_dso&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proc_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;maps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;list_dir_symlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;dirname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proc_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;link_hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;link_hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;link_hash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;())])&lt;/span&gt;

&lt;span class="n"&gt;exe_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;get_symlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;exe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fnmatch&lt;/span&gt;
&lt;span class="n"&gt;blacklist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*/php-fpm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# These executables are uninteresting&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;blacklist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;fnmatch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fnmatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exe_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; is blacklisted by pattern &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;. Ignoring&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exe_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;cgroup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cgroup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;cmdline&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cmdline&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\0&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;executable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;exe_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;signal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uname&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;kernel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uname&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;pid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;pwd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;get_symlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cwd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;start_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;get_start_time&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dump_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;uid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getpwuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pw_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;dso_list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;get_dso&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;environ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;environ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\0&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;limits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;limits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;maps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;maps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;open_fds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list_dir_symlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;data_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;())])&lt;/span&gt;

&lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;To:root&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;Subject:nabrt crash &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exe_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;data_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="n"&gt;pmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mail&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pmail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pmail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Bonus - modifying &lt;code&gt;STDIN&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Because &lt;code&gt;abrt-hook-ccpp&lt;/code&gt; takes its coredump from &lt;code&gt;STDIN&lt;/code&gt;, I thought I could still utilize it by calling it with a modified STDIN that contains very little.
This idea failed because &lt;code&gt;abrtd&lt;/code&gt; wouldn't work with a "corrupted" coredump, but I think it's a novel idea and a cute script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;head -c &lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt; &amp;lt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;          &lt;span class="c1"&gt;# Only take the first 5 MB from STDIN and pass it along&lt;/span&gt;
&lt;span class="nb"&gt;exec&lt;/span&gt; /usr/libexec/abrt-hook-ccpp &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# Become original hook&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I initially tried closing &lt;code&gt;STDIN&lt;/code&gt; completely, but turns out the kernel is only keeping the &lt;code&gt;/proc&lt;/code&gt; directory of the faulting process when that stream is open - it thinks you're done collecting diagnostics when you close that stream.&lt;/p&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="Scripts"></category><category term="Python"></category><category term="Email"></category></entry><entry><title>Using RPMBuild - My Shortlist</title><link href="https://blog.backslasher.net/rpmbuild.html" rel="alternate"></link><published>2015-07-22T08:00:00+02:00</published><updated>2015-07-22T08:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-07-22:/rpmbuild.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I was trying to tinker with &lt;a href="https://github.com/abrt/abrt"&gt;Abrt&lt;/a&gt;, a daemon in charge of collecting and diagnosing various crashes in RHEL (more on that in a different post).&lt;br&gt;
Because the crash hook is written in C (it was designed to be really quick), I couldn't use my usual method of …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I was trying to tinker with &lt;a href="https://github.com/abrt/abrt"&gt;Abrt&lt;/a&gt;, a daemon in charge of collecting and diagnosing various crashes in RHEL (more on that in a different post).&lt;br&gt;
Because the crash hook is written in C (it was designed to be really quick), I couldn't use my usual method of editing the actual files and adding debug prints etc. I had to recompile the package from source, which proved to be a non-trivial task. The documentation I found was separated over several locations so I thought I'd list my way here:&lt;/p&gt;
&lt;h2&gt;My Solution&lt;/h2&gt;
&lt;p&gt;Related articles from CentOS wiki:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wiki.centos.org/HowTos/SetupRpmBuildEnvironment"&gt;Build environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.centos.org/HowTos/RebuildSRPM"&gt;Rebuilding Source RPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1. Create a build VM&lt;/h3&gt;
&lt;p&gt;Building is still a messy process. If you don't feel like cleaning up manually, you can just utilize a VM (I have a Vagrant config just for that). It should be running the same OS version you're building for (in my case, CentOS 6.6)&lt;/p&gt;
&lt;h3&gt;2. Install build tools&lt;/h3&gt;
&lt;p&gt;I always install the package group "development tools" in addition to "rpm-build", which contains a script for building RPMs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo yum groupinstall &lt;span class="s1"&gt;&amp;#39;development tools&amp;#39;&lt;/span&gt;
sudo yum install rpm-build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also create a build root directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt; ! -d ~/rpmbuild &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; rm -r ~/rpmbuild &lt;span class="c1"&gt;# Delete dir if exists&lt;/span&gt;
mkdir -p ~/rpmbuild/&lt;span class="o"&gt;{&lt;/span&gt;BUILD,RPMS,SOURCES,SPECS,SRPMS&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;3. Grab source RPM&lt;/h3&gt;
&lt;p&gt;While it IS possible to build from real source (cloning the github repo for instance), I haven't had much luck with it. Even after generating the Makefile successfully, the build failed on some weird C syntax errors.&lt;br&gt;
For every binary RPM available from your repository, there should be a source RPM available as well - this one contains the source code and the metadata required to create the binary RPM. I use that RPM but to the source before building.&lt;br&gt;
While I couldn't activate a source repository (which is supposed to be a thing), I managed to hunt my source package down by modifying a URL I to match my OS/package. Maybe you'll have to do the same.&lt;br&gt;
Mine looks like:&lt;br&gt;
&lt;a href="http://vault.centos.org/6.6/os/Source/SPackages/abrt-2.0.8-26.el6.centos.src.rpm"&gt;http://vault.centos.org/6.6/os/Source/SPackages/abrt-2.0.8-26.el6.centos.src.rpm&lt;/a&gt;&lt;br&gt;
You need to download and install the downloaded package (&lt;strong&gt;without root&lt;/strong&gt;), which will deploy many files into your build root directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget &lt;span class="s1"&gt;&amp;#39;http://vault.centos.org/6.6/os/Source/SPackages/abrt-2.0.8-26.el6.centos.src.rpm&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
rpm -iv *.rpm &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="c1"&gt;# NO SUDO&lt;/span&gt;
rm *.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;4. Modify source&lt;/h3&gt;
&lt;p&gt;You can now inspect the files and modify whichever you want. Poke around in &lt;code&gt;~/rpmbuild/SOURCES&lt;/code&gt;. I usually create a git repo in that directory before tinkering so I can easily track my customizations and revert if I mess something up.&lt;/p&gt;
&lt;h3&gt;5. Build&lt;/h3&gt;
&lt;p&gt;We now use the rpmbuild script to build the package by pointing it to a &lt;code&gt;spec&lt;/code&gt; file. It &lt;em&gt;should&lt;/em&gt; handle everything and leave you with a collection of binary RPMs, but obviously it might fail.&lt;br&gt;
I had an issue that even though I got the CentOS source package and ran it on a CentOS machine, the version was tagged as &lt;code&gt;el6&lt;/code&gt; (Enterprise Linux 6), and not &lt;code&gt;el6.centos&lt;/code&gt;, which is the tag that all CentOS packages that come from the official repos use. This is important because the dependencies of packages are often hardcoded to this tag, so trying to install those RPMs will cause it to complain (e.g. that you have &lt;code&gt;abrt-libs.2.0.8-30.el6.centos&lt;/code&gt; and not &lt;code&gt;abrt-libs.2.0.8-30.el6&lt;/code&gt;).&lt;br&gt;
To solve it, you should append something like &lt;code&gt;--define 'dist .el6.centos'&lt;/code&gt; to your rpmbuild command.&lt;br&gt;
Mine looked like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rpmbuild -ba ~/rpmbuild/SPECS/abrt.spec --define &lt;span class="s1"&gt;&amp;#39;dist .el6.centos&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;6. Install&lt;/h3&gt;
&lt;p&gt;After you're done building, you can now install the RPMS available at &lt;code&gt;~/rpmbuild/RPMS&lt;/code&gt;. You might want to install the original repository packages first, just to have it install all of the external prerequisites (e.g. &lt;code&gt;gdb&lt;/code&gt;) without bothering you. Use &lt;code&gt;sudo rpm -Uv&lt;/code&gt; when installing, so you'll get a report of the files being installed / replaced. That way you can make sure your modified binaries are there.&lt;/p&gt;</content><category term="FOSS"></category><category term="RPM"></category><category term="Linux"></category><category term="CentOS"></category><category term="RHEL"></category><category term="Scripts"></category><category term="Building"></category></entry><entry><title>Sending HBase metrics to Graphite using Python</title><link href="https://blog.backslasher.net/hbase-graphite-python.html" rel="alternate"></link><published>2015-07-15T08:00:00+02:00</published><updated>2015-07-15T08:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-07-15:/hbase-graphite-python.html</id><summary type="html">&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;Although HBase is a crucial component in our current stack, the monitoring for it was quite incomplete. We only had general "is it running?" monitoring, with some very application-specific tests ("make sure scanning this table doesn't take too long").&lt;br&gt;
By sending detailed metrics on our HBase tables/regions …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;Although HBase is a crucial component in our current stack, the monitoring for it was quite incomplete. We only had general "is it running?" monitoring, with some very application-specific tests ("make sure scanning this table doesn't take too long").&lt;br&gt;
By sending detailed metrics on our HBase tables/regions/servers to Graphite, we don't only get to monitor these components - we can also detect trends ("Table ABC has 500 regions and yesterday it had 2", or "This region gets 30 times as many reads as the other ones. Is our key selection wise?") before they become critical issues. It also makes for very nice graphs.&lt;br&gt;
HBase has several connectors for monitoring available out of the box, but sadly none for Graphite. I saw some projects that can bridge between Graphite and HBase's JMX interface, but JMX seems really complicated and enterprise-y, and I found I can get everything from the HBase WebUI.&lt;br&gt;
I settled for a Python script that polls the local HBase server webUI every 5 seconds or so, parses the JSON that contains the JMX data, collects interesting (IMO) data and sends it to our StatsD server, which sums everything up and makes sure it gets to Graphite.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/hbase-graphite-python/graph.png"&gt;&lt;/p&gt;
&lt;h2&gt;The script&lt;/h2&gt;
&lt;p&gt;I decided to share this project as a GitHub repository.&lt;br&gt;
&lt;strong&gt;&lt;a href="https://github.com/BackSlasher/monitor-hbase"&gt;Check it out!&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
It includes setup instructions, example usage etc.&lt;/p&gt;
&lt;h2&gt;Interesting things&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I managed to get JMX to work (mainly because I won't be defeated by some stupid monitoring framework), but the bother of having a Java project (compiling, installing Java, the JVM overhead...) really takes the fun out of it. It's also much easier to browse around in the HTTP/JSON endpoint.&lt;/li&gt;
&lt;li&gt;There are many more interesting metrics to be found in this API. I chose mine by stalking our resident HBase expert and noting what he's interested in when looking in the webUI.&lt;/li&gt;
&lt;li&gt;Formatting region names is a delicate process, as they're actually named after the first and last key they're serving, and there's no guarantee that keys are printable strings. I managed to get the names to look like the ones on the webUI, but I might have missed something. The relevant code looks something like this:&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;rawname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nameAsString&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;unicode-escape&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tbl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rawname&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;reg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rawname&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As always, please drop me a line if you find it useful!&lt;/p&gt;</content><category term="FOSS"></category><category term="PYthon"></category><category term="Scripts"></category><category term="HBase"></category><category term="Monitoring"></category><category term="Graphite"></category><category term="StatsD"></category></entry><entry><title>Preparing Certificate files for Nginx</title><link href="https://blog.backslasher.net/nginx-crt-script.html" rel="alternate"></link><published>2015-07-05T15:00:00+02:00</published><updated>2015-07-05T15:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-07-05:/nginx-crt-script.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;When installing SSL certificates for nginx, assuming you're using certificate hierarchy (and not a self-signed ceritificate), you're required to concatenate all of the certificate files (&lt;code&gt;*.crt&lt;/code&gt;) to a single file, starting from your site's certificate up to the root certificate.&lt;br&gt;
Today I got this bundle to prepare, courtesy …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;When installing SSL certificates for nginx, assuming you're using certificate hierarchy (and not a self-signed ceritificate), you're required to concatenate all of the certificate files (&lt;code&gt;*.crt&lt;/code&gt;) to a single file, starting from your site's certificate up to the root certificate.&lt;br&gt;
Today I got this bundle to prepare, courtesy of Comodo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;AddTrustExternalCARoot.crt
best_site.crt
COMODORSAAddTrustCA.crt
COMODORSADomainValidationSecureServerCA.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which certificate should follow my site's? Unclear, &lt;a href="https://support.comodo.com/index.php?/Default/Knowledgebase/Article/View/620/0/which-is-root-which-is-intermediate"&gt;even from their documentation&lt;/a&gt;.&lt;br&gt;
I made this ruby script, which uses some certificate metadata to recognize the relationship between the provided certificates.&lt;/p&gt;
&lt;h3&gt;The Script&lt;/h3&gt;
&lt;p&gt;Provide the CRT file names as arguments, save the script's output as the new CRT. The proper order is printed to &lt;code&gt;STDERR&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;openssl&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Load and parse files&lt;/span&gt;
&lt;span class="n"&gt;crt_files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ARGV&lt;/span&gt; &lt;span class="c1"&gt;# Read all arguments as files&lt;/span&gt;
&lt;span class="n"&gt;crts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crt_files&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;cert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OpenSSL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;X509&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Certificate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oid&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;authorityKeyIdentifier&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;sf&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;sf&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^keyid/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^keyid:/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="ss"&gt;son&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oid&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;subjectKeyIdentifier&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Find the root, where parent is son&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:parent&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:son&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;certs_sorted&lt;/span&gt;&lt;span class="o"&gt;=[]&lt;/span&gt;
&lt;span class="n"&gt;new_certs&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# process new_certs until we&amp;#39;re out&lt;/span&gt;
&lt;span class="kp"&gt;loop&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;certs_sorted&lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="n"&gt;new_certs&lt;/span&gt;
  &lt;span class="n"&gt;new_new_certs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_certs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;nc&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;crts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:parent&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="n"&gt;nc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:son&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniq&lt;/span&gt;
  &lt;span class="n"&gt;filtered_certs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_new_certs&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;new_certs&lt;/span&gt;
  &lt;span class="n"&gt;new_certs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filtered_certs&lt;/span&gt;
  &lt;span class="k"&gt;break&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;new_certs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty?&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;certs_sorted&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse!&lt;/span&gt; &lt;span class="c1"&gt;# Reverse&lt;/span&gt;

&lt;span class="no"&gt;STDERR&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Certificate order: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;certs_sorted&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;certs_sorted&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Interesting bits&lt;/h3&gt;
&lt;p&gt;I'm not sure if the method I'm using to construct the certificate tree is standard SSL stuff or unique to Comodo, but I noticed the certificates reference their parents in the &lt;code&gt;authorityKeyIdentifier&lt;/code&gt; extension.&lt;br&gt;
Oddly enough, they don't reference the parent's serial number, but some other serial-like value that I find under &lt;code&gt;subjectKeyIdentifier&lt;/code&gt; of the parent certificate.&lt;br&gt;
The loop isn't very interesting, but still full of neat ruby stuff like limited flattening, array subtraction and other stuff that "decent" languages would never allow.&lt;/p&gt;</content><category term="FOSS"></category><category term="nginx"></category><category term="security"></category><category term="ssl"></category><category term="scripts"></category><category term="ruby"></category></entry><entry><title>Installing Growroot on CentOS</title><link href="https://blog.backslasher.net/growroot-centos.html" rel="alternate"></link><published>2015-07-02T09:00:00+02:00</published><updated>2015-07-02T09:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-07-02:/growroot-centos.html</id><summary type="html">&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I currently work with CentOS on Amazon EC2. As I &lt;a href="https://blog.backslasher.net/resizing-aws-root-centos-hvm.html"&gt;previously written&lt;/a&gt;, The HVM version of the AMI is created with a partitioned disk, instead of having the filesystem written directly on the block device.&lt;br&gt;
Problem is, when creating a root device bigger than the default (8G), you …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I currently work with CentOS on Amazon EC2. As I &lt;a href="https://blog.backslasher.net/resizing-aws-root-centos-hvm.html"&gt;previously written&lt;/a&gt;, The HVM version of the AMI is created with a partitioned disk, instead of having the filesystem written directly on the block device.&lt;br&gt;
Problem is, when creating a root device bigger than the default (8G), you have to resize both the partition and the filesystem. While the filesystem can be resized online, the partition can't.&lt;br&gt;
The issue looks something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;lsblk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Without a partition:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
xvde    202:64   0   30G  0 disk /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With a partition:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
xvda    202:0    0  30G  0 disk
└─xvda1 202:1    0   8G  0 part /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The partition can actually be resized (as in deleted and recreated), but the updated partition table won't be available because the partition is in use (and you can't unmount the root partition).&lt;/p&gt;
&lt;h2&gt;The ugly solution&lt;/h2&gt;
&lt;p&gt;Before learning of a better way, I wrote this script. It checks if the root device is a partition, and if so whether it's filling up the parent disk.
If not, it deletes the root partition and recreates it to fill up the entire disk. Although it has been tested, I don't think it's a good idea to use it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; BEFORE PARTITION RESIZE
&lt;span class="nv"&gt;ROOT_DEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;df / &lt;span class="p"&gt;|&lt;/span&gt; tail -n1 &lt;span class="p"&gt;|&lt;/span&gt; cut -f1 -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;ROOT_TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;lsblk &lt;span class="nv"&gt;$ROOT_DEVICE&lt;/span&gt; -no TYPE&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ROOT_TYPE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;part&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="c1"&gt;# find the parent disk&lt;/span&gt;
    &lt;span class="nv"&gt;ROOT_MAJMIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;lsblk &lt;span class="nv"&gt;$ROOT_DEVICE&lt;/span&gt; -no MAJ:MIN &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;ROOT_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat /sys/dev/block/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_MAJMIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/size&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;PARENT_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat /sys/dev/block/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_MAJMIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/../size&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;ROOT_START&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat /sys/dev/block/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_MAJMIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/start&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;PARENT_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat /sys/dev/block/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_MAJMIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/../uevent &lt;span class="p"&gt;|&lt;/span&gt; perl -ne &lt;span class="s1"&gt;&amp;#39;print $1,$/ if /^DEVNAME=(.+)$/&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Check if the same size&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;$PARENT_SIZE&lt;/span&gt; - &lt;span class="nv"&gt;$ROOT_START&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$ROOT_SIZE&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Recreating partition &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_DEVICE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; on /dev/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PARENT_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, starting in &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_START&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;u\np\nd\nn\np\n1\n&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_START&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\n\na\n1\np\nw\n&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; fdisk /dev/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PARENT_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        reboot &lt;span class="c1"&gt;# &amp;lt;-- REBOOTING HERE&lt;/span&gt;
        sleep &lt;span class="m"&gt;60&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Partition &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_DEVICE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is fine&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_DEVICE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is not a partition - its &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT_TYPE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; AFTER PARTITION RESIZE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And I have a similar one for the filesystem:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;ROOT_DEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;df / &lt;span class="p"&gt;|&lt;/span&gt; tail -n1 &lt;span class="p"&gt;|&lt;/span&gt; cut -f1 -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;ROOT_DEVICE_SIZE_B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;blockdev --getsize64 &lt;span class="nv"&gt;$ROOT_DEVICE&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;ROOT_FS_BLOCK_COUNT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tune2fs -l &lt;span class="nv"&gt;$ROOT_DEVICE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; perl -ne &lt;span class="s1"&gt;&amp;#39;print $1,$/ if /Block count:\s+(\d+)$/&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;ROOT_FS_BLOCK_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tune2fs -l &lt;span class="nv"&gt;$ROOT_DEVICE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; perl -ne &lt;span class="s1"&gt;&amp;#39;print $1,$/ if /Block size:\s+(\d+)$/&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# If the root FS is smaller in at least one block size than the root device size&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$ROOT_FS_BLOCK_COUNT&lt;/span&gt; +1 &lt;span class="o"&gt;)&lt;/span&gt; * &lt;span class="nv"&gt;$ROOT_FS_BLOCK_SIZE&lt;/span&gt; &amp;lt; &lt;span class="nv"&gt;$ROOT_DEVICE_SIZE_B&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; resizing filesystem
    resize2fs &lt;span class="nv"&gt;$ROOT_DEVICE&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;The proper solution&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Update 21.04.16:&lt;/strong&gt; Thanks to Trevor's tip, I switched from &lt;code&gt;perl&lt;/code&gt; to &lt;code&gt;sed&lt;/code&gt;, saving us the need of installing a package (a big win for Linux sysadmins).&lt;/p&gt;
&lt;p&gt;Just before deploying my script, I stumbled upon &lt;a href="http://rpm.pbone.net/index.php3/stat/4/idpl/25071492/dir/redhat_el_6/com/dracut-modules-growroot-0.20-2.el6.noarch.rpm.html"&gt;dracut-modules-growroot&lt;/a&gt;, which (like most things cloud) was imported from &lt;a href="https://launchpad.net/ubuntu/utopic/+package/cloud-initramfs-growroot"&gt;Ubuntu&lt;/a&gt;.&lt;br&gt;
It's available via EPEL, and when installed to the initramfs, it enlarges the root partition (if needed) before actually mounting it. This saves you the reboot, because when in the initramfs stage, the root partition isn't really mounted, so it can be modified easily.&lt;br&gt;
The steps I use in my image are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install all available updates&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum update -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the EPEL helper package&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum install -y epel-release
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;cloud-init&lt;/code&gt; and &lt;code&gt;dracut-modules-growroot&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum install -y cloud-init dracut-modules-growroot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This has to be done after installing &lt;code&gt;epel-release&lt;/code&gt;, because otherwise YUM won't look in the EPEL repository, where dracut-modules-growroot is available.&lt;br&gt;
Cloud Init is useful in running startup scripts, but it also has an &lt;a href="https://cloudinit.readthedocs.org/en/latest/topics/modules.html?highlight=growpart#module-cloudinit.config.cc_growpart"&gt;enabled-by-default module&lt;/a&gt; (great documentation, right?) that resizes the root filesystem (&lt;code&gt;resize2fs&lt;/code&gt;-like) if its block device is bigger.&lt;br&gt;
You can avoid installing it, but then you'll have to resize the filesystem on your own (see my second ugly script).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rebuild &lt;strong&gt;all&lt;/strong&gt; initramfs images.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rpm -qa kernel &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/^kernel-//&amp;#39;&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; xargs -I &lt;span class="o"&gt;{}&lt;/span&gt; dracut -f /boot/initramfs-&lt;span class="o"&gt;{}&lt;/span&gt;.img &lt;span class="o"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is very important. Without rebuilding the initramfs images, the module won't be available and nothing will get done.&lt;br&gt;
Also note that I'm explicitly rebuilding an image for every kernel package installed - this is because we might be running kernel A, and just installed newer kernel B with &lt;code&gt;yum update -y&lt;/code&gt;, so if I only used &lt;code&gt;dracut -f&lt;/code&gt; only kernel A's image will be rebuilt, and next time we'll boot from kernel B's image, that doesn't have the module.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The full script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum update -y
yum install -y epel-release
yum install -y cloud-init dracut-modules-growroot
rpm -qa kernel &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/^kernel-//&amp;#39;&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; xargs -I &lt;span class="o"&gt;{}&lt;/span&gt; dracut -f /boot/initramfs-&lt;span class="o"&gt;{}&lt;/span&gt;.img &lt;span class="o"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;You can easily compare the sizes of your root block device, it's parent and the root filesystem itself by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; lsblk&lt;span class="p"&gt;;&lt;/span&gt;lsblk
&lt;span class="nb"&gt;echo&lt;/span&gt; df&lt;span class="p"&gt;;&lt;/span&gt; df -h /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A successful result should look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;lsblk&lt;/span&gt;
&lt;span class="err"&gt;NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT&lt;/span&gt;
&lt;span class="err"&gt;xvda    202:0    0  30G  0 disk&lt;/span&gt;
&lt;span class="err"&gt;└─xvda1 202:1    0  30G  0 part /&lt;/span&gt;
&lt;span class="err"&gt;df&lt;/span&gt;
&lt;span class="err"&gt;Filesystem      Size  Used Avail Use% Mounted on&lt;/span&gt;
&lt;span class="err"&gt;/dev/xvda1       30G  963M   27G   4% /&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the script completes successfully but the partition isn't magically resized, you can use this to search for growroot's files in the initrd image that was used to boot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo lsinitrd &lt;span class="p"&gt;|&lt;/span&gt; grep grow
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For me, it looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;-rwxr-xr-x   1 root     root          133 Nov 22  2013 cmdline/99growroot-dummy.sh
-rwxr-xr-x   1 root     root         2167 Nov 22  2013 pre-mount/99growroot.sh
-rwxr-xr-x   1 root     root        16069 Nov 22  2013 usr/bin/growpart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the files are there but still no magic, try fishing in &lt;code&gt;/var/log/{messages,secure}&lt;/code&gt; or &lt;code&gt;dmesg&lt;/code&gt;. I always had everything working if the files were actually there.&lt;/p&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="Virtualization"></category><category term="AWS"></category><category term="Disk"></category><category term="CentOS"></category></entry><entry><title>Chroot Snippet</title><link href="https://blog.backslasher.net/chroot.html" rel="alternate"></link><published>2015-06-08T11:30:00+02:00</published><updated>2015-06-08T11:30:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-06-08:/chroot.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Some time ago, my PC wouldn't boot.&lt;br&gt;
This was my fault, as I needed to resize some partition, and resizing in Linux really means deleting the partition and creating a new one in the same place. I forgot to assign the partition the same UUID, which caused Ubuntu …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Some time ago, my PC wouldn't boot.&lt;br&gt;
This was my fault, as I needed to resize some partition, and resizing in Linux really means deleting the partition and creating a new one in the same place. I forgot to assign the partition the same UUID, which caused Ubuntu to resent it.&lt;br&gt;
I was lazy and tried using automated boot fixers, which made things worse, and eventually had to go and operate manually.&lt;br&gt;
During the surgery, I learnt about chrooting and found this nifty snippet (from &lt;a href="http://ubuntuforums.org/showthread.php?t=2264947"&gt;here&lt;/a&gt;).
Since I've been using it a lot since then, I thought I'd upload it.&lt;/p&gt;
&lt;h2&gt;The script&lt;/h2&gt;
&lt;p&gt;Note that I'm first unlocking LUKS (disk encryption) and setting up the LVM.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo su
cryptsetup --type luks open /dev/sda3 sda3_crypt
vgchange -a y
mkdir /mnt/system
mount /dev/mapper/ubuntu--vg-root /mnt/system
&lt;span class="k"&gt;for&lt;/span&gt; i in /dev/pts /dev /proc /sys&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; mount -B &lt;span class="nv"&gt;$i&lt;/span&gt; /mnt/system&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
chroot /mnt/system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;The Story pt.2&lt;/h2&gt;
&lt;p&gt;Eventaully, I figured out that &lt;code&gt;/etc/crypttab&lt;/code&gt;, used by Ubuntu's GRUB scripts to unlock LUKS disks, doesn't support quoting. Unlike everywhere else, where UUIDs are referenced like &lt;code&gt;UUID="da30f935-a684-4415-b6ca-e991cbcc52dc"&lt;/code&gt;, this file has to look like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sda3_crypt &lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;da30f935-a684-4415-b6ca-e991cbcc52dc none luks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So annoying.&lt;/p&gt;</content><category term="FOSS"></category><category term="Troubleshooting"></category><category term="Linux"></category></entry><entry><title>Managing EC2 reservations with Scripts</title><link href="https://blog.backslasher.net/ec2-reservations.html" rel="alternate"></link><published>2015-06-07T16:00:00+02:00</published><updated>2015-06-07T16:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-06-07:/ec2-reservations.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Since we tend to hold our AWS EC2 VMs for a long time, we usually reserve them.&lt;br&gt;
Reservations are like pre-buying instances - you pay AWS ahead of time for (let's say) a year, and get a discounted price.&lt;br&gt;
The insterestng thing about EC2 reservations is that they aren't …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Since we tend to hold our AWS EC2 VMs for a long time, we usually reserve them.&lt;br&gt;
Reservations are like pre-buying instances - you pay AWS ahead of time for (let's say) a year, and get a discounted price.&lt;br&gt;
The insterestng thing about EC2 reservations is that they aren't tied to a specific instance.&lt;br&gt;
&lt;strong&gt;Pro:&lt;/strong&gt; You can terminate one instance and create another one of the same type, and still enjoy the discounted price of the reservation.&lt;br&gt;
&lt;strong&gt;Con:&lt;/strong&gt; There is no way to tell whether a specific instance is reserved or not. This means that when resizing/moving a reserved instance, locating and modifying the reservation is up to you.  &lt;/p&gt;
&lt;p&gt;To combat this issue, I made the following changes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;All instances have a tag named "Reserve", which contains "True" or "False" (depending on whether you want to reserve that instance, because it's going to stay with you for a while).&lt;/li&gt;
&lt;li&gt;I run a script once in a while, which checks whether our reservations match our actual instances. I buy/modify our reservations accordingly.&lt;/li&gt;
&lt;li&gt;I'm planning to automate the purchase of reservations using another script. Since this involves spending money, I'm more hesitant to automate it.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;The script&lt;/h2&gt;
&lt;p&gt;This script outputs a csv/yaml report of instances and reservations, grouped by regions, availability zones, instance types, VPC and OS type (we only have Windows and Linux instances).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class="c1"&gt;# Monkeypatching&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Array&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;to_h&lt;/span&gt;
    &lt;span class="no"&gt;Hash&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;to_bool&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/(true|t|yes|y|1)$/i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty?&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/(false|f|no|n|0)$/i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="no"&gt;ArgumentError&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;invalid value for Boolean: &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;optparse&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="ss"&gt;:&amp;#39;csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="no"&gt;OptionParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;banner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: find-reservations.rb [options]&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-fFORMAT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--format=FORMAT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Format (csv/yaml)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:format&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse!&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aws-sdk-core&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="o"&gt;=[]&lt;/span&gt;
&lt;span class="n"&gt;reservations&lt;/span&gt;&lt;span class="o"&gt;=[]&lt;/span&gt;

&lt;span class="n"&gt;cp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Aws&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;EC2&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="ss"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# Go over all regions&lt;/span&gt;
&lt;span class="n"&gt;cp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe_regions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;region_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Aws&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;EC2&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="ss"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;
  &lt;span class="n"&gt;reservations&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe_reserved_instances&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_hash&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:reserved_instances&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:state&lt;/span&gt;&lt;span class="o"&gt;]=~&lt;/span&gt;&lt;span class="sr"&gt;/active|payment-pending/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe_instances&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_hash&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:reservations&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:instances&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:state&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="ss"&gt;:code&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Only add instances with &amp;quot;Reserve=True&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:tags&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;any?&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:key&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Reserve&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:value&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_bool&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="n"&gt;res_group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;reservations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group_by&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|[&lt;/span&gt;
  &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:availability_zone&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;#region&lt;/span&gt;
  &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:instance_type&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;#instance type&lt;/span&gt;
  &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:product_description&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;include?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Amazon VPC&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;# is_vpc&lt;/span&gt;
  &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:product_description&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="sr"&gt;/Linux/i&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt; &lt;span class="c1"&gt;#is_windows&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;
  &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:instance_count&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;:+&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;# current instances&lt;/span&gt;
  &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:end&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="c1"&gt;# next expiration&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_h&lt;/span&gt;
&lt;span class="n"&gt;ins_group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;instances&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group_by&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|[&lt;/span&gt;
  &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:placement&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="ss"&gt;:availability_zone&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:instance_type&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:vpc_id&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:platform&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/windows/i&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_h&lt;/span&gt;

&lt;span class="n"&gt;aggr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ins_group&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;res_group&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ins_group&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res_group&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="ss"&gt;:instances&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;:reservations&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;:surplus&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="ss"&gt;:next_expiration&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res_group&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;]||[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;tbl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;aggr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;is_vpc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;is_windows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Sort table&lt;/span&gt;
&lt;span class="n"&gt;tbl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_by!&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="c1"&gt;# Export&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:format&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;downcase&lt;/span&gt;
  &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;yaml&amp;#39;&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;yaml&amp;#39;&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;tbl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_yaml&lt;/span&gt;
  &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;csv&amp;#39;&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;csv&amp;#39;&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tbl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;tbl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bad format&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;eu-west-1c,c3.large,false,false,3,3,0,2015-06-23 12:47:31 UTC
us-east-1a,c3.2xlarge,false,false,1,1,0,2015-11-04 15:41:34 UTC
us-east-1a,c3.2xlarge,true,false,3,1,-2,2015-09-30 13:10:08 UTC
us-east-1b,c3.large,true,false,10,10,0,2016-01-27 14:03:56 UTC
us-east-1b,m3.large,true,false,5,0,-5,?
us-west-2a,c3.2xlarge,true,false,3,2,-1,2016-01-26 14:07:23 UTC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Interesting things&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I monkey patched &lt;code&gt;Array#to_h&lt;/code&gt; (which is present in ruby 2), and &lt;code&gt;String#to_bool&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Note the way I'm collecting data from all regions. I first create a client on &lt;code&gt;us-east-1&lt;/code&gt; only to collect the regions using &lt;code&gt;describe_regions.regions.map{|m|m.region_name}&lt;/code&gt;, and for each region I'm creating a new client and collecting the data from that region.&lt;/li&gt;
&lt;li&gt;When sorting the table, I can't sort by the actual values (e.g. &lt;code&gt;tbl.sort_by!{|r|r.values}&lt;/code&gt;), because I have boolean values and booleans can't be compared (try running &lt;code&gt;false&amp;gt;true&lt;/code&gt; and see what happens), so I used the string equivalent of all values (&lt;code&gt;tbl.sort_by!{|r|r.values.collect{|v|v.to_s}}&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;</content><category term="FOSS"></category><category term="AWS"></category><category term="EC2"></category><category term="Scripts"></category><category term="Ruby"></category></entry><entry><title>Appending Newline to File Ends with Ruby</title><link href="https://blog.backslasher.net/ruby-newline-file.html" rel="alternate"></link><published>2015-05-13T10:00:00+02:00</published><updated>2015-05-13T10:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-05-13:/ruby-newline-file.html</id><summary type="html">&lt;p&gt;I recently took over managing some config files from my dev colleagues.
I was extremely annoyed to be reminded that Notepad (Windows' text editor) does 2 major Unix-incompatible things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CRLF &lt;a href="http://en.wikipedia.org/wiki/Newline"&gt;line ending&lt;/a&gt; (&lt;code&gt;\r\n&lt;/code&gt; and not &lt;code&gt;\n&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;No newline at the end of file, which is something of a nicety …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;I recently took over managing some config files from my dev colleagues.
I was extremely annoyed to be reminded that Notepad (Windows' text editor) does 2 major Unix-incompatible things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CRLF &lt;a href="http://en.wikipedia.org/wiki/Newline"&gt;line ending&lt;/a&gt; (&lt;code&gt;\r\n&lt;/code&gt; and not &lt;code&gt;\n&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;No newline at the end of file, which is something of a nicety to help process files (allows you to assume each line ends with &lt;code&gt;\n&lt;/code&gt;).&lt;br&gt;
  We can see &lt;code&gt;vim&lt;/code&gt; complaigining about it:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/ruby-newline-file/noeol-vim.png"&gt;&lt;br&gt;
  And &lt;code&gt;git&lt;/code&gt; too:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/ruby-newline-file/noeol-git.png"&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Issue 1 is easily solved with &lt;code&gt;dos2unix&lt;/code&gt;, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find -not -path &lt;span class="s1"&gt;&amp;#39;*/.git/*&amp;#39;&lt;/span&gt; -type f &lt;span class="p"&gt;|&lt;/span&gt; xargs dos2unix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Issue 2 is a little bit more challenging, and I wrote this ruby oneliner for it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;**/**&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/\n$/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Works nicely.&lt;/p&gt;</content><category term="FOSS"></category><category term="Script"></category><category term="Ruby"></category><category term="Windows"></category><category term="Linux"></category></entry><entry><title>Init file for HBase Thrift Server</title><link href="https://blog.backslasher.net/thrift-init.html" rel="alternate"></link><published>2015-04-29T12:00:00+02:00</published><updated>2015-04-29T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-04-29:/thrift-init.html</id><summary type="html">&lt;p&gt;As part of our HBase setup, we run &lt;a href="http://wiki.apache.org/hadoop/Hbase/ThriftApi"&gt;Thrift servers&lt;/a&gt;. This is pretty simple, except for the init files.&lt;br&gt;
Since we're running Thrift standalone (and not as part of a full HBase server), I couldn't find a perfect fit from googling.&lt;br&gt;
I eventually settled for &lt;a href="https://github.com/chrisglass/puppet-hadoop-modules/blob/master/modules/adobe-hbase/templates/service/hbase-thrift.erb"&gt;this puppet template&lt;/a&gt;, but it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As part of our HBase setup, we run &lt;a href="http://wiki.apache.org/hadoop/Hbase/ThriftApi"&gt;Thrift servers&lt;/a&gt;. This is pretty simple, except for the init files.&lt;br&gt;
Since we're running Thrift standalone (and not as part of a full HBase server), I couldn't find a perfect fit from googling.&lt;br&gt;
I eventually settled for &lt;a href="https://github.com/chrisglass/puppet-hadoop-modules/blob/master/modules/adobe-hbase/templates/service/hbase-thrift.erb"&gt;this puppet template&lt;/a&gt;, but it had a big deficiency - no support for &lt;code&gt;status&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;A tiny bit about init&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Init"&gt;SysVInit&lt;/a&gt; is the old-school way of managing services in Linux (and Unix).&lt;br&gt;
Every service has an "init script", located in &lt;code&gt;/etc/init.d/SERVICENAME&lt;/code&gt;, which is in charge of controlling the sevice.&lt;br&gt;
It is called by using &lt;code&gt;service SERVICENAME ACTION&lt;/code&gt;, where every script is free to define its own actions, but the standard ones are &lt;code&gt;start&lt;/code&gt;,&lt;code&gt;stop&lt;/code&gt;,&lt;code&gt;restart&lt;/code&gt;,&lt;code&gt;status&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Why &lt;code&gt;status&lt;/code&gt; matters&lt;/h3&gt;
&lt;p&gt;Using &lt;code&gt;status&lt;/code&gt; is the best way of checking whether a service is alive.&lt;br&gt;
It could be a sysadmin checking for issues, Nagios making sure the service is OK, or a configuration management tool checking whether it should start the service.&lt;br&gt;
Just for fun, here is how Chef uses it. I quote from the holy repo of &lt;a href="https://github.com/chef/chef"&gt;Chef&lt;/a&gt;, file &lt;code&gt;lib/chef/provider/service/simple.rb&lt;/code&gt;, verse 130:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;shell_out&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;default_init_command&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exitstatus&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="vi"&gt;@current_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;running&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@new_resource&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is running&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So as long as &lt;code&gt;service SERVICENAME status&lt;/code&gt; exits successfully (exit code 0), Chef thinks the service is running.&lt;/p&gt;
&lt;h3&gt;Implementing &lt;code&gt;status&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Since I'm using CentOS 6.5, my common service functions file (&lt;code&gt;/etc/init.d/functions&lt;/code&gt;) is old, so it's not creating new pids (&lt;code&gt;--pidfile&lt;/code&gt; only checks for an existing file, not creating a new one) and it can't rename the process (I've heard of a magical &lt;code&gt;--name&lt;/code&gt; parameter, but can't find it in my file).&lt;br&gt;
Because of that, I can't find the process after starting it, so I can't make sure it's still alive.
After digging around in the HBase code, I found out that HBase keeps PID files.&lt;br&gt;
&lt;code&gt;bin/hbase-daemon.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;start&lt;span class="o"&gt;)&lt;/span&gt;
  mkdir -p &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HBASE_PID_DIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$pid&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;kill&lt;/span&gt; -0 &lt;span class="sb"&gt;`&lt;/span&gt;cat &lt;span class="nv"&gt;$pid&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; &amp;gt; /dev/null &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$command&lt;/span&gt; running as process &lt;span class="sb"&gt;`&lt;/span&gt;cat &lt;span class="nv"&gt;$pid&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;.  Stop it first.
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All I needed was to use this pidfile in my init script. I accomplished this by replicating the pidfile-building logic in my init script.&lt;br&gt;
It looks something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;HBASE_PID_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/
&lt;span class="nv"&gt;HBASE_IDENT_STRING&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOSTNAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;thrift
&lt;span class="nv"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HBASE_PID_DIR&lt;/span&gt;/hbase-&lt;span class="nv"&gt;$HBASE_IDENT_STRING&lt;/span&gt;-&lt;span class="nv"&gt;$command&lt;/span&gt;.pid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now I can implement the status check like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;status&lt;span class="o"&gt;)&lt;/span&gt;
  status -p &lt;span class="nv"&gt;$pid&lt;/span&gt; java
  &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that the process name is &lt;code&gt;java&lt;/code&gt;. This is imperfect because the thrift process might die and another java process might take its place, but I don't find it too much of a risk for now. I might modify it later.&lt;/p&gt;
&lt;h3&gt;The Result&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/BackSlasher/7510adb69c73dbee7894"&gt;The full file&lt;/a&gt; is stored as a gist, but be warned - it's a Chef template!&lt;br&gt;
You can probably manually fill it out though.&lt;/p&gt;</content><category term="FOSS"></category><category term="Bash"></category><category term="HBase"></category><category term="Linux"></category><category term="SysVInit"></category></entry><entry><title>Scripting YUM provides search using Python</title><link href="https://blog.backslasher.net/yum-python-provides.html" rel="alternate"></link><published>2015-04-14T16:50:00+02:00</published><updated>2015-04-14T16:50:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-04-14:/yum-python-provides.html</id><summary type="html">&lt;h3&gt;Update 24-06-15&lt;/h3&gt;
&lt;p&gt;Thanks to &lt;a href="http://yum.baseurl.org/wiki/5MinuteExamples"&gt;this page&lt;/a&gt;, I fixed my script. It no longer requires root privillages. I also muted informational messages because they were not very informational.&lt;/p&gt;
&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Today I had a list of files (nagios check scripts), and I wanted to check for every file if there's a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Update 24-06-15&lt;/h3&gt;
&lt;p&gt;Thanks to &lt;a href="http://yum.baseurl.org/wiki/5MinuteExamples"&gt;this page&lt;/a&gt;, I fixed my script. It no longer requires root privillages. I also muted informational messages because they were not very informational.&lt;/p&gt;
&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Today I had a list of files (nagios check scripts), and I wanted to check for every file if there's a package containing it (I'm a big fan of getting files from the repo rather than downloading manually).
Although YUM provides a way to search for packages containing a file pattern, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum provides &lt;span class="s1"&gt;&amp;#39;*/check_mailq&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output is quite complicated to parse:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Loaded plugins: fastestmirror, presto
Loading mirror speeds from cached hostfile
 * base: mirrors.seas.harvard.edu
 * epel: mirror.symnds.com
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
private-chef-1.4.15-1.el6.x86_64 : The full stack of private-chef
Repo        : chef-stable
Matched from:
Filename    : /opt/opscode/embedded/nagios/libexec/check_mailq



private-chef-1.4.14-1.el6.x86_64 : The full stack of private-chef
Repo        : chef-stable
Matched from:
Filename    : /opt/opscode/embedded/nagios/libexec/check_mailq



nagios-plugins-mailq-1.4.16-10.el6.x86_64 : Nagios Plugin - check_mailq
Repo        : epel
Matched from:
Filename    : /usr/lib64/nagios/plugins/check_mailq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first part is irrelevant (info messages that should IMO go to &lt;code&gt;stderr&lt;/code&gt;), and every entry in the actual result contains multiple lines... bah.
Luckily, YUM is completely written in python so we can copy its behaviour with a custom script.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;I used &lt;a href="http://mo.morsi.org/blog/node/220"&gt;this post&lt;/a&gt; to help me with basic discovery. The rest is my work.&lt;br&gt;
This script requires root (or &lt;code&gt;sudo&lt;/code&gt;). I didn't bother finding out how to run it otherwise.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;yum&lt;/span&gt;
&lt;span class="n"&gt;yb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yum&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;YumBase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;yb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setCacheDir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Mute loggers&lt;/span&gt;
&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;YOUR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;go&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;here&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;searchPackageProvides&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# ,(&amp;#39;*/&amp;#39;+f+&amp;#39;.*&amp;#39;)&lt;/span&gt;
  &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The following part varies by your objective. I wanted to list the packages required for each file, and also a sorted list of all relevant packages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;**No matches:&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;**Matches:&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;**Duplicates:&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;**Packages to be installed:&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sublist&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pkgs&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sublist&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result is quite nice:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;check_sockets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;check_threads&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;check_exit_code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pl&lt;/span&gt;
&lt;span class="n"&gt;check_duplicate_process&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;check_nagios&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nagios-plugins-nagios&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;check_breeze&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nagios-plugins-breeze&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;check_mrtgtraf&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nagios-plugins-mrtgtraf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;check_ldap&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;check-mk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;check-mk-docs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-ldap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;check_ircd&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nagios-plugins-ircd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Duplicates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;check_ldap&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;check-mk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;check-mk-docs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-ldap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;check_dns&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nagios-plugins-dns&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;check-mk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;check-mk-docs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;check_smtp&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;check-mk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-smtp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;check-mk-docs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Packages&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;installed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;check-mk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;check-mk-docs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-breeze&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-dns&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-ircd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-ldap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-mrtgtraf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-nagios&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nagios-plugins-smtp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Looks good.&lt;/p&gt;</content><category term="FOSS"></category><category term="Python"></category><category term="Scripts"></category><category term="CentOS"></category><category term="Linux"></category></entry><entry><title>Batch fitting pictures in ImageMagick</title><link href="https://blog.backslasher.net/batch-fitting-imagemagick.html" rel="alternate"></link><published>2015-04-09T12:00:00+02:00</published><updated>2015-04-09T12:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-04-09:/batch-fitting-imagemagick.html</id><summary type="html">&lt;p&gt;I recently bought a digital frame for some of my more elderly relatives.&lt;br&gt;
The frame's firmware was quite retarded, and I had 2 issues with it:&lt;/p&gt;
&lt;h3&gt;1. Pictures were always displayed in order&lt;/h3&gt;
&lt;p&gt;This might be a "not a bug but a feature" type of situation, but still.&lt;br&gt;
I solved …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently bought a digital frame for some of my more elderly relatives.&lt;br&gt;
The frame's firmware was quite retarded, and I had 2 issues with it:&lt;/p&gt;
&lt;h3&gt;1. Pictures were always displayed in order&lt;/h3&gt;
&lt;p&gt;This might be a "not a bug but a feature" type of situation, but still.&lt;br&gt;
I solved this using bash's &lt;code&gt;$RANDOM&lt;/code&gt;, which evaluates to a different random number every time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rename &lt;span class="s1"&gt;&amp;#39;s/\.jpg$/.jpg/i&amp;#39;&lt;/span&gt; *.* &lt;span class="c1"&gt;# Just makes it look nice&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; F in *.jpg&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; mv &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$F&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RANDOM&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.jpg&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I couldn't use &lt;code&gt;xargs&lt;/code&gt; rather than the for loop, because I needed to evaluate the variable for every file&lt;/p&gt;
&lt;h3&gt;2. Pictures were stretched to the frame's proportions&lt;/h3&gt;
&lt;p&gt;Assuming I treated my relatives with the following apple pictures:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/batch-fitting-imagemagick/old1.jpg"&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/batch-fitting-imagemagick/old2.jpg"&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/batch-fitting-imagemagick/old3.jpg"&gt;&lt;br&gt;
The frame would show them like this:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/batch-fitting-imagemagick/smear1.jpg"&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/batch-fitting-imagemagick/smear2.jpg"&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/batch-fitting-imagemagick/smear3.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;Obviously, there was no setting in the software to stop doing that, so I had to modify the pictures themselves.
I settled for resizing the pictures (without modifying the aspect ratio) to a certain resolution (the frame's screen's resolution), and padding it if it's not the right size (for instance, the picture is too short / too wide).&lt;br&gt;
I modified the pictures to look like this:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/batch-fitting-imagemagick/pan1.jpg"&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/batch-fitting-imagemagick/pan2.jpg"&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/batch-fitting-imagemagick/pan3.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The script&lt;/strong&gt; uses ImageMagick, which is apparently built for these things (I initially considered using gimp).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;RES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2048x1536
&lt;span class="nv"&gt;BG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;black
ls *.jpg &lt;span class="p"&gt;|&lt;/span&gt; xargs -n1 mogrify -gravity center -background &lt;span class="nv"&gt;$BG&lt;/span&gt; -resize &lt;span class="nv"&gt;$RES&lt;/span&gt; -extent &lt;span class="nv"&gt;$RES&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note I'm using &lt;code&gt;mogrify&lt;/code&gt;, which performes in-place updates of the file. To create a different modified file, use &lt;code&gt;convert&lt;/code&gt; and specify a new filename at the end.&lt;br&gt;
Note&lt;sup&gt;2&lt;/sup&gt; &lt;code&gt;resize&lt;/code&gt; does the actual image resizing (while keeping aspect ratio, unless &lt;a href="http://www.imagemagick.org/Usage/resize/#resize"&gt;specified otherwise&lt;/a&gt;), and &lt;code&gt;extent&lt;/code&gt; fills in the missing sides with the background.&lt;/p&gt;
&lt;h3&gt;attribution&lt;/h3&gt;
&lt;p&gt;Delicious apples taken from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blic-domain-images-pictures/apple-pictures/ripe-apple-on-branch.jpg.html"&gt;http://blic-domain-images-pictures/apple-pictures/ripe-apple-on-branch.jpg.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pixabay.com/en/apples-fresh-green-red-health-455396/"&gt;http://pixabay.com/en/apples-fresh-green-red-health-455396/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://apple--art.deviantart.com/"&gt;http://apple--art.deviantart.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="FOSS"></category><category term="ImageMagick"></category><category term="images"></category><category term="bash"></category><category term="scripts"></category></entry><entry><title>Managing chef users with Chef</title><link href="https://blog.backslasher.net/chef-users-with-chef.html" rel="alternate"></link><published>2015-03-12T09:00:00+01:00</published><updated>2015-03-12T09:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-03-12:/chef-users-with-chef.html</id><summary type="html">&lt;p&gt;I needed to create seperate Chef accounts for some utility program running in my Chef server.&lt;br&gt;
I was finally able to deprecate it today, but I saved those snippets because they're neat. These snippets use &lt;code&gt;chef-server-ctl&lt;/code&gt;, which is a utility software included in Chef server's installation&lt;/p&gt;
&lt;h2&gt;The bits&lt;/h2&gt;
&lt;h3&gt;Interesting points …&lt;/h3&gt;</summary><content type="html">&lt;p&gt;I needed to create seperate Chef accounts for some utility program running in my Chef server.&lt;br&gt;
I was finally able to deprecate it today, but I saved those snippets because they're neat. These snippets use &lt;code&gt;chef-server-ctl&lt;/code&gt;, which is a utility software included in Chef server's installation&lt;/p&gt;
&lt;h2&gt;The bits&lt;/h2&gt;
&lt;h3&gt;Interesting points&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I'm using &lt;code&gt;ruby_block&lt;/code&gt; resources to execute my code, because:&lt;ul&gt;
&lt;li&gt;It runs at the convergence phase and not at the compilation phase&lt;/li&gt;
&lt;li&gt;The code runs on a forked process so it can't crash my Chef client&lt;/li&gt;
&lt;li&gt;The code behaves as a standard "resource"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I use &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; as much as possible, because:&lt;ul&gt;
&lt;li&gt;They're camulative (all &lt;code&gt;only_if&lt;/code&gt; conditions must pass and all &lt;code&gt;not_if&lt;/code&gt; conditions must fail for the resource to run)&lt;/li&gt;
&lt;li&gt;Running the "if" blocks doesn't count as running the resource, helping the resource feel idempotent ("nothing is modified unless it needs to")&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ensure a user exists&lt;/h3&gt;
&lt;p&gt;The password is generated on the spot and not saved anywhere, because I was counting on certificate-based access.&lt;br&gt;
The private key is ignored because I have another block to reset it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blablason&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ruby_block&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;create-chef-user&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# This is not a chef server&lt;/span&gt;
  &lt;span class="n"&gt;not_if&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;shell_out&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;which chef-server-ctl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exitstatus!&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;# User does not exist&lt;/span&gt;
  &lt;span class="n"&gt;not_if&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;shell_out&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;chef-server-ctl user-list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;any?&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;

  &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;
    &lt;span class="n"&gt;shell_out&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;chef-server-ctl user-create &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; no@one.com &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Ignoring output key because we&amp;#39;ll recreate that later&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Ensure a file contains the private key&lt;/h3&gt;
&lt;p&gt;The private key is used to calculate the public key, which is compared against the user's actual public key (fetched from &lt;code&gt;chef-server-ctl&lt;/code&gt;).&lt;br&gt;
Should the keys mismatch, a new key is generated and written to the file, and the public side is written to the Chef server using &lt;code&gt;chef-server-ctl&lt;/code&gt; and a nifty perl replacement script.&lt;br&gt;
I avoid matching changing the public key to match the current private key, although this can be done without much code modification.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blablason&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;key_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/blablason/key.pem&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;ruby_block&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;reset-chef-key&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# This is not a chef server&lt;/span&gt;
  &lt;span class="n"&gt;not_if&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;shell_out&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;which chef-server-ctl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exitstatus!&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;# Key matches&lt;/span&gt;
  &lt;span class="n"&gt;not_if&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="c1"&gt;# If file doesn&amp;#39;t exist, return false (code needs to be run)&lt;/span&gt;
    &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exist?&lt;/span&gt; &lt;span class="n"&gt;key_path&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;missing file&amp;#39;&lt;/span&gt;
      &lt;span class="kp"&gt;false&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="c1"&gt;# Calculate current user&amp;#39;s key&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mismatching keys&amp;#39;&lt;/span&gt;
      &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;openssl&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;real_pub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Chef&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;JSONCompat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shell_out!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;chef-server-ctl user-show &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; -F json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;public_key&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;
      &lt;span class="n"&gt;priv_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OpenSSL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;PKey&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RSA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key_path&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="n"&gt;calc_pub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;priv_key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;public_key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;
      &lt;span class="n"&gt;real_pub&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;calc_pub&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="c1"&gt;# Generate key&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;openssl&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;new_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OpenSSL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;PKey&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RSA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;new_pub_s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;new_key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;public_key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;
    &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new_key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# XXX might be vulnerable&lt;/span&gt;
    &lt;span class="c1"&gt;# Fabricate replacement shell&lt;/span&gt;
    &lt;span class="n"&gt;perl_exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shell_out!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;which perl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tempfile&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;rep_shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Tmpname&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_tmpname&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/tmp/shell&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=::&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rep_shell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mo"&gt;0700&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#!&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;perl_exec&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; -i&lt;/span&gt;
&lt;span class="s2"&gt;      $pubkey=&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;new_pub_s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;;&lt;/span&gt;
&lt;span class="s2"&gt;        while (&amp;lt;&amp;gt;) {&lt;/span&gt;
&lt;span class="s2"&gt;         s/^&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;s+&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;public_key&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;:.*,/&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;public_key&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;:$pubkey,/;&lt;/span&gt;
&lt;span class="s2"&gt;         print;&lt;/span&gt;
&lt;span class="s2"&gt;        }&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
    &lt;span class="n"&gt;shell_out!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EDITOR=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;rep_shell&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; chef-server-ctl user-edit &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;rep_shell&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="c1"&gt;# Use &amp;quot;notifies&amp;quot; here to let stuff know that the key has been changed&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Ensure a user belongs to an organization&lt;/h3&gt;
&lt;p&gt;This is not idempotent because I couldn't find a way to easily determine whether a user belongs to an organization.&lt;br&gt;
However, I'm perfectly fine with this silently failing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blablason&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;org_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ORG&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;execute&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;assign-chef-org&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# This is not a chef server&lt;/span&gt;
  &lt;span class="n"&gt;only_if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;which chef-server-ctl&amp;#39;&lt;/span&gt;

  &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;chef-server-ctl org-user-add &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;org_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Things I would have done differently&lt;/h2&gt;
&lt;p&gt;Were I to refactor this, I'd modify it to work against the Chef API directly rather than running &lt;code&gt;chef-server-ctl&lt;/code&gt;.&lt;br&gt;
This would have looked neater, and would have allowed me to run from machines that aren't Chef servers.&lt;/p&gt;</content><category term="FOSS"></category><category term="Security"></category><category term="Linux"></category><category term="Chef"></category><category term="Ruby"></category></entry><entry><title>Locking Down Jenkins' Authentication</title><link href="https://blog.backslasher.net/locking-down-jenkins-authentication.html" rel="alternate"></link><published>2015-02-17T12:00:00+01:00</published><updated>2015-02-17T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-02-17:/locking-down-jenkins-authentication.html</id><summary type="html">&lt;h3&gt;Update 19.02.15&lt;/h3&gt;
&lt;p&gt;After posting my script in the Jenkins mailing list, I was told about a simpler way for implmenting my authorization strategy. I'm leaving this post because the things I learnt from developing the plugin are still valuable and may help someone someday.&lt;/p&gt;
&lt;h3&gt;The REAL solution&lt;/h3&gt;
&lt;p&gt;We'll …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Update 19.02.15&lt;/h3&gt;
&lt;p&gt;After posting my script in the Jenkins mailing list, I was told about a simpler way for implmenting my authorization strategy. I'm leaving this post because the things I learnt from developing the plugin are still valuable and may help someone someday.&lt;/p&gt;
&lt;h3&gt;The REAL solution&lt;/h3&gt;
&lt;p&gt;We'll be using the "Matrix-based security" strategy, and give the group "authenticated" administrative permissions.&lt;/p&gt;
&lt;h4&gt;Via GUI&lt;/h4&gt;
&lt;p&gt;Go to "Configure Global Security" under "Manage Jenkins" and do like this:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/locking-down-jenkins-authentication/matrix-auth.png"&gt;  &lt;/p&gt;
&lt;h4&gt;Via CLI&lt;/h4&gt;
&lt;p&gt;This is what I actually use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Jenkins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInstance&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;

&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;strategy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;hudson&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;security&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;GlobalMatrixAuthorizationStrategy&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Jenkins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ADMINISTER&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;authenticated&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAuthorizationStrategy&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I was tasked with automating and securing our Jenkins CI server.&lt;br&gt;
I found the &lt;a href="https://github.com/opscode-cookbooks/jenkins"&gt;Jenkins cookbook&lt;/a&gt; very helpful, and used a little groovy (less-anal Java) script found in the repo's &lt;code&gt;README.md&lt;/code&gt; to set the following security policy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Authentication is done via BitBucket (using the &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Bitbucket+OAuth+Plugin"&gt;bitbucket plugin&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Logged in users are allowed to do everything (since &lt;a href="https://github.com/jenkinsci/bitbucket-oauth-plugin/blob/155e11cf43372d0148429509035effa9e147ae54/src/main/java/org/jenkinsci/plugins/BitbucketSecurityRealm.java#L175"&gt;groups aren't supported&lt;/a&gt; yet by the BitBucket plugin)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The script looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;jenkins.model.*&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hudson.security.*&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.jenkinsci.plugins.*&lt;/span&gt;

&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Jenkins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInstance&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;

&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;githubRealm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BitbucketSecurityRealm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;API_KEY&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;API_SECRET&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setSecurityRealm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;githubRealm&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;strategy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FullControlOnceLoggedInAuthorizationStrategy&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAuthorizationStrategy&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, I was not happy&lt;/p&gt;
&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;As I could have seen from the explanation attached to "Logged-in users can do anything":&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;In this mode, every logged-in user gets full control of Jenkins. The only user who won&amp;#39;t have full control is anonymous user, who only gets read access.

This mode is useful to force users to log in before taking actions, so that you can keep record of who has done what. This setting can be also used in public-facing Jenkins, where you only allow trusted users to have user accounts.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So as we quickly found out, anonymous users can view our build specs and download our code. This is fine when developing FOSS, but bad when developing regular software.&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/locking-down-jenkins-authentication/anon-dl.png"&gt;&lt;/p&gt;
&lt;p&gt;Browsing the &lt;a href="https://github.com/kohsuke/hudson/blob/master/core/src/main/java/hudson/security/FullControlOnceLoggedInAuthorizationStrategy.java#L58"&gt;source code&lt;/a&gt; for Jenkins, I found the problem.&lt;br&gt;
Under the constructor for &lt;code&gt;FullControlOnceLoggedInAuthorizationStrategy&lt;/code&gt;, there is a line giving anonymous users "read":&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;THE_ACL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ACL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ANONYMOUS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Permission&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;READ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Said authorization strategy offers no configuration, so I can't tell it not to give anonymous any priviileges at all.&lt;/p&gt;
&lt;h3&gt;Failed Attempts&lt;/h3&gt;
&lt;h4&gt;Different Strategy&lt;/h4&gt;
&lt;p&gt;Other authorization strategies proved useless:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/locking-down-jenkins-authentication/auths.png"&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Anyone can do anything&lt;/strong&gt;: Just no.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Legacy mode&lt;/strong&gt;: Requires groups, so not applicable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Matrix-based security&lt;/strong&gt;: Requires me specifying every teammate, so while it might work, it's annoying.&lt;br&gt;
  I also attempted to specify &lt;code&gt;EVERYONE&lt;/code&gt; (and &lt;code&gt;Everyone&lt;/code&gt; and &lt;code&gt;everyone&lt;/code&gt;) hoping it'll mean "Everyone who's logged in", but that didn't work.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Project-based Matrix Authorization Strategy&lt;/strong&gt;: Same as previous, even more work.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Generalizing&lt;/h4&gt;
&lt;p&gt;I tried using the script console to set the authorization strategy to the &lt;code&gt;AuthorizationStrategy&lt;/code&gt; class, so I can customize it later.&lt;br&gt;
Unfortunately, it's an abstract class, so it can't be done.&lt;/p&gt;
&lt;h4&gt;Groovy Customizing&lt;/h4&gt;
&lt;p&gt;I used a groovy script to generate my own strategy class, copying the original &lt;code&gt;FullControlOnceLoggedInAuthorizationStrategy&lt;/code&gt; class and removing the annoying line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  static {
    THE_ACL.add(ACL.EVERYONE, Jenkins.ADMINISTER,true);
    THE_ACL.add(ACL.ANONYMOUS, Jenkins.ADMINISTER,false);
&lt;span class="gd"&gt;-   THE_ACL.add(ACL.ANONYMOUS,Permission.READ,true);&lt;/span&gt;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then instanciating and setting as my authorization strategy.
This worked beautifully, until I restarted the service. Since the class only existed in memory, Jenkins couldn't re-instantiate its auth strategy, and refused to do anything until I manually fixed it using the config file (&lt;code&gt;$JENKINS_HOME/config.xml&lt;/code&gt;)&lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;Eventually, I wrote a Jenkins Plugin that mimicked the original strategy without said line.
The process is composed of these stages, which I found non-trivial (as a mere Java junior), so I wanted to detail them:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use a VM so you don't mess anything up. I used Ubuntu 14.10 via Vagrant, but everything goes.&lt;/li&gt;
&lt;li&gt;Install JDK and Maven on said VM. For you Ubuntu guys, it's easy: &lt;code&gt;sudo apt-get install openjdk-7-jdk maven&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Optional:&lt;/em&gt; Install Jenkins on the VM. Makes testing much easier.&lt;/li&gt;
&lt;li&gt;Take a peek at &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Plugin+tutorial"&gt;the tutorial&lt;/a&gt;. Namely, edit your &lt;code&gt;~/.m2/settings.xml&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Create a placeholder using &lt;code&gt;mvn -U org.jenkins-ci.tools:maven-hpi-plugin:create&lt;/code&gt; in the project's parent directory (the command will create the project directory for you).&lt;br&gt;
  There are some questions to be answered, the tutorial explains them and if you don't like the result you can wipe and start over.&lt;/li&gt;
&lt;li&gt;Build the plugin (&lt;code&gt;mvn&lt;/code&gt; in the project directory) after creation, to make Maven download all of its dependencies now. This might take a while.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modify the filesystem. These are some pointers that I discovered:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Place all of your code in the &lt;code&gt;src/main/java&lt;/code&gt; directory (and inside according to your package hierarchy.&lt;/li&gt;
&lt;li&gt;Modify the &lt;code&gt;src/main/resources/index.jelly&lt;/code&gt; to describe your project&lt;/li&gt;
&lt;li&gt;Create a file under &lt;code&gt;src/main/resources/&amp;lt;package hierarchy&amp;gt;/&amp;lt;class name&amp;gt;/help.html&lt;/code&gt; to provide help for your plugin. Not sure if that's needed for all plugins, but it was automatically used for my authorization strategy.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a file under &lt;code&gt;src/main/resources/org/jenkinsci/plugins/&amp;lt;class name, only alphanumeric&amp;gt;/Messages.properties&lt;/code&gt; to contain messages for your plugin, like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;BestPlugin.DisplayName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Best plugin everrrrrrrrrr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can later internationalize this file (I haven't). The properties are accessed by doing this in your actual file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.jenkinsci.plugins.CLASSNAMEALPHANUMERIC.Messages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;prop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;BestPlugin_DisplayName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compile, test, cry. This is my noobish helper script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mvn clean &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mvn &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo cp target/PLUGINNAME.hpi /var/lib/jenkins/plugins/PLUGINNAME.hpi  &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo service jenkins restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Hosting+Plugins"&gt;Publish the plugin&lt;/a&gt; to the community, if you want to.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;TL;DR&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/locking-down-jenkins-authentication/myauth.png"&gt;&lt;br&gt;
My &lt;s&gt;plugin works&lt;/s&gt; (removed), and all anonymous users are recirected to a BitBucket login page
&lt;img alt="" src="https://blog.backslasher.net/images/locking-down-jenkins-authentication/bblogin.png"&gt;&lt;/p&gt;
&lt;p&gt;I set it from the (almost) identical groovy script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;jenkins.model.*&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hudson.security.*&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.jenkinsci.plugins.*&lt;/span&gt;

&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Jenkins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInstance&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;

&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;githubRealm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BitbucketSecurityRealm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;API_KEY&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;API_SECRET&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setSecurityRealm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;githubRealm&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;strategy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;backslasher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;jenkins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LockdownFullControlOnceLoggedInAuthorizationStrategy&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAuthorizationStrategy&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By the way, I'm not afraid of idempotence issues, since the objects modified by this code have no state (so while not ideal, I don't care about them being recreated over and over).  &lt;/p&gt;
&lt;p&gt;&lt;s&gt;I'm planning to release a stable version, add a README file, upload to the Jenkins wiki etc soon.&lt;br&gt;
PRs are welcome.&lt;/s&gt; Removed&lt;/p&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="Java"></category><category term="Security"></category><category term="Jenkins"></category></entry><entry><title>Resizing AWS root EBS in CentOS HVM</title><link href="https://blog.backslasher.net/resizing-aws-root-centos-hvm.html" rel="alternate"></link><published>2015-02-01T12:00:00+01:00</published><updated>2015-02-01T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-02-01:/resizing-aws-root-centos-hvm.html</id><summary type="html">&lt;h3&gt;Update 04.07.15&lt;/h3&gt;
&lt;p&gt;This method doesn't work anymore because of some weird AWS restriction, which says you can't connect the root device of a marketplace AMI (like the CentOS one) to another VM, lest you discover its secrets.&lt;br&gt;
I developed a better method which involves either rebooting or creating …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Update 04.07.15&lt;/h3&gt;
&lt;p&gt;This method doesn't work anymore because of some weird AWS restriction, which says you can't connect the root device of a marketplace AMI (like the CentOS one) to another VM, lest you discover its secrets.&lt;br&gt;
I developed a better method which involves either rebooting or creating a custom AMI. &lt;a href="https://blog.backslasher.net/growroot-centos.html"&gt;Give it a try!&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;Today I started using HVM instances in AWS, because r3 instances (memory optimized) are only available on HVM (&lt;a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/virtualization_types.html"&gt;the difference&lt;/a&gt;).
Because the CentOS image my company uses isn't available as HVM, I switched to &lt;a href="https://aws.amazon.com/marketplace/pp/B00NQAYLWO"&gt;this&lt;/a&gt; image, which had an annoying side effect.&lt;/p&gt;
&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;After launching an instance, I always extend the root volume, which starts at a measly 8GB. Linux runs fine on 8GB, but our devs depend on some maneuvering space.&lt;br&gt;
The EBS volume itself is extended when launching the instance. However, one must also extend the partitions/filesystems inside the volume.&lt;br&gt;
&lt;strong&gt;Our previous image&lt;/strong&gt; provided a root EBS that contained the filesystem directly, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ lsblk
NAME    MAJ:MIN RM  SIZE RO TYPE  MOUNTPOINT
...
xvde    202:64   0  100G  0 disk  /
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here we only have to extend the filesystem, which can be done using something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;resize2fs &lt;span class="k"&gt;$(&lt;/span&gt;mount &lt;span class="p"&gt;|&lt;/span&gt; perl -ne &lt;span class="s1"&gt;&amp;#39;print $1,&amp;quot;\n&amp;quot; if /^(\S+) on \/ /&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;On the HVM image&lt;/strong&gt;, however, the EBS was partitioned (using MBR) and had a single partition, which contained the filesystem, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ lsblk
NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
...
xvda    202:0    0  100G  0 disk
└─xvda1 202:1    0  100G  0 part /
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This means that we must extend the partition before extending the filesystem, which proved to be a difficult task.&lt;br&gt;
The standard procedure is deleting the partition and recreating with the same settings, however:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Since we're extending a partition which contains the root filesystem, we can't unmount it.&lt;/li&gt;
&lt;li&gt;When changing a partition that contains a filesystem that is mounted, the kernel refuses to re-read the filesystem, meaning you can't make sure everything works until you reboot&lt;/li&gt;
&lt;li&gt;If you're rebooting with a broken partition/filesystem configuration, the VM won't boot. Since AWS offers no direct method of interfacing with the VM directly, one can't easily troubleshoot the VM.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Because of this, I spent 6 hours and 6 servers on trying to extend the partition.&lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;As AWS say in &lt;a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/storage_expand_partition.html"&gt;their article&lt;/a&gt;, the best solution I found is using a helper VM.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Prepare a helper VM running Linux, with &lt;code&gt;parted&lt;/code&gt; installed.&lt;/li&gt;
&lt;li&gt;Stop both the instance you wish to extend and the helper.&lt;/li&gt;
&lt;li&gt;Note the instance id of both instances and the volume ID of the root EBS.
    We'll assume we're talking about &lt;code&gt;i-victim&lt;/code&gt;,&lt;code&gt;i-helper&lt;/code&gt;,&lt;code&gt;v-victim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Note &lt;code&gt;i-victim&lt;/code&gt;'s root device configuration. We'll assume it's &lt;code&gt;/dev/sda1&lt;/code&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/resizing-aws-root-centos-hvm/sol1.png"&gt;&lt;/li&gt;
&lt;li&gt;Detach &lt;code&gt;v-victim&lt;/code&gt; from &lt;code&gt;i-victim&lt;/code&gt; and attach it to &lt;code&gt;i-helper&lt;/code&gt;. The device letter doesn't matter, you should be able to recognize it on the OS. We'll assume it's &lt;code&gt;/dev/xvdf&lt;/code&gt;.&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/resizing-aws-root-centos-hvm/detach.png"&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start &lt;code&gt;i-helper&lt;/code&gt;, connect to it via SSH, and commence surgery&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;parted /dev/xvdf p&lt;/code&gt; to view the current partition makeup, and save it in case something bad happens.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Model: Xen Virtual Block Device (xvd)
Disk /dev/xvdf: 322GB
Sector size (logical/physical): 512B/512B
Partition Table: msdos

Number  Start   End    Size   Type     File system  Flags
 1      1049kB  8GB    8GB    primary  ext4         boot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note the difference between the drive size (&lt;code&gt;322GB&lt;/code&gt;) and the partition size (&lt;code&gt;8GB&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Like in the article, delete the partition and create a new one, with the same start and type. Put &lt;code&gt;100%&lt;/code&gt; as the end, and run &lt;code&gt;set 1 boot on&lt;/code&gt; to enable the boot flag on the new partition .&lt;br&gt;
   Example code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo parted /dev/xvdf rm 1
$ sudo parted /dev/xvdf mkpart primary 1049kB 100%
$ sudo parted /dev/xvdf set 1 boot on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The start (&lt;code&gt;1049kB&lt;/code&gt;) should be based on the start of the original partition.&lt;br&gt;
The new partition should be recognized by the kernel, and the filesystem itself can be treated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute &lt;code&gt;e2fsck -f /dev/xvdf1 &amp;amp;&amp;amp; resize2fs /dev/xvdf1&lt;/code&gt; to fsck and extend the filesystem&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;You can mount-test the partition on the server, just to make sure everything is OK, using something like &lt;code&gt;mkdir /tmp/bla &amp;amp;&amp;amp; mount /dev/xvdf1 /tmp/bla&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stop &lt;code&gt;i-helper&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Detach &lt;code&gt;v-victim&lt;/code&gt; from &lt;code&gt;i-helper&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Attach &lt;code&gt;v-victim&lt;/code&gt; to &lt;code&gt;i-victim&lt;/code&gt;, using the binding from step 4.&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/resizing-aws-root-centos-hvm/attach.png"&gt;&lt;/li&gt;
&lt;li&gt;Start &lt;code&gt;i-victim&lt;/code&gt; and pray.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Everything should work out OK&lt;/p&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="AWS"></category><category term="Virtualization"></category><category term="Mysteries Solved"></category><category term="Ruby"></category><category term="Perl"></category><category term="Scripts"></category><category term="Storage"></category></entry><entry><title>Booting with UUID without initramfs</title><link href="https://blog.backslasher.net/boot-uuid-without-initramfs.html" rel="alternate"></link><published>2015-01-30T12:00:00+01:00</published><updated>2015-01-30T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-01-30:/boot-uuid-without-initramfs.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I recently wiped my CubieTruck (a single board computer, like RaspberryPi), and tried installing the root filesystem on a hard drive instead of the built-in NAND, due to the NAND's tendency to get corrupted.&lt;br&gt;
I used Igor Pečovnik's &lt;a href="http://www.igorpecovnik.com/2013/12/24/cubietruck-debian-wheezy-sd-card-image/"&gt;Image&lt;/a&gt;, which is really convenient, as I like it better …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I recently wiped my CubieTruck (a single board computer, like RaspberryPi), and tried installing the root filesystem on a hard drive instead of the built-in NAND, due to the NAND's tendency to get corrupted.&lt;br&gt;
I used Igor Pečovnik's &lt;a href="http://www.igorpecovnik.com/2013/12/24/cubietruck-debian-wheezy-sd-card-image/"&gt;Image&lt;/a&gt;, which is really convenient, as I like it better than the images offered at the official site, and it's obviously &lt;strong&gt;much&lt;/strong&gt; easier than building by myself.&lt;br&gt;
However, I had one serious issue.  &lt;/p&gt;
&lt;h2&gt;The problem&lt;/h2&gt;
&lt;p&gt;Igor's image is designed to be installed on and booted from an SD card, and includes a script to install the OS to a hard drive, which does 3 things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Formats and prepares the hard drive&lt;/li&gt;
&lt;li&gt;Copies the root FS to the hard drive&lt;/li&gt;
&lt;li&gt;Modifies the SD card's &lt;code&gt;/boot&lt;/code&gt; directory to load the root FS from the hard drive&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Igor, assuming there's only one hard drive, always targets &lt;code&gt;/dev/sda1&lt;/code&gt; as the hard drive. This was an issue for me, as I have two hard drives - an internal one that I installed the OS on, and an external one that I connect every now and then.&lt;/p&gt;
&lt;p&gt;The uEnv file (the entry point for CubieTruck's boot sequence) contains something like &lt;code&gt;rootfs=/dev/sda1&lt;/code&gt;, and when both my drives were connected, my external hard drive was discovered first, meaning &lt;code&gt;/dev/sda1&lt;/code&gt; was pointing to it, causing the kernel to panic as it couldn't find a proper root fs.&lt;br&gt;
Being used to a standard-built Linux kernel, I modified the uEnv file to look like &lt;code&gt;root=UUID=&amp;lt;PARTITION GUID&amp;gt;&lt;/code&gt;, which works around the naming issue.&lt;br&gt;
It didn't work, causing the boot sequence to hang with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;waiting for root device UUID=&amp;lt;Whatever I wrote in uEnv&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;I tried some tricks, including referring to &lt;code&gt;/dev/disk/by-uuid/&lt;/code&gt;, but no luck. Eventually I found &lt;a href="http://unix.stackexchange.com/a/151483"&gt;this&lt;/a&gt; lifesaver, that made me realize that &lt;code&gt;initramfs&lt;/code&gt; isn't included in Igor's build, and without it there's no &lt;code&gt;UUID&lt;/code&gt; or &lt;code&gt;LABEL&lt;/code&gt; mapping, only &lt;code&gt;PARTUUID&lt;/code&gt; mapping. Using the value taken from &lt;code&gt;blkid&lt;/code&gt; (like &lt;code&gt;rootfs=PARTUUID=&amp;lt;SOME GUID&amp;gt;&lt;/code&gt;), the boot went OK.&lt;br&gt;
&lt;strong&gt;However&lt;/strong&gt;, when editing the &lt;code&gt;/etc/fstab&lt;/code&gt; file (which also contained &lt;code&gt;/dev/sda1&lt;/code&gt; as the root mountpoint), I noticed that &lt;code&gt;mount PARTUUID=&amp;lt;Something&amp;gt;&lt;/code&gt; didn't work. Thanks to &lt;a href="http://forums.linuxmint.com/viewtopic.php?f=90&amp;amp;t=162677"&gt;this post&lt;/a&gt;, I learnt that support for &lt;code&gt;PARTUUID&lt;/code&gt; was added to &lt;code&gt;mount&lt;/code&gt;, but the Ubuntu version is too old to contain it. This might change, but I worked around this by using good &lt;del&gt;old&lt;/del&gt; new &lt;code&gt;UUID&lt;/code&gt; in &lt;code&gt;/etc/fstab&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now all is well.&lt;/p&gt;
&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;PARTUUID&lt;/code&gt; in &lt;code&gt;uEnv&lt;/code&gt;, found via &lt;code&gt;blkid&lt;/code&gt;.&lt;br&gt;
With &lt;code&gt;/etc/fstab&lt;/code&gt;, test with &lt;code&gt;mount&lt;/code&gt; before using. If it fails, work around with &lt;code&gt;UUID&lt;/code&gt;.&lt;/p&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="Boot"></category><category term="Mysteries Solved"></category><category term="ARM"></category></entry><entry><title>Getting Git Submodule Detailed Status</title><link href="https://blog.backslasher.net/git-submodule-status.html" rel="alternate"></link><published>2015-01-29T12:00:00+01:00</published><updated>2015-01-29T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-01-29:/git-submodule-status.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I manage every one of my Chef cookbooks as a single git repository, complying with the BerkShelf paradigm. I keep them all as submodules in a "supermodule", to allow my teammates to easily clone them all.
I can use &lt;code&gt;git status&lt;/code&gt; from the supermodule to get submodule information …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I manage every one of my Chef cookbooks as a single git repository, complying with the BerkShelf paradigm. I keep them all as submodules in a "supermodule", to allow my teammates to easily clone them all.
I can use &lt;code&gt;git status&lt;/code&gt; from the supermodule to get submodule information when it comes to untracked/modified files, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git status
On branch master
Your branch is up-to-date with &amp;#39;origin/master&amp;#39;.
Changes not staged for commit:
  (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
  (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)

    modified:   cookbooks/some-cookbook (untracked content)
    modified:   cookbooks/other-cookbook (modified content)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While this is nice, I wanted something more detailed, like &lt;a href="https://blog.backslasher.net/git-prompt-variables.html"&gt;git's PS1 prompt&lt;/a&gt;. I ended up using just that.&lt;/p&gt;
&lt;h2&gt;The script&lt;/h2&gt;
&lt;p&gt;I'm utilizing &lt;code&gt;git submodule foreach&lt;/code&gt;, which &lt;code&gt;cd&lt;/code&gt;s into every sudmodule while populating some variables (e.g. &lt;code&gt;$name&lt;/code&gt; is the submodule's name) and executes something (using some subshell).&lt;br&gt;
I started checking how the prompt script calculates its symbols, but after reading the script I found it full of &lt;code&gt;if&lt;/code&gt;s and &lt;code&gt;case&lt;/code&gt;s and lions and tigers and bears. I decided that the prompt script actually generates the string I need, so I should just execute it.&lt;br&gt;
The only caveat is that the script reads variables defined in &lt;code&gt;~/.bashrc&lt;/code&gt; and are not exported, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;GIT_PS1_SHOWDIRTYSTATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Meaning that they're not available in any bash instances that aren't login instances.
You can either:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;code&gt;~/.bashrc&lt;/code&gt; to export the variables, like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GIT_PS1_SHOWDIRTYSTATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add this bit of trickery, which runs a bash login shell, extracts the variables and exports them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;bash -ic &lt;span class="s1"&gt;&amp;#39;declare -p&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep GIT &lt;span class="p"&gt;|&lt;/span&gt; cut -f &lt;span class="m"&gt;3&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I chose option 2&lt;/p&gt;
&lt;p&gt;The script looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;bash -ic &lt;span class="s1"&gt;&amp;#39;declare -p&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep GIT &lt;span class="p"&gt;|&lt;/span&gt; cut -f &lt;span class="m"&gt;3&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
git submodule foreach --quiet &lt;span class="s1"&gt;&amp;#39;bash -c &amp;quot;. /usr/lib/git-core/git-sh-prompt; __git_ps1&amp;quot;;echo &amp;quot; $path&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And the result looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; (master %=) cookbooks/some-cookbook
 (master *=) cookbooks/other-cookbook
 (master=) cookbooks/untouched-cookbook
 (master&amp;gt;) cookbooks/notpushed-cookbook 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Very nice.&lt;/p&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="Bash"></category><category term="git"></category><category term="chef"></category></entry><entry><title>CSV Tricks</title><link href="https://blog.backslasher.net/csv-tricks.html" rel="alternate"></link><published>2015-01-15T12:00:00+01:00</published><updated>2015-01-15T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-01-15:/csv-tricks.html</id><summary type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I've been requested to recreate some spreadsheet for our execs. Being annoying as usual, I made it a point to only use scripting to build the tables.&lt;br&gt;
Most of the reconstruction is interesting in an unrelated way, but I wanted to post about some little gimmicks that helped …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;I've been requested to recreate some spreadsheet for our execs. Being annoying as usual, I made it a point to only use scripting to build the tables.&lt;br&gt;
Most of the reconstruction is interesting in an unrelated way, but I wanted to post about some little gimmicks that helped me create the spreadsheet-like part using plain-old CSV.
I used Ruby as my CSV generator, which I then imported by LibreOffice's Calc for some formatting touch-ups (bold titles etc.) and then to Google Docs.&lt;/p&gt;
&lt;h2&gt;Formulas survive&lt;/h2&gt;
&lt;p&gt;I see no reason why they shouldn't, but it still surprised me - when generating CSV files, you can keep cells with formulas (e.g. &lt;code&gt;=1+1&lt;/code&gt;) and they will be honored by LibreOffice's Calc. This allowed me to preserve the spreadsheet's formulated structure (e.g. calculated averages) while generating basic CSV, using Ruby's &lt;code&gt;CSV&lt;/code&gt; module.&lt;/p&gt;
&lt;h2&gt;R1C1 Notation&lt;/h2&gt;
&lt;p&gt;This is a way to represent cell addresses differently than the default &lt;code&gt;A1&lt;/code&gt; notation.&lt;br&gt;
In &lt;code&gt;A1&lt;/code&gt;, every cell gets a column index in letters (&lt;code&gt;A,B,C..ZZZZZZZ&lt;/code&gt;) and a row index in numbers (&lt;code&gt;1,2,3...9999&lt;/code&gt;). The first cell is &lt;code&gt;A1&lt;/code&gt;.&lt;br&gt;
In &lt;code&gt;R1C1&lt;/code&gt; notation, every cell is getting a numeral row index (&lt;code&gt;R1,R2..R9999&lt;/code&gt;) and column index (&lt;code&gt;C1,C2..C9999&lt;/code&gt;) joined together.&lt;br&gt;
While &lt;code&gt;R1C1&lt;/code&gt; seems more cumbersome, it allows relative addressing, such as &lt;code&gt;RC[-1]&lt;/code&gt; (Cell to my left), &lt;code&gt;R3C&lt;/code&gt; (Third cell from the top in my column) and &lt;code&gt;R[1]C[1]&lt;/code&gt; (Cell immediately below and right to me). This allows you to address other cells without calculating their/your location, which is easy when using GUI, hard when pushing lines into a file.&lt;br&gt;
This notation isn't honored by default (my guess is because it can conflict with &lt;code&gt;A1&lt;/code&gt; notation), but you can either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change your application's settings to work with &lt;code&gt;R1C1&lt;/code&gt; (Which I don't like, since it's a global setting and will probably break other spreadsheets)&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;INDIRECT&lt;/code&gt; function (&lt;a href="https://help.libreoffice.org/Calc/Spreadsheet_Functions#INDIRECT"&gt;LibreOffice documentation&lt;/a&gt;) to address a cell, like &lt;code&gt;=INDIRECT("RC[-1]",0)&lt;/code&gt; for the cell to the immediate left. This function is also implemented in Google Docs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since you're scripting anyway, you're probably better off using the second option.&lt;/p&gt;
&lt;p&gt;Should I encounter any other neat CSV discoveries, I'll update this post.&lt;/p&gt;
&lt;h2&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;R1C1 in &lt;a href="http://stackoverflow.com/questions/507253/excel-formula-to-reference-cell-to-the-left"&gt;stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="Ruby"></category><category term="CSV"></category><category term="Spreadsheets"></category><category term="Office"></category><category term="LibreOffice"></category></entry><entry><title>Troubleshooting StatsD</title><link href="https://blog.backslasher.net/troubleshooting-statsd.html" rel="alternate"></link><published>2015-01-07T12:00:00+01:00</published><updated>2015-01-07T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2015-01-07:/troubleshooting-statsd.html</id><summary type="html">&lt;h3&gt;About StatsD&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/etsy/statsd/"&gt;StatsD&lt;/a&gt; is a tool developed by Etsy and Flickr (complicated story).&lt;br&gt;
Its main use is providing a middleman for &lt;a href="http://graphite.wikidot.com/"&gt;Graphite&lt;/a&gt;, which is a real-time graphing tool, mainly used for performance metrics.&lt;br&gt;
Thanks to StatsD, I can use TCP sockets between servers (guaranteeing packet delivery), while processes generating the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;About StatsD&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/etsy/statsd/"&gt;StatsD&lt;/a&gt; is a tool developed by Etsy and Flickr (complicated story).&lt;br&gt;
Its main use is providing a middleman for &lt;a href="http://graphite.wikidot.com/"&gt;Graphite&lt;/a&gt;, which is a real-time graphing tool, mainly used for performance metrics.&lt;br&gt;
Thanks to StatsD, I can use TCP sockets between servers (guaranteeing packet delivery), while processes generating the data-points are using a localhost UDP socket (minimal overhead without losing packets), freeing them to do some real work.&lt;br&gt;
Sometimes, things don't work.&lt;/p&gt;
&lt;h3&gt;Basic Troubleshooting&lt;/h3&gt;
&lt;p&gt;I don't claim to be an expert on StatsD, but I didn't find a good post about troubleshooting, so I thought I'll list some of my methods.
I assume the problem we're investigating is the most common and elusive of all: &lt;strong&gt;Data sent to StatsD isn't showing up on Graphite&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;Send some Spam&lt;/h4&gt;
&lt;p&gt;Try sending some data to both StatsD and Graphite and see what sticks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;GRAPHITE_SERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;GRAPHITE_CARBON_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;GRAPHITE_WEBUI_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;STATSD_SERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;STATSD_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;TEST_STRING&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;test.back.slash

&lt;span class="c1"&gt;# Send to Graphite&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test.back.slash 4 `date +%s`&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; nc -C &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GRAPHITE_SERVER&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GRAPHITE_CARBON_PORT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Test&lt;/span&gt;
curl &lt;span class="s2"&gt;&amp;quot;http://&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GRAPHITE_SERVER&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GRAPHITE_WEBUI_PORT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/render/?target=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TEST_STRING&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;from=-60sec&amp;amp;format=json&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Send to StatsD&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test.back.slash:1|c&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; nc -C -w1 -u &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;STATSD_SERVER&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;STATSD_PORT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Test&lt;/span&gt;
curl &lt;span class="s2"&gt;&amp;quot;http://&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GRAPHITE_SERVER&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GRAPHITE_WEBUI_PORT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/render/?target=stats.gauges.&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TEST_STRING&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;from=-60sec&amp;amp;format=json&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Redirect to Console&lt;/h4&gt;
&lt;p&gt;First, modify your StatsD configuration file to add the console backend (something like  &lt;code&gt;backends: ["./backends/graphite", "./backends/console"]&lt;/code&gt;).&lt;br&gt;
Then start StatsD (like &lt;code&gt;node /usr/local/statsd/stats.js /your/config.js&lt;/code&gt;), and watch the output. Check if your data is there.&lt;/p&gt;
&lt;h4&gt;Debug&lt;/h4&gt;
&lt;p&gt;Modify the StatsD configuration file to contain &lt;code&gt;debug: true&lt;/code&gt;, and see if you get some interesting output in &lt;code&gt;stderr&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Dump&lt;/h4&gt;
&lt;p&gt;This might seem like a last-ditch effort, but you can always use &lt;code&gt;tcpdump&lt;/code&gt; to record interesting traffic.&lt;br&gt;
I use something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo tcpdump -i any -w statsd-ts.dump &lt;span class="s2"&gt;&amp;quot;(port &lt;/span&gt;&lt;span class="nv"&gt;$GRAPHITE_CARBON_PORT&lt;/span&gt;&lt;span class="s2"&gt;) or (port &lt;/span&gt;&lt;span class="nv"&gt;$STATSD_PORT&lt;/span&gt;&lt;span class="s2"&gt;)&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Using this dump you can try and see if something's fishy.&lt;br&gt;
Since both StatsD and Graphite use packets that contain readable text, I use this combo to parse all textual data in ruby.&lt;br&gt;
It's not perfect, but it works.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sb"&gt;`tshark -r &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt; -T fields -e data.data`&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stat&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_i&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Troubleshooting"></category><category term="Networking"></category><category term="Linux"></category><category term="StatsD"></category></entry><entry><title>SSH vs OpenVPN for Tunneling</title><link href="https://blog.backslasher.net/ssh-openvpn-tunneling.html" rel="alternate"></link><published>2014-12-18T12:00:00+01:00</published><updated>2014-12-18T12:00:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-12-18:/ssh-openvpn-tunneling.html</id><summary type="html">&lt;h3&gt;Update 28.01.16&lt;/h3&gt;
&lt;p&gt;I found some sites referring to this post. Below are the common complaints I saw, and my replies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I'm criminally bad with setting up OpenVPN, meaning the testing is completely off&lt;/strong&gt;&lt;br&gt;
    I'm not an expert in networking, but I have a working knowledge of it and …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Update 28.01.16&lt;/h3&gt;
&lt;p&gt;I found some sites referring to this post. Below are the common complaints I saw, and my replies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I'm criminally bad with setting up OpenVPN, meaning the testing is completely off&lt;/strong&gt;&lt;br&gt;
    I'm not an expert in networking, but I have a working knowledge of it and I spent around 2 work days on messing around with the OpenVPN parameters. This is as good as I got, compared to the SSH setup which required no optimization.&lt;br&gt;
    I'll be &lt;strong&gt;delighted&lt;/strong&gt; to see a better-performing OpenVPN config. Here is how to recreate my testing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One machine on each AWS region &lt;code&gt;US-EAST-1&lt;/code&gt;, &lt;code&gt;EU-WEST-1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Size &lt;code&gt;c3.4xlarge&lt;/code&gt; (I think)&lt;/li&gt;
&lt;li&gt;Vanilla CentOS 6 OS&lt;/li&gt;
&lt;li&gt;No interface configuration (can be modified if needed)&lt;/li&gt;
&lt;li&gt;All packages installed from CentOS repo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure you show your configuration and your results!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Comparing OpenVPN and SSH tunneling is like &lt;a href="https://en.wikipedia.org/wiki/Apples_and_oranges"&gt;apples and oranges&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
    This is nonsense. I had 2 tools to solve my issue. I tuned them both to the bst of my ability and tested them. One outperformed the other, so I chose it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, have a comment section, and I'll be happy if people with interesting replies drop me a line down there so I can learn something new.&lt;br&gt;
Finally, I fixed my diagrams below.&lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I was asked to take care of a security challange - setup Redis replication between two VMs over the internet.&lt;br&gt;
The VMs were in different continents, so I had keep the bandwidth impact to a minimum.
I thought of 3 options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stunnel&lt;/code&gt;, which uses tunnels TCP connections via SSL&lt;/li&gt;
&lt;li&gt;SSH, which has TCP tunneling over it's secure channel (&lt;a href="https://blog.backslasher.net/images/ssh-openvpn-tunneling/inquisition.jpg"&gt;amongst its weponary&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;OpenVPN, which is designed to encapsulate, encrypt and compress traffic among two machines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I quickly dropped stunnel because its setup is nontrivial compared to the other two (no logging, no init file...), and decided to test SSH and OpenVPN.&lt;br&gt;
I was sure that when it comes to speed, OpenVPN will be the best, because:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The first Google results say so (and they even look credible)&lt;ul&gt;
&lt;li&gt;&lt;a href="http://superuser.com/a/238801"&gt;http://superuser.com/a/238801&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://security.stackexchange.com/a/68367"&gt;http://security.stackexchange.com/a/68367&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://support.vpnsecure.me/articles/tips-tricks/comparison-chart-openvpn-pptp-ssh-tunnel"&gt;http://support.vpnsecure.me/articles/tips-tricks/comparison-chart-openvpn-pptp-ssh-tunnel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logic dictates that SSH tunneling will suffer from &lt;a href="http://sites.inka.de/bigred/devel/tcp-tcp.html"&gt;TCP over TCP&lt;/a&gt;, since SSH runs over TCP&lt;/li&gt;
&lt;li&gt;OpenVPN, being a VPN software, is solely designed to move packets from one place to another.  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I was so sure of that, that I &lt;em&gt;almost&lt;/em&gt; didn't test.&lt;br&gt;
I was quite surprised.&lt;/p&gt;
&lt;h3&gt;Test 1&lt;/h3&gt;
&lt;p&gt;I only compared speed, since I decided the encryption of both programs will be enough.&lt;br&gt;
My test consisted of this procedure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a functioning, data-filled Redis instance in &lt;code&gt;server A&lt;/code&gt;, port 6379&lt;/li&gt;
&lt;li&gt;Start an empty Redis instance in &lt;code&gt;server B&lt;/code&gt;, port 6379&lt;/li&gt;
&lt;li&gt;Setup tunneling (according to the method I was testing)&lt;/li&gt;
&lt;li&gt;Execute &lt;code&gt;redis-cli -p 6379 slaveof &amp;lt;Target port&amp;gt;&lt;/code&gt; on &lt;code&gt;server B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Wait for &lt;code&gt;MASTER &amp;lt;-&amp;gt; SLAVE sync started&lt;/code&gt; to appear on &lt;code&gt;server B&lt;/code&gt;'s Redis&lt;/li&gt;
&lt;li&gt;Wait for &lt;code&gt;MASTER &amp;lt;-&amp;gt; SLAVE sync: Finished with success&lt;/code&gt; to appear on &lt;code&gt;server B&lt;/code&gt;'s Redis&lt;/li&gt;
&lt;li&gt;Cleanup&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I recorded the time it took &lt;code&gt;server B&lt;/code&gt; to go from step 5 to step 6, effectivly measuring the duration of a full replication.&lt;br&gt;
The Redis data set was about 1GB. Not the biggest I've ever seen, but enough for my tests.
I played around with a few parameters, and these are my results:  &lt;/p&gt;
&lt;style type="text/css"&gt;th,td{padding: 20px;}&lt;/style&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;platform&lt;/th&gt;
&lt;th&gt;protocol&lt;/th&gt;
&lt;th&gt;compression&lt;/th&gt;
&lt;th&gt;duration&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OpenVPN&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;21m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;15m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;UDP&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;6m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;5m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SSH&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;1m50s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;1m30s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;2m30s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As you can see, SSH beats OpenVPN. By far.&lt;br&gt;
I was surprised to see this, so I did some additional tests, using &lt;code&gt;iperf&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Test 2&lt;/h3&gt;
&lt;p&gt;My second test utilized &lt;code&gt;iperf&lt;/code&gt;, and I left OpenVPN compression on, because disabling it clearly wasn't helping.&lt;br&gt;
Server A was running the iperf server, using &lt;code&gt;iperf -s&lt;/code&gt;.&lt;br&gt;
Server B was running the iperf client, using &lt;code&gt;iperf -c &amp;lt;SERVER ADDRESS&amp;gt; -p &amp;lt;PORT&amp;gt;&lt;/code&gt;.&lt;br&gt;
Below is my test summary.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;platform&lt;/th&gt;
&lt;th&gt;protocol&lt;/th&gt;
&lt;th&gt;encrpytion&lt;/th&gt;
&lt;th&gt;speed (M&lt;strong&gt;b&lt;/strong&gt;/s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OpenVPN&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;BlowFish&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;AES-256-CBC&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;UDP&lt;/td&gt;
&lt;td&gt;BlowFish&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;AES-256-CBC&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SSH&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;AWS128-CTR&lt;/td&gt;
&lt;td&gt;91&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Although the gap is reduced, SSH stil wins.
After some helpful hints at &lt;a href="http://serverfault.com/questions/653211/ssh-tunneling-is-faster-than-openvpn-could-it-be"&gt;ServerFault&lt;/a&gt;, I understood why, contrary to public opinion, SSH is faster.&lt;/p&gt;
&lt;h3&gt;The solution&lt;/h3&gt;
&lt;p&gt;The difference between SSH and OpenVPN, giving SSH its edge, is on which &lt;a href="http://en.wikipedia.org/wiki/OSI_model"&gt;OSI layer&lt;/a&gt; they work.  &lt;/p&gt;
&lt;h4&gt;OpenVPN&lt;/h4&gt;
&lt;p&gt;Being a VPN service, OpenVPN can operate as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TUN&lt;/code&gt;, a level 3 (IP) device&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TAP&lt;/code&gt;, a level 2 (MAC) device&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Being a network device allows OpenVPN to support diverse protocols (anything over IP with &lt;code&gt;TUN&lt;/code&gt; and anything over Eth802.3 with &lt;code&gt;TAP&lt;/code&gt;) with diverse destinations (different IP addresses, broadcasts etc.) and diverse ports. However, to do that, it has to preserve the original packet structure, so it has to take most of the original packet, wrap it in its own packet (to encrypt and give it a new destination), and send it to ther other OpenVPN instance, where it's unpacked.&lt;br&gt;
This generates overhead, like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/ssh-openvpn-tunneling/diag-openvpn.jpg"&gt;&lt;/p&gt;
&lt;h4&gt;SSH connection forwarding&lt;/h4&gt;
&lt;p&gt;On the other hand, SSH connection forwarding operates at layer 4 (TCP). Because of that, you can only forward one port (unless you're using dynamic forwarding, which has its own overhead), and it has to be on TCP/IP.
However, because SSH operates at a higher OSI layer, less of the original data has to be preseved, so it has less overhead. It looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/ssh-openvpn-tunneling/diag-ssh.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;Some SSH &lt;code&gt;netstat&lt;/code&gt;s&lt;/h3&gt;
&lt;p&gt;I recorded my socket status when running &lt;code&gt;redis-cli&lt;/code&gt; over SSH forwarding.&lt;br&gt;
The redis server is listening on port 6379, and the forwarding is on port 20000.&lt;br&gt;
The commands I used are:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh -f &amp;lt;SERVER IP&amp;gt; -L &lt;span class="m"&gt;20000&lt;/span&gt;:127.0.0.1:6379 -N
redis-cli -p &lt;span class="m"&gt;20000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I removed the listening &lt;code&gt;sshd&lt;/code&gt; socket, because it's irrelevant.&lt;br&gt;
&lt;strong&gt;Before running &lt;code&gt;redis-cli&lt;/code&gt;&lt;/strong&gt;, we can see SSH has an established a tunnel and  listening &lt;code&gt;localhost&lt;/code&gt; socket on the client&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;backslasher@client$ netstat -nap | grep -P &amp;#39;(ssh|redis)&amp;#39;
...
tcp        0      0 127.0.0.1:20000             0.0.0.0:*                   LISTEN      20879/ssh
tcp        0      0 10.105.16.225:53142         &amp;lt;SERVER IP&amp;gt;:22              ESTABLISHED 20879/ssh
...

backslasher@server$ netstat -nap | grep -P &amp;#39;(ssh|redis)&amp;#39;
...
tcp        0      0 0.0.0.0:6379                0.0.0.0:*                   LISTEN      54328/redis-server
tcp        0      0 &amp;lt;SERVER IP&amp;gt;:22              &amp;lt;CLIENT IP&amp;gt;:53142           ESTABLISHED 53692/sshd
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;After running &lt;code&gt;redis-cli&lt;/code&gt;&lt;/strong&gt;, we can see the redis socket on the server, originating from sshd&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;backslasher@client$ netstat -nap | grep -P &amp;#39;(ssh|redis)&amp;#39;
...
tcp        0      0 127.0.0.1:20000             0.0.0.0:*                   LISTEN      20879/ssh
tcp        0      0 127.0.0.1:20000             127.0.0.1:53142             ESTABLISHED 20879/ssh
tcp        0      0 127.0.0.1:53142             127.0.0.1:20000             ESTABLISHED 21692/redis-cli
...

backslasher@server$ netstat -nap | grep -P &amp;#39;(ssh|redis)&amp;#39;
...
tcp        0      0 0.0.0.0:6379                0.0.0.0:*                   LISTEN      54328/redis-server
tcp        0      0 127.0.0.1:6379              127.0.0.1:42680             ESTABLISHED 54328/redis-server
tcp        0      0 127.0.0.1:42680             127.0.0.1:6379              ESTABLISHED 54333/sshd
tcp        0      0 &amp;lt;SERVER IP&amp;gt;:22              &amp;lt;CLIENT IP&amp;gt;:53142           ESTABLISHED 52889/sshd
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As we can see, SSH creates a loopback port on both client and server, so neither address each other directly.&lt;br&gt;
Thanks to that, this information (client IP/port, server IP/port) doesn't have to be transferred, saving overhead.&lt;/p&gt;
&lt;h3&gt;TL;DR&lt;/h3&gt;
&lt;p&gt;As long as you only need one TCP port forwarded, SSH is a much faster choice, because it has less overhead.&lt;/p&gt;</content><category term="FOSS"></category><category term="Mysteries Solved"></category><category term="Networking"></category><category term="Linux"></category><category term="SSH"></category><category term="Security"></category></entry><entry><title>AWS's Block Device Mapping in CentOS</title><link href="https://blog.backslasher.net/aws-block-device-centos.html" rel="alternate"></link><published>2014-12-10T15:40:00+01:00</published><updated>2014-12-10T15:40:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-12-10:/aws-block-device-centos.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I'm using Amazon's EC2 for some of my VMs, which run CentOS. 
When viewing Block Device Mappings (mapping between the virtual storage - ebs, ephemerals etc. and the block devices inside the VM) in CentOS 6.5, I ran into an annoying issue.
When inspecting my instance metadata using …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I'm using Amazon's EC2 for some of my VMs, which run CentOS. 
When viewing Block Device Mappings (mapping between the virtual storage - ebs, ephemerals etc. and the block devices inside the VM) in CentOS 6.5, I ran into an annoying issue.
When inspecting my instance metadata using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl http://169.254.169.254/latest/meta-data/block-device-mapping/ephemeral0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;My ephemeral drive shows up as &lt;code&gt;sdb&lt;/code&gt;.&lt;br&gt;
However, when viewing my actual devices, I found it became &lt;code&gt;sdf&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls -l /dev/sd*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;lrwxrwxrwx. 1 root root 4 2014-12-10 13:09 /dev/sda -&amp;gt; xvde
lrwxrwxrwx. 1 root root 4 2014-12-10 13:09 /dev/sdf -&amp;gt; xvdf
lrwxrwxrwx. 1 root root 4 2014-12-10 13:09 /dev/sdg -&amp;gt; xvdg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This means I can't rely on the mappings for my scripts, meaning I can't easily differentiate between ephemeral drives (fast, free and get wiped every time the instance stops) and EBS drives. Pretty problematic.&lt;/p&gt;
&lt;h3&gt;Red herrings&lt;/h3&gt;
&lt;p&gt;I found a udev rule in &lt;code&gt;/etc/udev/rules.d/99-ami-udev.rules&lt;/code&gt;, which looked like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;KERNEL==&amp;quot;xvd*&amp;quot;, PROGRAM=&amp;quot;/usr/sbin/ami-udev %k&amp;quot;, SYMLINK+=&amp;quot;%c&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which led me to &lt;code&gt;/usr/sbin/ami-udev&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -ne &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; &amp;lt;device&amp;gt;&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;grep -qE &lt;span class="s1"&gt;&amp;#39;xvd[a-z][0-9]?&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; sd&lt;span class="k"&gt;$(&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s2"&gt;&amp;quot;y/[e-v]/[a-z]/&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which led me to read about &lt;code&gt;sed&lt;/code&gt;s "transliteration". &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;All for nothing, because the problem wasn't there&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;The true issue&lt;/h3&gt;
&lt;p&gt;For reasons I don't completely understand (I'm sure they're valid, I just don't understand them), RHEL guys decided to change &lt;code&gt;xen_blkfront&lt;/code&gt;, the module in charge of loading virtualized Xen hard drives.&lt;br&gt;
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=729586"&gt;This Bugzilla entry&lt;/a&gt; points out the issue - virtual SCSI devices (which is what Amazon is using) are now starting at "e", meaning the first device is &lt;code&gt;xvde&lt;/code&gt; (rather than &lt;code&gt;xvda&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;While not an issue by itself, Amazon's metadata service is unaware of this change, causing the metadata to disagree with the real data.&lt;/p&gt;
&lt;h3&gt;The road I didn't take&lt;/h3&gt;
&lt;p&gt;The first solution that I tried is to modify the parameter mentioned in the entry (&lt;code&gt;sda_is_xvda&lt;/code&gt;) to cause the kernel to start naming the devices in the "right" order.&lt;br&gt;
This method has the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure nothing depends on the current block device names&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add an entry to &lt;code&gt;modprobe&lt;/code&gt; to change the parameter &lt;code&gt;sda_is_xvda&lt;/code&gt; to 1.&lt;br&gt;
  I did it using&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; options xen_blkfront &lt;span class="nv"&gt;sda_is_xvda&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee /etc/modprobe.d/xen_blkfront.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rebuild the kernel image (since this is part of the image)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo dracut -f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reboot and check for modified drives&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I chose not to do this because I didn't want to customize my kernel if I didn't have to, not to mention mandating a reboot before continuing my setup.&lt;/p&gt;
&lt;h3&gt;The road I took&lt;/h3&gt;
&lt;p&gt;While less elegant, I've decided to compensate for RHEL's nonsense in my scripts.&lt;br&gt;
It's not that complicated (&lt;code&gt;echo sdb | perl -p -e 'substr($_,2,1)=~tr{a-j}{e-p}'&lt;/code&gt; prints &lt;code&gt;sdf&lt;/code&gt;), but I needed a way to make sure the server has this "&lt;code&gt;xvde&lt;/code&gt; is the first iscsi device" configuration before compensating for it.&lt;br&gt;
My solution to this issue was to compare this (root drive as seen by AWS):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s http://169.254.169.254/latest/meta-data/block-device-mapping/root&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt;&lt;span class="p"&gt;: -2:&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to this (root drive IRL):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mount &lt;span class="p"&gt;|&lt;/span&gt; perl -nae &lt;span class="s1"&gt;&amp;#39;print substr($F[0],-1),&amp;quot;\n&amp;quot; if / on \/ /;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If these results are different, that means that AWS and our OS aren't seeing eye-to-eye, and we need to compensate.  &lt;/p&gt;
&lt;h3&gt;Bonus - Chef test&lt;/h3&gt;
&lt;p&gt;This is my real implementation in Chef:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;aws_root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:ec2&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="ss"&gt;:block_device_mapping_root&lt;/span&gt;&lt;span class="o"&gt;][-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;real_root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`mount`&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/ on \/ /&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/^([^ ]+[a-zA-Z])\d? /&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;][-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;block_diff&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aws_root&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;real_root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;real_root&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;ord&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;aws_root&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;ord&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="AWS"></category><category term="Virtualization"></category><category term="Mysteries Solved"></category><category term="Ruby"></category><category term="Perl"></category><category term="Scripts"></category><category term="Chef"></category></entry><entry><title>Downloading Artifacts from Jenkins with Authentication</title><link href="https://blog.backslasher.net/downloading-artifacts-from-jenkins-with-authentication.html" rel="alternate"></link><published>2014-11-27T15:12:00+01:00</published><updated>2014-11-27T15:12:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-11-27:/downloading-artifacts-from-jenkins-with-authentication.html</id><summary type="html">&lt;h3&gt;Some Background&lt;/h3&gt;
&lt;p&gt;Jenkins is a platform for build automation, and as such allows you to store the results of the build (the binaries, commonly known as "artifacts") for later.&lt;br/&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/artifacts-jenkins-authentication/jenkins-ui1.png"/&gt; &lt;/p&gt;
</summary><content type="html">&lt;h3&gt;Some Background&lt;/h3&gt;
&lt;p&gt;Jenkins is a platform for build automation, and as such allows you to store the results of the build (the binaries, commonly known as "artifacts") for later.&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/artifacts-jenkins-authentication/jenkins-ui1.png"&gt;  &lt;/p&gt;

&lt;p&gt;I saw other people on the internet manually downloading their results via the web UI:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/artifacts-jenkins-authentication/jenkins-ui2.png"&gt;&lt;br&gt;
However, I wanted to pull the artifacts from my automation platform (currently Chef), and ran into an authentication predicament.&lt;/p&gt;
&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;Normally, when using HTTP basic authentication, there's a "challenge-response" mechanism, looking something like this:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/artifacts-jenkins-authentication/http-auth.png"&gt;  &lt;/p&gt;
&lt;p&gt;However, Jenkins &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Authenticating+scripted+clients"&gt;doesn't challenge clients for credentials&lt;/a&gt; (response 401), and instead fails immediatly (response 403).&lt;br&gt;
This is called &lt;a href="http://hc.apache.org/httpclient-3.x/authentication.html#Preemptive_Authentication"&gt;"Preemptive authentication"&lt;/a&gt;, and is considered a bad habit because the client hands out credentials when it's not definitely required. Therefore, most clients require special configuration to handle this.&lt;br&gt;
For instance, when using &lt;code&gt;wget&lt;/code&gt;, one can use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget --auth-no-challenge --http-user&lt;span class="o"&gt;=&lt;/span&gt;USER --http-password&lt;span class="o"&gt;=&lt;/span&gt;BESTPASS http://server/jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, when using any tool where the URL is implicit, such as &lt;a href="https://pip.pypa.io/en/latest/reference/pip_install.html"&gt;PIP&lt;/a&gt; or Chef's &lt;a href="https://docs.getchef.com/resource_remote_file.html"&gt;remote_file&lt;/a&gt;, I can only provide credentials by specifying them in the URL (e.g. &lt;code&gt;http://back:slasher@private.com/repo&lt;/code&gt;), so I don't have any way of modifying the authentication method.&lt;/p&gt;
&lt;p&gt;The result - I can't download artifacts directly from Jenkins, messing up my deployment cookbooks.&lt;br&gt;
I thought about storing the results in a secondary server to act as a repo, but I really liked having Jenkins automatic maintenance (only keeping the last successful build's artifact) and the simplicity of downloading from Jenkins directly, because less steps in building-downloading-installing means less places to fail.&lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;I ended up using Apache on the Jenkins server as a credentials-requiring-proxy, meaning that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apache will require credentials using the good-old "challenge-response" method&lt;/li&gt;
&lt;li&gt;Apache will forward the request, including the now-provided crednetials, to Jenkins&lt;/li&gt;
&lt;li&gt;Jenkins will do it's thing, providing the latest build's artifacts&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The setup was as pretty standard reverse proxy, except for the authentication part - I needed Apache to require credetials, but accept any non-empty set.&lt;br&gt;
I used &lt;a href="http://httpd.apache.org/docs/2.2/mod/mod_authn_anon.html"&gt;mod_authn_anon&lt;/a&gt; to require authentication with &lt;code&gt;*&lt;/code&gt; as the value, causing it to accept any user/password provided.&lt;br&gt;
The result looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="s"&gt;*:1234&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;# Allow any user, but require one&lt;/span&gt;
    &lt;span class="nb"&gt;Anonymous&lt;/span&gt; *
    &lt;span class="nb"&gt;AuthType&lt;/span&gt; basic
    &lt;span class="nb"&gt;AuthName&lt;/span&gt; &amp;#39;Jenkins Proxy&amp;#39;
    &lt;span class="nb"&gt;AuthBasicProvider&lt;/span&gt; anon
    &lt;span class="nb"&gt;Require&lt;/span&gt; valid-user
&lt;span class="nt"&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;ProxyPass&lt;/span&gt; / http://localhost:1111/
&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code&gt;http://localhost:1111/&lt;/code&gt; is Jenkins' normal web UI.&lt;br&gt;
Since I only use "end" URLs (as in not following redirections from the server), I didn't need to add a &lt;a href="http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#proxypassreverse"&gt;ProxyPassReverse&lt;/a&gt; directive like &lt;code&gt;ProxyPassReverse / http://localhost:1111/&lt;/code&gt;, which causes Apache to rewrite HTTP headers to match the proxy rather than the original server.&lt;/p&gt;
&lt;p&gt;I won't post the entire apache configuration, because it's pretty trivial. However, the modules I needed are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mod_proxy&lt;/li&gt;
&lt;li&gt;mod_proxy_http&lt;/li&gt;
&lt;li&gt;mod_auth_basic&lt;/li&gt;
&lt;li&gt;mod_authn_anon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now everything works and I'm happy.&lt;/p&gt;
&lt;h3&gt;Attribution&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HTTP Authentication diagram from &lt;a href="https://docs.oracle.com/cd/E19226-01/820-7627/bncbo/index.html"&gt;Oracle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wget configuration for Jenkins - &lt;a href="http://www.braggfamily.com/2013/03/download-artifacts-from-jenkins-with.html"&gt;Ed Bragg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="FOSS"></category><category term="Jenkins"></category><category term="Linux"></category><category term="Security"></category><category term="HTTP"></category></entry><entry><title>Git Prompt Variables</title><link href="https://blog.backslasher.net/git-prompt-variables.html" rel="alternate"></link><published>2014-10-22T09:05:00+02:00</published><updated>2014-10-22T09:05:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-10-22:/git-prompt-variables.html</id><summary type="html">&lt;p&gt;I recently reinstalled my laptop and had to reconfigure my git prompt.
I use the git prompt script that is included in Ubuntu's git package, and integrate it into my prompt by editing &lt;code&gt;~/.bashrc&lt;/code&gt;, executing &lt;code&gt;source /etc/bash_completion.d/git-prompt&lt;/code&gt;, and adding &lt;code&gt;$(__git_ps1)&lt;/code&gt; to my &lt;code&gt;PS1&lt;/code&gt; variable, just before the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently reinstalled my laptop and had to reconfigure my git prompt.
I use the git prompt script that is included in Ubuntu's git package, and integrate it into my prompt by editing &lt;code&gt;~/.bashrc&lt;/code&gt;, executing &lt;code&gt;source /etc/bash_completion.d/git-prompt&lt;/code&gt;, and adding &lt;code&gt;$(__git_ps1)&lt;/code&gt; to my &lt;code&gt;PS1&lt;/code&gt; variable, just before the ending &lt;code&gt;\$&lt;/code&gt; (which is the final &lt;code&gt;$&lt;/code&gt; in your prompt).&lt;br&gt;
This gives me a basic prompt, that looks something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nitz@computer:~/project (master)$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note the &lt;code&gt;(master)&lt;/code&gt; - that's the git prompt addition.&lt;br&gt;
However, there are environment variables that can be set before calling &lt;code&gt;git-prompt&lt;/code&gt;, that add more information to PS1. I always forget some because I haven't found an organized list of them, only comments in the &lt;code&gt;git-prompt&lt;/code&gt; file itself. I've decided to compile my own list.&lt;/p&gt;
&lt;h3&gt;The Script&lt;/h3&gt;
&lt;p&gt;I used this nifty script to extract all variables mentioned in the actual &lt;code&gt;git-prompt&lt;/code&gt; script with the pattern &lt;code&gt;GIT_PS_*&lt;/code&gt;, since it looks like those are the relevant variables.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat /usr/lib/git-core/git-sh-prompt &lt;span class="p"&gt;|&lt;/span&gt; perl -nle &lt;span class="s1"&gt;&amp;#39;print &amp;quot;$1&amp;quot; if (/(GIT_PS1_[a-zA-Z_]+)/)&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GIT_PS1_DESCRIBE_STYLE&lt;/code&gt;&lt;br&gt;
  Modifies the way detached HEAD is shown. Possible values are:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;contains&lt;/code&gt;: Looks forward in the tree for a tag, so you know which tag you're behind&lt;/li&gt;
&lt;li&gt;&lt;code&gt;branch&lt;/code&gt;: Looks forward in the tree for a tag or a branch (whatever's nearest)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;describe&lt;/code&gt;: Looks backwards in the tree for a tag, so you know which tag you're ahead of&lt;/li&gt;
&lt;li&gt;default: If your exactly on a tag, display it.
  If the method you chose fails to find a tag/branch to display, you'll see the commit id instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GIT_PS1_SHOWCOLORHINTS&lt;/code&gt;&lt;br&gt;
&lt;code&gt;__git_ps1&lt;/code&gt; can be used to &lt;strong&gt;create&lt;/strong&gt; the PS1 prompt and not just its own output. If that's the case, a non-empty value tells git to color the prompt according to the current state (dirty, untracked files...)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GIT_PS1_SHOWDIRTYSTATE&lt;/code&gt;&lt;br&gt;
  Shows the "dirty" indicator - meaning whether you modified tracked files.
  Can be &lt;code&gt;*&lt;/code&gt; for unstaged changes, &lt;code&gt;+&lt;/code&gt; for staged changes, &lt;code&gt;#&lt;/code&gt; for "no HEAD to compare against" (usually only happens before initial commit)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GIT_PS1_SHOWSTASHSTATE&lt;/code&gt;&lt;br&gt;
  Shows the "stash" indicator - meaning whether you have files &lt;a href="http://git-scm.com/book/en/Git-Tools-Stashing"&gt;stashed&lt;/a&gt;.&lt;br&gt;
  Looks like &lt;code&gt;$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GIT_PS1_SHOWUNTRACKEDFILES&lt;/code&gt;
  Shows the "untracked" indicator - meaning whether you have untracked files (files that are in the working directory but haven't been added using &lt;code&gt;git add&lt;/code&gt; to the repository).&lt;br&gt;
  Looks like &lt;code&gt;%&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GIT_PS1_SHOWUPSTREAM&lt;/code&gt;&lt;br&gt;
  Shows the difference between the upstream branch and the current branch. I only use "auto", meaning that I get the following values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; when I'm behind (I need to pull to get changes from the server)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; when I'm ahead (I need to push to update the server with my changes)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; when I'm diverged from the server (some conflict resolution will be required)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt; when we're identical (no action is needed).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This obviously requires me to &lt;code&gt;fetch&lt;/code&gt; the remote server from time to time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;How I did it&lt;/h3&gt;
&lt;p&gt;My prompt currently looks like this. The &lt;code&gt;if&lt;/code&gt; actually sets the prompt and is mostly unmodified (except for adding &lt;code&gt;$(__git_ps1)&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Git&lt;/span&gt;
&lt;span class="nv"&gt;GIT_PS1_SHOWDIRTYSTATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;GIT_PS1_SHOWSTASHSTATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;GIT_PS1_SHOWUNTRACKEDFILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;GIT_PS1_DESCRIBE_STYLE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;contains&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;GIT_PS1_SHOWUPSTREAM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auto&amp;#39;&lt;/span&gt;

&lt;span class="nb"&gt;source&lt;/span&gt; /etc/bash_completion.d/git-prompt

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$color_prompt&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$(__git_ps1)\$ &amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\u@\h:\w$(__git_ps1)\$ &amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="nb"&gt;unset&lt;/span&gt; color_prompt force_color_prompt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="git"></category><category term="bash"></category></entry><entry><title>Validating network segments using Puppet</title><link href="https://blog.backslasher.net/validating-network-segments-using-puppet.html" rel="alternate"></link><published>2014-09-25T13:10:00+02:00</published><updated>2014-09-25T13:10:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-09-25:/validating-network-segments-using-puppet.html</id><summary type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;When configuring KeepaliveD using Puppet, sometimes an interface name has to be used. Imagine a server with 2 interfaces (&lt;code&gt;eth0&lt;/code&gt;,&lt;code&gt;eth1&lt;/code&gt;), where one is facing the internal network and one is facing the internet.&lt;br&gt;
My puppet configuration for an internet-facing virtual interface can be something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;keepalived&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="na"&gt;vrrp …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;When configuring KeepaliveD using Puppet, sometimes an interface name has to be used. Imagine a server with 2 interfaces (&lt;code&gt;eth0&lt;/code&gt;,&lt;code&gt;eth1&lt;/code&gt;), where one is facing the internal network and one is facing the internet.&lt;br&gt;
My puppet configuration for an internet-facing virtual interface can be something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;keepalived&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="na"&gt;vrrp&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="na"&gt;instance&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;external_interface&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;interface&lt;/span&gt;         &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;eth1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;state&lt;/span&gt;             &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;MASTER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;virtual_router_id&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;50&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;priority&lt;/span&gt;          &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;100&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;virtual_ipaddress&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;10.0.0.50&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;10.0.0.51&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;10.0.0.52&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, by doing so, I'm assuming that eth1 is the external network interface. When configuring the server manually, I use &lt;code&gt;ifconfig&lt;/code&gt; to manually check for misconfigurations (e.g. &lt;code&gt;eth0&lt;/code&gt; is the internet-facing interface). I'd like to do the same on Puppet.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Until I have the courage to automatically rename my network devices, I configured Puppet to fail the catalog compilation (thus avoid misconfiguring KeepaliveD) whenever an adapter doesn't have the address I expect it to be (meaning it's misconfigured). I use this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;define&lt;/span&gt; &lt;span class="na"&gt;segment_verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$iface_name=$title,&lt;/span&gt;
    &lt;span class="nv"&gt;$required_network=undef,&lt;/span&gt;
    &lt;span class="nv"&gt;$segment_regex=undef&lt;/span&gt;
&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;

&lt;span class="c"&gt;    # resolve network&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;$segment_regex&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;$required_network&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Cannot define both required_network and segment_regex&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$segment_regex&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$required_network&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;private&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;^10\.0\.0\.&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="na"&gt;public&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;^192\.44\.283\.$&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Unkown required_network &amp;#39;${required_network}&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nv"&gt;$ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;inline_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;%=@ipaddress_${iface_name}%&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$ip&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Could not find IP of interface $iface_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;inline_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;%=if /${regex}/.match(&amp;#39;${ip}&amp;#39;) then &amp;#39;yes&amp;#39; else &amp;#39;no&amp;#39; end %&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;$match&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Interface ${iface_name} with IP ${ip} doesn&amp;#39;t match &amp;#39;${regex}&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, this code is hardly elegant. I can't use CIDR notations ("10.0.0.0/24") and I use ruby templates for the regex. However, it works.&lt;br&gt;
This form of work is imposed on me because Puppet's DSL is designed to be declarative rather than procedural, so many "procedural" bits are broken. In my case, there is no possibility to convert a provided string (&lt;code&gt;^10\.0\.0\.&lt;/code&gt;) to a regular expression, so I have to accomplish that using templates. Same oddity for getting &lt;code&gt;ipaddress_ETHNAME&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I guess I could use a local resource rather than a function, but this method does its trick - it allows me to specify a network adapter and a regex its IP should match to, and fail the catalog if it's not so. For instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;segment_verify&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;eth0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;required_network&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;private&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="na"&gt;segment_verify&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;eth1_ends_with_100&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;iface_name&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;eth1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;segment_regex&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;\.100$&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Puppet"></category><category term="Networking"></category><category term="Regex"></category></entry><entry><title>Accessing a specific server in an HTTP cluster</title><link href="https://blog.backslasher.net/accessing-a-specific-server-in-an-http-cluster.html" rel="alternate"></link><published>2014-09-10T14:00:00+02:00</published><updated>2014-09-10T14:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-09-10:/accessing-a-specific-server-in-an-http-cluster.html</id><summary type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;h3&gt;Part1 - Fault tolerence&lt;/h3&gt;
&lt;p&gt;A common configuration of web servers is setting up multiple servers to serve the same content, with a load-balancing method redirecting / forwarding clients to a specific server.&lt;br&gt;
For instance, let's say I'm using servers &lt;code&gt;server&lt;/code&gt; and &lt;code&gt;otherserver&lt;/code&gt; to serve the site &lt;code&gt;cluster-name&lt;/code&gt;.&lt;br&gt;
The cheapest (as …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;h3&gt;Part1 - Fault tolerence&lt;/h3&gt;
&lt;p&gt;A common configuration of web servers is setting up multiple servers to serve the same content, with a load-balancing method redirecting / forwarding clients to a specific server.&lt;br&gt;
For instance, let's say I'm using servers &lt;code&gt;server&lt;/code&gt; and &lt;code&gt;otherserver&lt;/code&gt; to serve the site &lt;code&gt;cluster-name&lt;/code&gt;.&lt;br&gt;
The cheapest (as in "not requiring any additional software/hardware") way of doing it is creating the following DNS records:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cluster-name IN CNAME server
cluster-name IN CNAME otherserver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Due to  &lt;a href="http://en.wikipedia.org/wiki/Round-robin_DNS"&gt;round-robin DNS&lt;/a&gt;, about 50% of the clients querying for &lt;code&gt;cluster-name&lt;/code&gt; will get the record pointing to &lt;code&gt;server&lt;/code&gt; first (and therefor access it), and the other ones will get &lt;code&gt;otherserver&lt;/code&gt; first. As long as the &lt;code&gt;server&lt;/code&gt; and &lt;code&gt;otherserver&lt;/code&gt; are configured to reply to requests containing &lt;code&gt;Host:"cluster-nane"&lt;/code&gt; with the right application, everything works fine.  &lt;/p&gt;
&lt;h3&gt;Part2 - Monitoring&lt;/h3&gt;
&lt;p&gt;A popular weay to monitor web applications is hitting a specific page and making sure it comes out OK (for example, fetching &lt;code&gt;/test&lt;/code&gt; and making sure it's empty).&lt;br&gt;
When you have just one server, this is easy to test. For example, one can use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://site-adress&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="k"&gt;$(&lt;/span&gt;curl -s &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$SERVER&lt;/span&gt;&lt;span class="s2"&gt;/test&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;$SERVER is damaged&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, when using a configuration with mutliple servers, you can't use the cluster name, because you'll get a random server, and as a responsible admin you want to test all of them individually.&lt;br&gt;
When the servers redirect any hostname to this site, this is still relatively easy to script, like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;SERVERS&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;server&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;otherserver&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; SERVER in &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SERVERS&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="k"&gt;$(&lt;/span&gt;curl -s &lt;span class="s2"&gt;&amp;quot;http://&lt;/span&gt;&lt;span class="nv"&gt;$SERVER&lt;/span&gt;&lt;span class="s2"&gt;/test&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;$SERVER is damaged&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, most sites are configured on &lt;a href="http://en.wikipedia.org/wiki/Virtual_hosting"&gt;virtual hosting&lt;/a&gt;, so they respond only to a specific hostname (mostly to allow serving several sites on the same port). When using the above script on such sites, it won't work (because the host name is wrong).&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Any proper solution should modify the client (the system running the monitoring script) and not the server, so I'm not talking about serving the site at another IP etc.&lt;/p&gt;
&lt;h3&gt;The primitive one&lt;/h3&gt;
&lt;p&gt;The most primitive way of accessing a specific server is by modifying the HOSTS file, adding a record like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;&amp;lt;server ip&amp;gt;    cluster-name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, modifying the HOSTS file requires root/admin privilleges, might affect other processes on the machine and feels messy.&lt;/p&gt;
&lt;h3&gt;The universal one&lt;/h3&gt;
&lt;p&gt;This method works with every tool I saw, because it's utilizing &lt;a href="http://en.wikipedia.org/wiki/Proxy_server#Web_proxy_servers"&gt;HTTP/Web Proxy&lt;/a&gt; support, which is pretty basic.&lt;br&gt;
Normally, the client opens a socket to the hostname/port combination in the URL, writes the HTTP request and reads the response.&lt;br&gt;
When using an HTTP proxy, the client opens a socket to the proxy hostname/port combination and reads the response. The proxy is in charge of contacting the actual host via the &lt;code&gt;Host&lt;/code&gt; HTTP header.&lt;br&gt;
By specifying the server as the proxy, we can keep the request "addressed" to &lt;code&gt;cluster-name&lt;/code&gt; (by using the HTTP header &lt;code&gt;Host: "cluster-name"&lt;/code&gt;), but actually access the server we want.&lt;br&gt;
And now for some examples, assuming &lt;code&gt;server:port&lt;/code&gt; is the actual server/port listening, and &lt;code&gt;http://cluster-name/site&lt;/code&gt; is the target site.&lt;/p&gt;
&lt;h4&gt;Using cURL / wget&lt;/h4&gt;
&lt;p&gt;Both applications can use the environment variable &lt;code&gt;http_proxy&lt;/code&gt;, so the syntax is quite elegant.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://server:port&amp;#39;&lt;/span&gt; curl &lt;span class="s1"&gt;&amp;#39;http://cluster-name/site&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://server:port&amp;#39;&lt;/span&gt; wget &lt;span class="s1"&gt;&amp;#39;http://cluster-name/site&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Using PowerShell&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$prox&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebProxy&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://server:port&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$req&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.Net.WebRequest]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://cluster-name/site&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Proxy&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$prox&lt;/span&gt;
&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetResponse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Using Python&lt;/h4&gt;
&lt;p&gt;Using the &lt;a href="http://docs.python-requests.org/en/latest/"&gt;requests&lt;/a&gt; module&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="n"&gt;proxies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://server:port&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://cluster-name/site&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;proxies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;proxies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Using Ruby&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;net/http&amp;#39;&lt;/span&gt;
&lt;span class="no"&gt;Net&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cluster-name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cluster-name/site&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="HTTP"></category><category term="Web"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="curl"></category><category term="linux"></category></entry><entry><title>Linux and SSDs - Should You TRIM?</title><link href="https://blog.backslasher.net/linux-and-ssds-should-you-trim.html" rel="alternate"></link><published>2014-07-16T15:46:00+02:00</published><updated>2014-07-16T15:46:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-07-16:/linux-and-ssds-should-you-trim.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Although my experience is with Debian, I think this post helps anyone using some modern Linux distribution.  &lt;/p&gt;
&lt;h3&gt;What is TRIM?&lt;/h3&gt;
&lt;p&gt;As a Windows sysadmin, I didn't really consider the cons of running on top of &lt;a href="http://en.wikipedia.org/wiki/Solid_state_drives"&gt;Solid-State Drives&lt;/a&gt;, or SSDs. These drives are based on &lt;a href="http://en.wikipedia.org/wiki/Flash_memory"&gt;flash memory&lt;/a&gt; (similar to a Disk-On-Key), rather than metallic plates.&lt;br/&gt;
A big difference between magnetic hard drives and SSDs is block reuse.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Although my experience is with Debian, I think this post helps anyone using some modern Linux distribution.  &lt;/p&gt;
&lt;h3&gt;What is TRIM?&lt;/h3&gt;
&lt;p&gt;As a Windows sysadmin, I didn't really consider the cons of running on top of &lt;a href="http://en.wikipedia.org/wiki/Solid_state_drives"&gt;Solid-State Drives&lt;/a&gt;, or SSDs. These drives are based on &lt;a href="http://en.wikipedia.org/wiki/Flash_memory"&gt;flash memory&lt;/a&gt; (similar to a Disk-On-Key), rather than metallic plates.&lt;br&gt;
A big difference between magnetic hard drives and SSDs is block reuse.&lt;/p&gt;


&lt;h4&gt;The Problem&lt;/h4&gt;
&lt;p&gt;Every storage device is seen (with the driver's help) as a collection of sectors (or "blocks") by the operating system, which can read and write a fixed amount of data (512 bytes / 4KB) to every sector. File systems are different ways of using said sectors to store files, directories, metadata etc.&lt;br&gt;
In magnetic hard drives, used and unused blocks take the same time to write to. Modern file systems exploit that fact in different ways. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instead of deleting a file, they just "forget" about it, leaving the blocks in their used state (&lt;a href="http://whereismydata.wordpress.com/2009/05/02/forensics-what-happens-when-files-are-deleted/"&gt;Example&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Copy_on_write"&gt;Copy-On-Write&lt;/a&gt; techniques allow file systems to "effortlessly" remember the previous content of files (for versioning, corruption protection etc.), by writing modified content on free blocks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In SSDs, however, this is not the situation. I read a metaphor somewhere thats it's like building a house where a house is already present - you have to demolish the existing house, and only after that you can build your own.
For that reason, used blocks take more time writing to, because the SSD has to erase the block first. The result - after many writes, the performance of SSDs degrades dramatically, even lower than traditional HDs.&lt;br&gt;
&lt;strong&gt;Note&lt;/strong&gt;: There is an additional issue called &lt;a href="http://en.wikipedia.org/wiki/Write_amplification"&gt;Write amplification&lt;/a&gt;, where you can only delete clusters of blocks, requiring the SSD to rearrange partially used blocks. In modern SSD drives, this is solved by the drive's own firmware/configuration as long as you keep the file system trimmed.&lt;/p&gt;
&lt;h4&gt;The Solution&lt;/h4&gt;
&lt;p&gt;The solution to that problem is a new OS-Device command called "&lt;a href="http://en.wikipedia.org/wiki/TRIM"&gt;TRIM&lt;/a&gt;", telling the drive "I don't need this block anymore. Erase it when you have the time". This is a new idea, because traditional HDs don't need that information.&lt;/p&gt;
&lt;h3&gt;Trimming and You&lt;/h3&gt;
&lt;h4&gt;Naming&lt;/h4&gt;
&lt;p&gt;You'll often see TRIM being called "discard". This is because the concept  has been generalised, and can apply to &lt;a href="http://en.wikipedia.org/wiki/Thin_provisioning"&gt;thin-provisioned&lt;/a&gt; LUNs as well.&lt;/p&gt;
&lt;h4&gt;Timing&lt;/h4&gt;
&lt;p&gt;The most obvious way to use TRIM is like Windows does - whenever blocks are no longer needed (e.g. a file was deleted), let the SSD know.&lt;br&gt;
In Linux, this option has &lt;strong&gt;negative performance impact&lt;/strong&gt;, because the Linux kernel &lt;a href="http://en.opensuse.org/SDB:SSD_discard_%28trim%29_support#Kernel_support"&gt;currently handles one block at a time&lt;/a&gt;. For instance, if I delete a file containing 500 blocks, instead of one IO operation (removing the pointer to the file from the directory listing), the kernel will issue 501 IO operations (remove the pointer, TRIM block 1, TRIM block 2...).&lt;br&gt;
In the general use-case, this &lt;a href="http://people.redhat.com/lczerner/discard/ext4_discard.html"&gt;ruins&lt;/a&gt; the performance advantage of SSDs.&lt;br&gt;
I think this is only a temporary setback, because Windows (supposedly) handles TRIM the correct way - using a range.&lt;/p&gt;
&lt;p&gt;If we take an example from Ubuntu, version 14.04 supports trimming but &lt;a href="https://launchpad.net/ubuntu/+source/util-linux/2.20.1-5.1ubuntu14"&gt;uses a weekly scheduled execution&lt;/a&gt; of &lt;a href="http://man7.org/linux/man-pages/man8/fstrim.8.html"&gt;fstrim&lt;/a&gt;. According to a quick Google search, this seems to be the preferred method, because you can execute it in a maintenance window, when I/O isn't peaking.&lt;/p&gt;
&lt;h4&gt;Support&lt;/h4&gt;
&lt;p&gt;Support for TRIM in Linux is partial.&lt;br&gt;
Mainstream &lt;strong&gt;file systems&lt;/strong&gt; (ext4, btrfs) support TRIM, either immediately (using "discard" mount option) or on demand ("fstrim").&lt;br&gt;
Some &lt;strong&gt;containers&lt;/strong&gt; (LVM, md) support passing TRIM commands from the contained file system and some don't. Some containers even issue "discard" requests by themselves if configured to, like LVM (with &lt;code&gt;issue_discards&lt;/code&gt; enabled) when removing volumes. These individual discards are only relevant when making configuration changes (deleting a RAID array) frequently, or when using snapshots.&lt;/p&gt;
&lt;h4&gt;Testing&lt;/h4&gt;
&lt;p&gt;There are many posts on testing TRIM, like &lt;a href="http://andyduffell.com/techblog/?p=852"&gt;this one&lt;/a&gt;, but they only test whether trimming already works, and not if you need it. IMHO, the only proper method to know is benchmarking, manually trimming (using fstrim) and benchmarking again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Yes, you should trim, and by cronning &lt;code&gt;fstrim&lt;/code&gt;. It's worth it.&lt;/p&gt;</content><category term="FOSS"></category><category term="Mysteries Solved"></category><category term="Linux"></category><category term="FileSystem"></category><category term="Debian"></category><category term="Ramblings"></category><category term="Ubuntu"></category><category term="Performance"></category></entry><entry><title>My Pinning Guidelines</title><link href="https://blog.backslasher.net/my-pinning-guidelines.html" rel="alternate"></link><published>2014-06-14T12:10:00+02:00</published><updated>2014-06-14T12:10:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-06-14:/my-pinning-guidelines.html</id><summary type="html">&lt;p&gt;In my &lt;a href="https://blog.backslasher.net/why-pinning.html"&gt;previous post&lt;/a&gt; about
pinning I talked about the reasons to configure apt pinning.&lt;br&gt;
This post details my logic about what and how to pin.&lt;/p&gt;
&lt;h3&gt;Pinning technicalities&lt;/h3&gt;
&lt;h4&gt;How pinning is done&lt;/h4&gt;
&lt;p&gt;The best way to pin stuff is to add files in &lt;code&gt;/etc/apt/preferences.d/&lt;/code&gt;&lt;br&gt;
Those files are …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my &lt;a href="https://blog.backslasher.net/why-pinning.html"&gt;previous post&lt;/a&gt; about
pinning I talked about the reasons to configure apt pinning.&lt;br&gt;
This post details my logic about what and how to pin.&lt;/p&gt;
&lt;h3&gt;Pinning technicalities&lt;/h3&gt;
&lt;h4&gt;How pinning is done&lt;/h4&gt;
&lt;p&gt;The best way to pin stuff is to add files in &lt;code&gt;/etc/apt/preferences.d/&lt;/code&gt;&lt;br&gt;
Those files are parsed whenever the package cache is updated (e.g. &lt;code&gt;apt-get
update&lt;/code&gt;), and rules inside the files are applied to the packages.&lt;br&gt;
You can view the official documentation about pinning using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;man apt_preferences
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;What can you pin&lt;/h4&gt;
&lt;p&gt;Pinning is done on a per-option basis (package+version+origin), meaning
you can pin according to the different fields of an option. The field
details start at about line 289 in the &lt;code&gt;apt_preferences&lt;/code&gt; man page.&lt;br&gt;
Most times, pinning is done according to a specific origin (as in
"pinning a repository") or according to a name and version ( as in
"pinning a version"). You can obviously mix and match for your needs,
but test the results using:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get update
apt-cache policy PACKAGENAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;What to pin&lt;/h3&gt;
&lt;p&gt;There is no "right way" to pin packages (only wrong ones).&lt;br&gt;
Pinning is supposed to reflect the administrator's opinion of "which version of the
package is best", so think of what rules you'd follow if you installed
all packages by hand, and try and see how you can explain that to apt.&lt;br&gt;
These are some strategies I thought of.  &lt;/p&gt;
&lt;h4&gt;Latest is best (default)&lt;/h4&gt;
&lt;p&gt;The default behaviour is preferring the latest version available. When
installing packages only from the stable Debian repositories, this is a
good idea since the only updates are critical bug and security fixes.&lt;br&gt;
It also saves you the trouble of keeping the package version locked (and
needing to update the lock later).  &lt;/p&gt;
&lt;h4&gt;Keeping a certain version&lt;/h4&gt;
&lt;p&gt;Some software repositories offer several versions of the same package,
and let you choose which version to install.&lt;br&gt;
Pinning the package to a specific version will tell apt to prefer  that version if available.&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; You might encounter dependency issues (see "version pinning and
dependencies" for the problem and possible solutions).  &lt;/p&gt;
&lt;h4&gt;Keeping a certain major/minor version&lt;/h4&gt;
&lt;p&gt;Like to the previous example, you may want to hold apt to a
specific major/minor version (e.g. puppet 3.1), but have it upgrade to
the highest build/revision (to allow bug/security updates that don't
modify behaviour). To do so, pin the package to a
&lt;a href="http://en.wikipedia.org/wiki/Globbing"&gt;globbed&lt;/a&gt; version, like &lt;code&gt;3.1.*&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;A last resort repository&lt;/h4&gt;
&lt;p&gt;Some packages aren't available in your official distribution's
repository, but are available on other repositories.&lt;br&gt;
For instance, &lt;a href="http://haproxy.1wt.eu/"&gt;HAProxy&lt;/a&gt; isn't available on the
Debian stable repo, but is available on the Debian &lt;a href="http://backports.debian.org/"&gt;backports
repo&lt;/a&gt;. If we just add the backports
repository, apt will upgrade everything to the backports version (since
every package option there has the same priority and a higher version
number).&lt;br&gt;
If we instead add the repo and pin it to a lower priority, apt will only
take from it packages it can't find anywhere else.  &lt;/p&gt;
&lt;h4&gt;A high priority repository&lt;/h4&gt;
&lt;p&gt;Similar to the last example, you could have a company repo with packages
compiled especially for you - passing additional security audits,
containing critical features, etc. You want apt to prefer package
options in that repo over "normal" options, even if their version number
is lower. To do so, pin the repository to a higher priority than the
default. Remember that you have to keep this repository up to date,
because apt will avoid applying upgrades found in the "normal"
repositories.  &lt;/p&gt;
&lt;h3&gt;Other points to consider&lt;/h3&gt;
&lt;p&gt;These aren't pinning strategies, but rather tips I picked up along they
way.  &lt;/p&gt;
&lt;h4&gt;Which priority numbers do I choose?&lt;/h4&gt;
&lt;p&gt;The examples don't contain actual priority numbers, since these are very delicate.&lt;br&gt;
Priority numbers do more than tell apt which option to prefer
- they modify apt's treatment of the package even further. The full
documentation is in the &lt;code&gt;apt_preferences&lt;/code&gt; man page, but for instance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Priorities over 1000 instruct apt to install this package even if it
constitutes a downgrade&lt;/li&gt;
&lt;li&gt;Priorities lower than 100 will cause apt to only use this version if the package isn't installed at all (no upgrades).  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So choose your numbers carefully - if you don't want apt to change its
behaviour, stick to numbers around 500 (the default value).    &lt;/p&gt;
&lt;h4&gt;Version pinning and dependencies&lt;/h4&gt;
&lt;p&gt;When installing package dependencies (packages that are required for the
one you requested), to packages pinned by version, apt might behave
strangely:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The package may require a specific version of the dependency (for
    example, &lt;code&gt;puppet&lt;/code&gt; 3.3.1 requires &lt;code&gt;puppet-common&lt;/code&gt; &lt;strong&gt;exactly&lt;/strong&gt; in version
    3.3.1)&lt;/li&gt;
&lt;li&gt;When reviewing the dependency installation options, sorted by
    priority and version, the first result may be a different version
    (e.g. version 3.6.2)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this situation, apt is in a pickle - it can't satisfy the dependency
requirement by installing the highest-priority option.&lt;br&gt;
Different apt front-ends treat this dilemma differently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Apt-get&lt;/strong&gt; gives up, giving a weird error like &lt;code&gt;X: depends
Y(=LOWVERSION) but HIGHVERSION is to be installed&lt;/code&gt;, combined with the
accusing statement &lt;code&gt;You have held broken packages&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/my-pinning-guidelines/apt-pinning-issue.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Aptitude&lt;/strong&gt; offers several solutions (aptitude always does), one of
them is what we want (installing the dependency):  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/my-pinning-guidelines/aptitude-pinning-puppet.jpg"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;python apt module&lt;/strong&gt; will throw an exception, telling you the
automatic dependency resolution failed.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/my-pinning-guidelines/python-apt-pinning.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt; to this issue is to study the failed dependencies, and
pin them in the same way. Use aptitude's interactive UI to check for the
dependencies of your package, and find the ones with version constraints
(&lt;code&gt;=X.YY.ZZZZ&lt;/code&gt;). Those are the ones you'll need to pin.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/my-pinning-guidelines/aptitude-depends.png"&gt;&lt;/p&gt;
&lt;p&gt;Remember - wrong pinning could negatively impact your system's security,
performance, stability etc. Make sure you plan it carefully!&lt;/p&gt;</content><category term="FOSS"></category><category term="Security"></category><category term="Linux"></category><category term="Debian"></category><category term="Apt"></category></entry><entry><title>Why Pinning</title><link href="https://blog.backslasher.net/why-pinning.html" rel="alternate"></link><published>2014-06-14T09:05:00+02:00</published><updated>2014-06-14T09:05:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-06-14:/why-pinning.html</id><summary type="html">&lt;p&gt;There are plenty of guides about apt pinning, but no one really explains
the motivation to do so. It took me some time to understand that, so I
thought I'd write it down.  &lt;/p&gt;
&lt;h3&gt;The Issue&lt;/h3&gt;
&lt;p&gt;The mainstream method of downloading and installing packages from a
repository is via APT &lt;a href="http://en.wikipedia.org/wiki/Advanced_Packaging_Tool"&gt;(Advanced …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are plenty of guides about apt pinning, but no one really explains
the motivation to do so. It took me some time to understand that, so I
thought I'd write it down.  &lt;/p&gt;
&lt;h3&gt;The Issue&lt;/h3&gt;
&lt;p&gt;The mainstream method of downloading and installing packages from a
repository is via APT &lt;a href="http://en.wikipedia.org/wiki/Advanced_Packaging_Tool"&gt;(Advanced Packaging
Tool)&lt;/a&gt;. When using
apt, the administrator usually says which package he wants installed,
but apt needs a bit more information:&lt;br&gt;
&lt;strong&gt;Which source?&lt;/strong&gt;&lt;br&gt;
The same package may be available from multiple sources. For example, my
development server is set up to have 3 repositories, all containing some
version of python:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Debian &lt;code&gt;stable&lt;/code&gt; repository, guaranteeing compatibility with other
    packages&lt;/li&gt;
&lt;li&gt;The Debian &lt;code&gt;backports&lt;/code&gt; repository, including more features but still
    pretty stable&lt;/li&gt;
&lt;li&gt;The Debian &lt;code&gt;unstable&lt;/code&gt; repository, offering many new features but
    risking weird behaviour and undiscovered bugs &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unless told manually which repository to install from, apt has to choose
one by itself. &lt;br&gt;
&lt;strong&gt;Which version?&lt;/strong&gt;&lt;br&gt;
When maintaining a server farm, it's important to remember two things:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The software packages should be updated regularly, to protect the
    server from bugs and security vulnerabilities that were discovered
    (and fixed in newer versions).&lt;/li&gt;
&lt;li&gt;Some upgrades shouldn't be allowed, because they modify the
    software's behaviour in an unacceptable way. For instance, upgrading
    mongodb to version 2.4 changes the JavaScript engine to
    multithreading, possibly messing up some scripts. The administrator
    can't afford having some servers with the new versions and some not,
    so when installing a new server the administrator doesn't want the
    new package.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short, apt should choose a version that is new, but not too new.  &lt;/p&gt;
&lt;h3&gt;The Solution - Priorities&lt;/h3&gt;
&lt;p&gt;To solve this issue, apt assigns each package option
(&lt;code&gt;name&lt;/code&gt;+&lt;code&gt;version&lt;/code&gt;+&lt;code&gt;source&lt;/code&gt;) a priority number. When installing a package, the
command usually looks something like:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install puppet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Apt-get then collects all of the possible options, sorts them by
descending priority (highest priority to lowest) and then by descending
version. It chooses the top option and installs that. The administrator
can manipulate the options' priorities, causing apt to prefer the
"right" version. &lt;br&gt;
For example, I pinned my puppet agent package to a specific version.&lt;br&gt;
When executing:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt-cache policy puppet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can see the pinning:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/why-pinning/puppet-pinned.png"&gt;&lt;/p&gt;
&lt;h3&gt;Defaults&lt;/h3&gt;
&lt;p&gt;For Debian / Ubuntu, all of the sources have the same priority - 500.
Usually, apt only encounters one option available of every package, so
there is no collision. When installing / upgrading packages, apt chooses
the latest version released by the official repository - the best
package to install.  &lt;/p&gt;
&lt;h3&gt;Dangers of Pinning&lt;/h3&gt;
&lt;p&gt;Pinning causes apt to change its default behaviour, so if you're doing
it - you better have a reason. Incorrect pinning can cause:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Not upgrading old packages, meaning you're exposed to security,
    performance and reliability issues&lt;/li&gt;
&lt;li&gt;Upgrading to unstable versions, meaning you're exposed to (you
    guessed it) security, performance and reliability issues&lt;/li&gt;
&lt;li&gt;Installing nonfunctional packages - some sources may upload packages
    that are incorrectly built, or contain wrong metadata, causing them
    to misbehave and even break other packages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See my &lt;a href="https://blog.backslasher.net/my-pinning-guidelines.html"&gt;other
post&lt;/a&gt; about pinning for guidelines about what to pin and how.  &lt;/p&gt;</content><category term="FOSS"></category><category term="Security"></category><category term="Linux"></category><category term="Debian"></category><category term="Apt"></category></entry><entry><title>Adding Repositories for Inspection</title><link href="https://blog.backslasher.net/adding-repositories-for-inspection.html" rel="alternate"></link><published>2014-06-12T12:46:00+02:00</published><updated>2014-06-12T12:46:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-06-12:/adding-repositories-for-inspection.html</id><summary type="html">&lt;p&gt;Sometime I want to inspect software repositories. However, I don't want my machine to actually install anything from it.&lt;br&gt;
To do so, I made a small bash function that both adds the repository and pins it to priority -1, telling apt to never install anything from it
(unless manually told …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometime I want to inspect software repositories. However, I don't want my machine to actually install anything from it.&lt;br&gt;
To do so, I made a small bash function that both adds the repository and pins it to priority -1, telling apt to never install anything from it
(unless manually told to).&lt;br&gt;
The files created in the process are printed to screen so they can be easily deleted.   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#Usage:   add-repository-for-inspection NAME REPOINFO&lt;/span&gt;
&lt;span class="c1"&gt;#Example: add-repository-for-inspection wheezy-backports http://debian.co.il/debian wheezy-backports main&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; add-repository-for-inspection
&lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
 &lt;span class="nb"&gt;shift&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
 &lt;span class="nv"&gt;REPO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
 &lt;span class="c1"&gt;# Add repository&lt;/span&gt;
 &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;deb &lt;/span&gt;&lt;span class="nv"&gt;$REPO&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/&lt;span class="nv"&gt;$NAME&lt;/span&gt;.list &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/etc/apt/sources.list.d/&lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt;.list&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;RELEASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
 &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Package: *\nPin: release a=&lt;/span&gt;&lt;span class="nv"&gt;$RELEASE&lt;/span&gt;&lt;span class="s2"&gt;\nPin-Priority: -1&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee /etc/apt/preferences.d/&lt;span class="nv"&gt;$NAME&lt;/span&gt; &amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/etc/apt/preferences.d/&lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It's still best to remove the files and apt-get update immediately
after checking.  &lt;/p&gt;
&lt;p&gt;For instance, I can check for alternative versions of XBMC in &lt;code&gt;wheezy-backports&lt;/code&gt; without risking accidental installations:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;FILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;add-repository-for-inspection wheezy-backports http://debian.co.il/debian wheezy-backports main&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get update &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt;/dev/null &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-cache policy xbmc &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo rm -f &lt;span class="nv"&gt;$FILES&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get update &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Scripts"></category><category term="Linux"></category><category term="Debian"></category><category term="Apt Pinning"></category><category term="One-Liner"></category><category term="Apt"></category></entry><entry><title>Setting up Gargoyle as a Time Server</title><link href="https://blog.backslasher.net/setting-up-gargoyle-as-time-server.html" rel="alternate"></link><published>2014-06-11T12:12:00+02:00</published><updated>2014-06-11T12:12:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-06-11:/setting-up-gargoyle-as-time-server.html</id><summary type="html">&lt;p&gt;&lt;span style="font-size: x-large;"&gt;The Story&lt;/span&gt; &lt;br&gt;
For reasons unknown to me, Debian's NTP daemon only works on udp port
123, even when operating as a client.&lt;br&gt;
This is a problem because my network configuration does not allow
incoming packets on this port, thus preventing my raspberrySeed
(raspberry pi running Debian, deluge, flexget) from syncing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;span style="font-size: x-large;"&gt;The Story&lt;/span&gt; &lt;br&gt;
For reasons unknown to me, Debian's NTP daemon only works on udp port
123, even when operating as a client.&lt;br&gt;
This is a problem because my network configuration does not allow
incoming packets on this port, thus preventing my raspberrySeed
(raspberry pi running Debian, deluge, flexget) from syncing, causing it
to slowly drift away from the real world.&lt;br&gt;
To solve the issue, I did two things:  &lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;h4&gt;1. Turn Gargoyle into an NTP server&lt;/h4&gt;
&lt;p&gt;Since Gargoyle is already syncing from outside, I only had to tell it to
act as a server.&lt;br&gt;
First, &lt;code&gt;ssh&lt;/code&gt; into your gargoyle setup.&lt;br&gt;
Edit the file &lt;code&gt;/etc/config/system&lt;/code&gt;, and under &lt;code&gt;timeserver&lt;/code&gt;, change the
option &lt;code&gt;enable_server&lt;/code&gt; to &lt;code&gt;'1'&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/setting-up-gargoyle-as-time-server/gargoyle-time-settings.png"&gt;&lt;/p&gt;
&lt;p&gt;After editing the file, restart the service using   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/etc/init.d/sysntpd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And ensure the argument &lt;code&gt;-l&lt;/code&gt; was added to the ntp daemon command line,
using this code:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ps &lt;span class="p"&gt;|&lt;/span&gt; grep ntp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/setting-up-gargoyle-as-time-server/gargoyle-ntp-working.png"&gt;&lt;/p&gt;
&lt;h4&gt;2. Tell debian to ask Gargoyle:&lt;/h4&gt;
&lt;p&gt;ssh to your debian machine, and edit the file &lt;code&gt;/etc/ntp.conf&lt;/code&gt;.&lt;br&gt;
Comment out all of the server entires, and only leave one pointing to
the name/IP address of Gargoyle:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/setting-up-gargoyle-as-time-server/debian-ntp-config.png"&gt;&lt;/p&gt;
&lt;p&gt;After that, restart the ntp daemon by running   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo service ntp restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Wait a couple of minutes and use this to test everything is OK:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ntpq -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should see one entry for your Gargoyle router, with the other fields
making sense (not all zeroes):&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/setting-up-gargoyle-as-time-server/debian-time-ok.png"&gt;&lt;/p&gt;
&lt;p&gt;Enjoy your new time configuration!&lt;/p&gt;</content><category term="FOSS"></category><category term="Mysteries Solved"></category><category term="Gargoyle"></category><category term="Linux"></category><category term="Raspberry Pi"></category><category term="Debian"></category><category term="raspberrySeed"></category><category term="NTP"></category></entry><entry><title>Timing Execution By Output Lines</title><link href="https://blog.backslasher.net/timing-execution-by-output-lines.html" rel="alternate"></link><published>2014-06-05T12:12:00+02:00</published><updated>2014-06-05T12:12:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-06-05:/timing-execution-by-output-lines.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;Today I got annoyed that some puppet agent runs took me over 90 seconds
to complete, even though they actually did nothing (no change was
needed).&lt;br&gt;
I wanted to see which part of the run took the longest, so I tried this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo puppet agent --test --debug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;Today I got annoyed that some puppet agent runs took me over 90 seconds
to complete, even though they actually did nothing (no change was
needed).&lt;br&gt;
I wanted to see which part of the run took the longest, so I tried this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo puppet agent --test --debug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately, I don't have the ability to follow the terminal for 90
seconds with full attention, so the only thing I recognized was small
bursts of text:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/timing-execution-by-output-lines/can-you-follow.png"&gt;&lt;br&gt;
&lt;em&gt;Can you follow?&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;I wished puppet's output would have timestamps, but there's no such
feature.&lt;br&gt;
Luckily, I have scripting!&lt;br&gt;
I wanted the solution to be a one-liner (and not a file to be executed)
to keep it portable (as in not having to copy the file to every server).
I considered using awk, python or bash loops, but ended up using perl
because... it gave me the best functionality to code ratio :)   &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/timing-execution-by-output-lines/much-better.png"&gt;&lt;/p&gt;
&lt;h3&gt;The Script&lt;/h3&gt;
&lt;p&gt;I use this code to simulate a real application:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;sleep &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;sleep &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;err&amp;#39;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/timing-execution-by-output-lines/timing-1.png"&gt;&lt;/p&gt;
&lt;p&gt;My one-liner will prepend to each line the seconds passed since the
script's start. That way, if you see a large number gap between two
lines, you can probably tell what's wasting your time.   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;YOURCODEHERE &lt;span class="p"&gt;|&lt;/span&gt; perl -e &lt;span class="s1"&gt;&amp;#39;$b=time();while (&amp;lt;stdin&amp;gt;) {print ((time()-$b),&amp;quot; $_&amp;quot;)};&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/timing-execution-by-output-lines/timing-2.png"&gt;&lt;/p&gt;
&lt;h4&gt;Possible Tweaks&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Consider using &lt;code&gt;|&amp;amp;&lt;/code&gt; instead of &lt;code&gt;|&lt;/code&gt; to pipeline errors (&lt;code&gt;STDERR&lt;/code&gt;) too -
  sometime they're more informative than the standard output, like this:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;YOURCODEHERE &lt;span class="p"&gt;|&amp;amp;&lt;/span&gt; perl -e &lt;span class="s1"&gt;&amp;#39;$b=time();while (&amp;lt;stdin&amp;gt;) {print ((time()-$b),&amp;quot; $_&amp;quot;)};&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/timing-execution-by-output-lines/timing-3.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I really wanted the time measured from the script's start, and not the
computer local time. If you'd rather have that, try something like:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;YOURCODEHERE &lt;span class="p"&gt;|&lt;/span&gt; perl -e &lt;span class="s1"&gt;&amp;#39;while (&amp;lt;stdin&amp;gt;) {print ((scalar localtime()),&amp;quot; $_&amp;quot;)};&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/timing-execution-by-output-lines/timing-4.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the way, puppet's run took so long due to some SQL queries being run
as part of the &lt;code&gt;puppetdb&lt;/code&gt; class.&lt;/p&gt;</content><category term="FOSS"></category><category term="Programming"></category><category term="Perl"></category><category term="Scripts"></category><category term="Linux"></category><category term="One-Liner"></category><category term="Bash"></category></entry><entry><title>Hijacking a process's i/o streams using gdb</title><link href="https://blog.backslasher.net/hijacking-processs-io-streams-using-gdb.html" rel="alternate"></link><published>2014-05-28T12:13:00+02:00</published><updated>2014-05-28T12:13:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-05-28:/hijacking-processs-io-streams-using-gdb.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I recently had a very annoying problem - some daemon failed, but ran
fine when told to run at foreground (not daemonize). Running at
foreground is the easiest way to debug processes, because that way you
get their input / output / error streams in your terminal.&lt;br&gt;
Said daemon had no …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I recently had a very annoying problem - some daemon failed, but ran
fine when told to run at foreground (not daemonize). Running at
foreground is the easiest way to debug processes, because that way you
get their input / output / error streams in your terminal.&lt;br&gt;
Said daemon had no "log to file" option as well, so the only indication
I had that something was wrong is that the daemon didn't do what it's
supposed to do.  &lt;/p&gt;
&lt;p&gt;When processes daemonize, they create a sub process that isn't attached
to anything (so it won't be affected by the terminal closing, for
instance).&lt;br&gt;
The originating process usually exists after creating the sub process,
and so you can't easily capture the output of the sub process.  &lt;/p&gt;
&lt;p&gt;I eventually realized that I need to "hijack" the &lt;code&gt;stderr&lt;/code&gt; stream from the
sub process. I did some stupid attempts, like this (&lt;strong&gt;NOT WORKING&lt;/strong&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tail -f /proc/&lt;span class="k"&gt;$(&lt;/span&gt;pidof &lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;/ld/2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Eventually I wrote something using strace, which was
OK:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo strace -ff -p &lt;span class="k"&gt;$(&lt;/span&gt;pidof &lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; -e &lt;span class="nv"&gt;write&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;,2 -s &lt;span class="m"&gt;1024&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;^ |&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/hijacking-processs-io-streams-using-gdb/strace-ok-solution.png"&gt;&lt;/p&gt;
&lt;p&gt;It gave me the output I wanted, and I solved my issue (which was me
passing relative file locations, inaccessible to the sub process created
because it doesn't inherit the parent's working directory). However, I
wanted something more elegant. I found the commands in &lt;a href="http://gcolpart.evolix.net/blog21/capture-inputoutput-of-a-process-with-gdb/"&gt;this
post&lt;/a&gt;,
which did something better - given a &lt;code&gt;pid&lt;/code&gt;, they redirect its input,
output and error streams to some &lt;code&gt;tty&lt;/code&gt; (terminal), giving you control over
the process.&lt;br&gt;
However, it wasn't a fire-and forget script. I tried to fix that :-)  &lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;My script will hook the process to your current terminal.&lt;br&gt;
&lt;strong&gt;Please note:&lt;/strong&gt; I don't think it's a good idea to leave the hijacked
daemon running after finishing troubleshooting. You should probably
restart it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;DAEMON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;afuse
&lt;span class="nv"&gt;MYT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tty&lt;span class="k"&gt;)&lt;/span&gt;
sudo gdb -p &lt;span class="k"&gt;$(&lt;/span&gt;pidof &lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;call close(0)&lt;/span&gt;
&lt;span class="s"&gt;call close(1)&lt;/span&gt;
&lt;span class="s"&gt;call close(2)&lt;/span&gt;
&lt;span class="s"&gt;call open(&amp;quot;$MYT&amp;quot;, 2, 0)&lt;/span&gt;
&lt;span class="s"&gt;call dup(0)&lt;/span&gt;
&lt;span class="s"&gt;call dup(0)&lt;/span&gt;
&lt;span class="s"&gt;detach&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice the output - much better:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/hijacking-processs-io-streams-using-gdb/gdb-great-solution.png"&gt;&lt;/p&gt;
&lt;p&gt;The way the script works is this:&lt;br&gt;
First, it uses &lt;code&gt;tty&lt;/code&gt; to find the path to the current terminal.&lt;br&gt;
gdb is then called to close streams 0,1,2 (which are almost always
&lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, &lt;code&gt;stderr&lt;/code&gt;) and open a new stream to the &lt;code&gt;tty&lt;/code&gt; found before.
The new stream opens at index 0 (because it's the lowest index
available, since we just closed 0,1,2) and copies it to 1 and 2 as well.
Now &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; are all mapped to the current terminal -
success!&lt;/p&gt;</content><category term="FOSS"></category><category term="Scripts"></category><category term="Linux"></category><category term="gdb"></category><category term="Debugging"></category><category term="Bash"></category></entry><entry><title>Testing Local Facebook Applications with ABE</title><link href="https://blog.backslasher.net/testing-local-facebook-applications-with-abe.html" rel="alternate"></link><published>2014-05-05T12:59:00+02:00</published><updated>2014-05-05T12:59:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-05-05:/testing-local-facebook-applications-with-abe.html</id><summary type="html">&lt;p&gt;I'm using Firefox with &lt;a href="http://noscript.net/"&gt;NoScript&lt;/a&gt;, which is the
AdBlock of scripts - allowing you to selectively block scripts according
to various rules (e.g. block all scripts from analytics.google.com), and
additionally helps protecting you from XSS (&lt;a href="http://en.wikipedia.org/wiki/Cross-site_scripting"&gt;cross site
scripting&lt;/a&gt;).&lt;br&gt;
One of the components in NoScript is ABE (&lt;a href="http://noscript.net/abe/"&gt;Application Boundaries …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm using Firefox with &lt;a href="http://noscript.net/"&gt;NoScript&lt;/a&gt;, which is the
AdBlock of scripts - allowing you to selectively block scripts according
to various rules (e.g. block all scripts from analytics.google.com), and
additionally helps protecting you from XSS (&lt;a href="http://en.wikipedia.org/wiki/Cross-site_scripting"&gt;cross site
scripting&lt;/a&gt;).&lt;br&gt;
One of the components in NoScript is ABE (&lt;a href="http://noscript.net/abe/"&gt;Application Boundaries
Enforcer&lt;/a&gt;), which I see as a replacement for
Internet Explorer's zones.&lt;br&gt;
It comes populated with one rule - preventing non-local sites from
accessing local resources (for example, preventing &lt;code&gt;www.evilsite.com&lt;/code&gt; from
invoking &lt;code&gt;file:///etc/group&lt;/code&gt; to learn about your local groups).&lt;br&gt;
Problem is, when developing Facebook applications, you usually want to
run the application locally (because it's much easier to modify and
debug), but still view it from the Facebook website (because Facebook
populates your site with some needed variables that way).&lt;br&gt;
When I tried doing that in firefox, I found out that ABE was protecting
me:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/testing-local-facebook-applications-with-abe/FB-Abe-Blocking.png"&gt;&lt;/p&gt;
&lt;p&gt;My immediate thought was to disable ABE while
developing, but I've decided to take this opportunity to learn how it
works.&lt;br&gt;
I saw the relevant rule looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# Prevent Internet sites from requesting LAN resources.
Site LOCAL
Accept from LOCAL
Deny
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And after adding this rule above it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# The &amp;quot;.&amp;quot; are at the beginning on purpose!
Site .My-Computer.FQDN
Accept ALL from .facebook.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ABE no longer blocked it:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/testing-local-facebook-applications-with-abe/FB-Abe-Allowing.png"&gt;&lt;/p&gt;
&lt;p&gt;Now I have my own bugs to deal with :)&lt;/p&gt;</content><category term="FOSS"></category><category term="Security"></category><category term="Facebook"></category><category term="Development"></category><category term="NoScript"></category><category term="Firefox"></category><category term="HTTP"></category></entry><entry><title>Fixing Ugly Hebrew on Ubuntu + Firefox</title><link href="https://blog.backslasher.net/fixing-ugly-hebrew-on-ubuntu-firefox.html" rel="alternate"></link><published>2014-04-24T13:01:00+02:00</published><updated>2014-04-24T13:01:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-04-24:/fixing-ugly-hebrew-on-ubuntu-firefox.html</id><summary type="html">&lt;p&gt;The default viewing experience, when visiting some Hebrew sites when
using Firefox on Ubuntu, is quite unsightly.&lt;br/&gt;
If we check &lt;a href="http://ynet.co.il/"&gt;Ynet.co.il&lt;/a&gt;, a news site, we'll see
this biblical font being used:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/fixing-ugly-hebrew-on-ubuntu-firefox/ff-hebrew-ugly.png"/&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;The default viewing experience, when visiting some Hebrew sites when
using Firefox on Ubuntu, is quite unsightly.&lt;br&gt;
If we check &lt;a href="http://ynet.co.il/"&gt;Ynet.co.il&lt;/a&gt;, a news site, we'll see
this biblical font being used:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/fixing-ugly-hebrew-on-ubuntu-firefox/ff-hebrew-ugly.png"&gt;&lt;/p&gt;

&lt;p&gt;Let's check which fonts Ynet asks to be viewed in:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/fixing-ugly-hebrew-on-ubuntu-firefox/ff-ynet-david.png"&gt;&lt;/p&gt;
&lt;p&gt;If you look at the marked part, you'll see something like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;font-family&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Arial&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Arial (Hebrew)&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;David (Hebrew)&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Courier New (Hebrew)&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we see the reason - a lot of sites were designed and tested for
Windows  (surprise!), and as such require fonts that aren't free
(&lt;a href="http://en.wikipedia.org/wiki/Gratis_versus_libre"&gt;libre&lt;/a&gt;).&lt;br&gt;
For example, the font "David" is not free to use &lt;a href="http://www.fonts.com/font/masterfont/david"&gt;at
all&lt;/a&gt;. Because of that, such
fonts are not included in Ubuntu by default.  &lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;Use this following command, taken from &lt;a href="http://askubuntu.com/a/166995"&gt;askubuntu&lt;/a&gt;, to install Microsoft fonts.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install ttf-mscorefonts-installer culmus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Complete installation, refresh and voila:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/fixing-ugly-hebrew-on-ubuntu-firefox/ff-hebrew-nice.png"&gt;&lt;/p&gt;
&lt;h3&gt;Further reading&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.microsoft.com/typography/fonts/"&gt;Microsoft typography  - fonts&lt;/a&gt;&lt;br&gt;
&lt;a href="https://help.ubuntu.com/community/RestrictedFormats/Microsoft_Fonts"&gt;Microsoft Fonts at ubuntu.com&lt;/a&gt;&lt;/p&gt;</content><category term="FOSS"></category><category term="Linux"></category><category term="Fonts"></category><category term="HTML"></category><category term="Ubuntu"></category><category term="Firefox"></category></entry><entry><title>Automatically Mounting USB drives and Surviving Reconnects</title><link href="https://blog.backslasher.net/automatically-mounting-usb-drives-and-surviving-reconnects.html" rel="alternate"></link><published>2014-04-15T17:48:00+02:00</published><updated>2014-04-15T17:48:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-04-15:/automatically-mounting-usb-drives-and-surviving-reconnects.html</id><summary type="html">&lt;p&gt;Today I solved a problem that has been bothering me for a while - being unable to automatically "remount" my USB drive in case it disconnects and reconnects.&lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;My raspberrySeed (rPi + Debian + Deluge) has a USB drive connected (to keep the downloaded content in). The filesystem on that drive …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I solved a problem that has been bothering me for a while - being unable to automatically "remount" my USB drive in case it disconnects and reconnects.&lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;My raspberrySeed (rPi + Debian + Deluge) has a USB drive connected (to keep the downloaded content in). The filesystem on that drive should be always mounted to the same directory, which is not trivial in Linux.&lt;br&gt;
Unlike Windows, which tries to assign consistent drive letters to the mounted filesystems (If your disk-on-key gets the letter "F:", after disconnecting and connecting it, it'll still be "F:" if not occupied), Linux chooses the lowest block device name (sda, sdb...) available for a new device, so no consistency is guranteed.&lt;br&gt;
If you want consistency, you're offered to mount your filesystems
according to their &lt;a href="https://help.ubuntu.com/community/UsingUUID"&gt;UUID (or LABEL)&lt;/a&gt;, which can be found by listing the following directories (after knowing the current block device you're interested in):  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@computer:~$ ls -l /dev/disk/by-uuid/
total 0
lrwxrwxrwx 1 root root 10 apr 15 10:58 aSECRETa-aaaa-aaaa-aaaa-aaaaaaaaaaaa -&amp;gt; ../../dm-0
lrwxrwxrwx 1 root root 10 apr 15 10:58 aSECRETa-aaaa-aaaa-aaaa-aaaaaaaaaaaa -&amp;gt; ../../sda6
lrwxrwxrwx 1 root root 10 apr 15 10:58 aaaaSECRETaaaaaa -&amp;gt; ../../sda1
lrwxrwxrwx 1 root root 10 apr 15 10:58 aTHEaONE-aaaa-aaIa-aaaa-aWANTaaaaaaa -&amp;gt; ../../sdb2
lrwxrwxrwx 1 root root 10 apr 15 10:58 aSECRETa-aaaa-aaaa-aaaa-aaaaaaaaaaaa -&amp;gt; ../../sda5
lrwxrwxrwx 1 root root 10 apr 15 10:58 aaaaSECRETaaaaaa -&amp;gt; ../../sdb1

user@computer:~$ ls -l /dev/disk/by-label/
total 0
lrwxrwxrwx 1 root root 10 apr 15 10:58 some.Partition -&amp;gt; ../../sdb1
lrwxrwxrwx 1 root root 10 apr 15 10:58 partition-name -&amp;gt; ../../sdb2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you know your stuff, you can see that those are just symlinks, maintained by udev.&lt;br&gt;
After finding the right UUID, you can add this line to your &lt;code&gt;/etc/fstab&lt;/code&gt; file, to make Linux mount it to &lt;code&gt;/media/dest&lt;/code&gt; (an empty directory) automatically on boot:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;UUID=aTHEaONE-aaaa-aaIa-aaaa-aWANTaaaaaaa /media/dest ext4 defaults,auto 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Looks ideal, but if we check the command &lt;code&gt;mount&lt;/code&gt;, we'll see that it's resolving the symlink and mounting the actual block device:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@computer:~$ sudo mount -a
user@computer:~$ mount
...
/dev/sdb2 on /media/dest type ext4 (rw,relatime,data=ordered)
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;My problem was that by when my disk disconnects-reconnects (quite common in my setup, due to power surges, faulty cables etc.), it gets a new block device and the mount remains connected to the old one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@computer:~$ ls -l /dev/disk/by-uuid/aTHEaONE-aaaa-aaIa-aaaa-aWANTaaaaaaa
lrwxrwxrwx 1 root root 10 apr 15 10:58 aTHEaONE-aaaa-aaIa-aaaa-aWANTaaaaaaa -&amp;gt; ../../sdc2

user@computer:~$ mount | grep /media/dest
/dev/sdb2 on /media/dest type ext4 (rw,relatime,data=ordered)

user@computer:~$ ls /media/dest
ls: cannot access dest: Input/output error

user@computer:~$ sudo mount -a
user@computer:~$ mount | grep /media/dest
/dev/sdc2 on /media/dest type ext4 (rw,relatime,data=ordered)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See the problem? Without manually telling Linux to re-evaluate the symlink, the mount remains connected to the old block device, rendering it useless.&lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;The best solution I found is using &lt;a href="https://wiki.debian.org/udev"&gt;udev rules&lt;/a&gt;.&lt;br&gt;
&lt;code&gt;udev&lt;/code&gt; is the Linux subsystem in charge of handling physical devices, and  among many other things, is in charge of creating the "by-uuid" and "by-label" symlinks we saw before.&lt;br&gt;
The processing occurs according to rules called "udev rules", listed in &lt;code&gt;/lib/udev/rules.d/&lt;/code&gt;&lt;br&gt;
So here is my solution:  &lt;/p&gt;
&lt;h4&gt;1. Identify filesystem UUID and destination directory&lt;/h4&gt;
&lt;p&gt;Use some trick (&lt;code&gt;gnome-disks&lt;/code&gt; on another system, listing &lt;code&gt;/dev/disks/by-uuid&lt;/code&gt; as seen earlier) to find your filesystem's UUID.&lt;br&gt;
Let's say it's &lt;code&gt;aaDREAMa-aaaa-aaaa-aaaa-aFILESYSaaaa&lt;/code&gt;&lt;br&gt;
Also prepare a directory to mount to. It should be empty.&lt;br&gt;
Let's say it's &lt;code&gt;/media/dest&lt;/code&gt;   &lt;/p&gt;
&lt;h4&gt;2. Create fstab entry - do not use automount&lt;/h4&gt;
&lt;p&gt;Edit &lt;code&gt;/etc/fstab&lt;/code&gt; to contain all configuration related to your filesystem.&lt;br&gt;
It's not mandatory (you can specify the destination mount in the udev rule), but I think it's better to keep that configuration in a standard location. You can use something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;UUID=aaDREAMa-aaaa-aaaa-aaaa-aFILESYSaaaa /media/dest auto defaults,noauto 0 0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee -a /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;3. Create udev rules to mount / unmount whenever the device is connected / disconnected&lt;/h4&gt;
&lt;p&gt;This is the fun part. Create a file in &lt;code&gt;/lib/udev/rules.d&lt;/code&gt;. I chose &lt;code&gt;/lib/udev/rules.d/99-automount-usb.rules&lt;/code&gt; to make sure it runs last (after the by-uuid symlink has been created), and put two actions in it - one will mount the device when connected, and another dismounts it
when it's disconnected:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ACTION==&amp;quot;add&amp;quot;, ENV{ID_FS_UUID_ENC}==&amp;quot;aaDREAMa-aaaa-aaaa-aaaa-aFILESYSaaaa&amp;quot;, RUN+=&amp;quot;/bin/mount /dev/%k&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee &lt;span class="s1"&gt;&amp;#39;/lib/udev/rules.d/99-automount-usb.rules&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ACTION==&amp;quot;remove&amp;quot;, ENV{ID_FS_UUID_ENC}==&amp;quot;aaDREAMa-aaaa-aaaa-aaaa-aFILESYSaaaa&amp;quot;, RUN+=&amp;quot;/bin/umount /dev/%k&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee -a &lt;span class="s1"&gt;&amp;#39;/lib/udev/rules.d/99-automount-usb.rules&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;4. Test&lt;/h4&gt;
&lt;p&gt;Apply the settings using&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo udevadm control --reload-rules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now stop any processes interacting with the device (like Deluge), disconnect and reconnect it, and note the output of:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mount &lt;span class="p"&gt;|&lt;/span&gt; grep /media/dest&lt;span class="p"&gt;;&lt;/span&gt;ls /media/dest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If everything works, it should either return nothing when the drive is unplugged, and somthing like this when it is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/dev/sdb1 on /media/dest type ext4 (rw,relatime,data=ordered)
&amp;lt;Files inside the mobile drive&amp;#39;s filesystem&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Further reading:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reactivated.net/writing_udev_rules.html"&gt;http://www.reactivated.net/writing_udev_rules.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ubuntuforums.org/showthread.php?t=168221"&gt;http://ubuntuforums.org/showthread.php?t=168221&lt;/a&gt; (Commands are out
    of date, but still decent)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/udev"&gt;https://wiki.archlinux.org/index.php/udev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="FOSS"></category><category term="Mysteries Solved"></category><category term="Scripts"></category><category term="Linux"></category><category term="FileSystem"></category><category term="Raspberry Pi"></category><category term="raspberrySeed"></category><category term="udev"></category></entry><entry><title>Python Library for Deluge Torrent Maintenance</title><link href="https://blog.backslasher.net/python-library-for-deluge-torrent-maintenance.html" rel="alternate"></link><published>2014-04-14T13:05:00+02:00</published><updated>2014-04-14T13:05:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-04-14:/python-library-for-deluge-torrent-maintenance.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I added &lt;a href="https://github.com/BackSlasher/deluge_framework"&gt;this project&lt;/a&gt; as my first
GitHub repo  &lt;/p&gt;
&lt;p&gt;I have an ongoing project which I nickname my raspberrySeed, which is a
Rasbperry Pi running Deluge. Works 24/7, takes very little power,
minimal heat, no noise, works as a fine seedbox.&lt;br&gt;
However, I recently encountered strange situtations in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I added &lt;a href="https://github.com/BackSlasher/deluge_framework"&gt;this project&lt;/a&gt; as my first
GitHub repo  &lt;/p&gt;
&lt;p&gt;I have an ongoing project which I nickname my raspberrySeed, which is a
Rasbperry Pi running Deluge. Works 24/7, takes very little power,
minimal heat, no noise, works as a fine seedbox.&lt;br&gt;
However, I recently encountered strange situtations in which the remote
Deluge UI (on my PC) would get stuck and eventually cause the Deluge
daemon (on the rPi) to crash.&lt;br&gt;
After some checking, I realized showing the UI is too demanding, at
least with the amount of torrents I'm seeding. Time to weed out some
torrents, but how will I do it without a working UI?&lt;br&gt;
The original &lt;code&gt;deluge-console&lt;/code&gt; didn't work for two reasons:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manipulation of massive amounts of torrents is a nightmare - I'll be
    surprised if someone can manage more than 20 torrents at a time with
    this interface.&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/python-library-for-deluge-torrent-maintenance/deluge-console-full.png"&gt;&lt;/li&gt;
&lt;li&gt;Even the console was too much - apparently it's sophisticated enough
    to subscribe for updates from the Deluge daemon and many other
    things, overloading my poor rPi.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eventually, I found &lt;a href="http://forum.deluge-torrent.org/viewtopic.php?f=9&amp;amp;t=37157"&gt;this post&lt;/a&gt;, where someone wrote a python script that deletes old torrents.&lt;br&gt;
Instead of creating my own (because the &lt;a href="http://deluge-torrent.org/docs/1.2/core/rpc.html"&gt;Deluge
RPC&lt;/a&gt; Python API is
event based and basically annoying), I rewrote that script to give a me
a Python library (or module, not sure).&lt;br&gt;
The calling script should only contain the "business logic" - what to do with
every torrent. The real action (deletion, for instance) is performed by
the library.&lt;br&gt;
First, some already working use cases. All cases assume Deluge library
files (included with Deluge), the library is in "deluge_framework.py"
and a local-running daemon (remote instances are obviously fine, and
parameters are detailed in the library itself).  &lt;/p&gt;
&lt;h4&gt;Searching for some torrents&lt;/h4&gt;
&lt;p&gt;Print using the library all torrents containing "linux":  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;deluge_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;filter_torrents&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;torrentAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;linux&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;filter_torrents&lt;/span&gt;&lt;span class="p"&gt;({},[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;torrentAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[+] Connection was successful!
[i] ?????????SECRET????????????????????????? [kali-linux-1.0.5-amd64]: Listing (doing nothing)
[+] Finished
[i] Client disconnected.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Printing progress and state for all torrents&lt;/h4&gt;
&lt;p&gt;Print (using pyton's &lt;code&gt;print&lt;/code&gt;) every torrent's id, status and progress:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;deluge_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;filter_torrents&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;torrentAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;state&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;progress&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;filter_torrents&lt;/span&gt;&lt;span class="p"&gt;({},[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;state&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;progress&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;torrentAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[+] Connection was successful!
?????????SECRET?????????????????????????: Queued 100.0
?????????SECRET?????????????????????????: Queued 100.0
?????????SECRET?????????????????????????: Seeding 100.0
?????????SECRET?????????????????????????: Queued 100.0
?????????SECRET?????????????????????????: Queued 100.0
?????????SECRET?????????????????????????: Seeding 100.0
?????????SECRET?????????????????????????: Queued 100.0
?????????SECRET?????????????????????????: Queued 100.0
?????????SECRET?????????????????????????: Queued 100.0
[+] Finished
[i] Client disconnected.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Summing the size of all torrents&lt;/h4&gt;
&lt;p&gt;Collect the total size of each torrent and print the sum (in GB):  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;deluge_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;filter_torrents&lt;/span&gt;
&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;torrentAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;
    &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total_done&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;filter_torrents&lt;/span&gt;&lt;span class="p"&gt;({},[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total_done&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;torrentAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total: &lt;/span&gt;&lt;span class="si"&gt;%i&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[+] Connection was successful!
[+] Finished
[i] Client disconnected.
total: 198
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Removing all done torrents&lt;/h4&gt;
&lt;p&gt;Delete (without deleting data) all completed torrents:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;deluge_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;filter_torrents&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;torrentAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;progress&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;filter_torrents&lt;/span&gt;&lt;span class="p"&gt;({},[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;progress&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;torrentAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[+] Connection was successful!
[+] ?????????SECRET????????????????????????? [SOME TORRENT NAME]: Deleted without data
[+] ?????????SECRET????????????????????????? [SOME TORRENT NAME]: Deleted without data
[+] ?????????SECRET????????????????????????? [SOME TORRENT NAME]: Deleted without data
[+] Finished
[i] Client disconnected.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;The Actual Code&lt;/h3&gt;
&lt;p&gt;If you can think of another good use for it, please tell me in the
comments!   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span class="c1"&gt;###############&lt;/span&gt;
&lt;span class="c1"&gt;# By: Nitzan (http://BackSlasher.net)&lt;/span&gt;
&lt;span class="c1"&gt;# The interesting code is at the bottom&lt;/span&gt;
&lt;span class="c1"&gt;# call filter_torrents from your code like this:&lt;/span&gt;
&lt;span class="c1"&gt;## from deluge_framework import filter_torrents&lt;/span&gt;
&lt;span class="c1"&gt;## filter_torrents(connection_data,torrent_info_wanted,action,interactive)&lt;/span&gt;
&lt;span class="c1"&gt;# see bottom of script for details&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;deluge.log&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LOG&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;deluge.ui.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;deluge.component&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;component&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;twisted.internet&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;defer&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dresult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;smsg&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;is_interactive&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_interactive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[+]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;smsg&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;smsg&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;emsg&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;is_interactive&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_interactive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[e]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;emsg&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;endSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;esresult&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;esresult&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;esresult&lt;/span&gt;
        &lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;printSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Client disconnected.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printReport&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rresult&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;printSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Finished&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;endSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_torrents_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrents&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;tlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;torrent_info&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;torrents&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torrentAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;successmsg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; [&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]: Deleted without data&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="n"&gt;errormsg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; [&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]: Error deleting without data&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="n"&gt;tlist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove_torrent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addCallbacks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;printSuccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;printError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callbackArgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;successmsg&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;errbackArgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errormsg&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;successmsg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; [&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]: Deleted WITH DATA&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="n"&gt;errormsg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; [&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]: Error deleting WITH DATA&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="n"&gt;tlist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove_torrent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addCallbacks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;printSuccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;printError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callbackArgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;successmsg&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;errbackArgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errormsg&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;printSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; [&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]: Listing (doing nothing)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;pass&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;printError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; [&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]: Unknown function response &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;printError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; [&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]: Exception &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torrent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;torrent_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;defer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeferredList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tlist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;printReport&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_session_state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_torrents_status&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;torrent_info_wanted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;on_torrents_status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_connect_success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;printSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Connection was successful!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_session_state&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;on_session_state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;filter_torrents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="n"&gt;info_wanted&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;tid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tinfo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Get all torrents and filter them&lt;/span&gt;
&lt;span class="sd"&gt;    Arguments:&lt;/span&gt;
&lt;span class="sd"&gt;    connection_data -- How to connect to the deluged daemon. Specify a dictionary of host, port(integer), username, password&lt;/span&gt;
&lt;span class="sd"&gt;    info_wanted -- A list of fields to be retrived for each torrent. You&amp;#39;ll get it as a populated dictionary when action is called&lt;/span&gt;
&lt;span class="sd"&gt;    action -- function called for each torrent. Will get two variables - the torrent id and a populated dictionary of the torrent data. Should return a string indicating what to do with the torrent. Possible values:&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;&amp;#39;:  Do nothing&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;d&amp;#39;: Delete torrent (without deleting data)&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;D&amp;#39;: Delete torrent WITH data&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;l&amp;#39;: List torrent (display id and name)&lt;/span&gt;
&lt;span class="sd"&gt;        (Anything else): Causes an error.&lt;/span&gt;
&lt;span class="sd"&gt;        More things to come!&lt;/span&gt;
&lt;span class="sd"&gt;    interactive -- whether to write information / errors to output. Send False for cron jobs&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;# ensure &amp;#39;name&amp;#39; is in torrent_info_wanted&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;info_wanted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;info_wanted&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# set parameters&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;cliconnect&lt;/span&gt;
    &lt;span class="n"&gt;cliconnect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;connection_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;torrent_info_wanted&lt;/span&gt;
    &lt;span class="n"&gt;torrent_info_wanted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;info_wanted&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;torrentAction&lt;/span&gt;
    &lt;span class="n"&gt;torrentAction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;is_interactive&lt;/span&gt;
    &lt;span class="n"&gt;is_interactive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;interactive&lt;/span&gt;
    &lt;span class="c1"&gt;# start the show&lt;/span&gt;
    &lt;span class="n"&gt;cliconnect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addCallbacks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;on_connect_success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endSession&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errbackArgs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Connection failed: check settings and try again.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="Programming"></category><category term="Scripts"></category><category term="Raspberry Pi"></category><category term="raspberrySeed"></category><category term="Ramblings"></category><category term="Python"></category><category term="Deluge"></category></entry><entry><title>Listing Unity's Scopes and Originating Package</title><link href="https://blog.backslasher.net/listing-unitys-scopes-and-originating-package.html" rel="alternate"></link><published>2014-04-14T09:36:00+02:00</published><updated>2014-04-14T09:36:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-04-14:/listing-unitys-scopes-and-originating-package.html</id><summary type="html">&lt;p&gt;I recently upgraded to Ubuntu 14.04 (beta2), and I got all of my
"lenses" (searching additional items in the dash menu), that look like
this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/listing-unitys-scopes-and-originating-package/lenses.png"&gt;&lt;/p&gt;
&lt;p&gt;Of course there's a way to disable those lenses, but I actually want to
remove those I'll never use (like flickr).&lt;br&gt;
The problem  - lenses …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently upgraded to Ubuntu 14.04 (beta2), and I got all of my
"lenses" (searching additional items in the dash menu), that look like
this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/listing-unitys-scopes-and-originating-package/lenses.png"&gt;&lt;/p&gt;
&lt;p&gt;Of course there's a way to disable those lenses, but I actually want to
remove those I'll never use (like flickr).&lt;br&gt;
The problem  - lenses are installed using packages that don't always
match the lens' name. Using &lt;code&gt;apt-file&lt;/code&gt; (a utility for finding files inside
packages) and &lt;code&gt;parallel&lt;/code&gt;, I built a little script.&lt;br&gt;
First, install &lt;code&gt;parallel&lt;/code&gt; and &lt;code&gt;apt-file&lt;/code&gt;, and update apt-file's cache:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install parallel apt-file
sudo apt-file update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then execute this script:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find /usr/share/unity/scopes/ -name &lt;span class="se"&gt;\*&lt;/span&gt;.scope &lt;span class="p"&gt;|&lt;/span&gt; parallel &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt; ROW=$(apt-file search {});&lt;/span&gt;
&lt;span class="s1"&gt; FILE=$(echo $ROW | cut -f 2 -d &amp;quot;:&amp;quot;);&lt;/span&gt;
&lt;span class="s1"&gt; PACK=$(echo $ROW | cut -f 1 -d &amp;quot;:&amp;quot;);&lt;/span&gt;
&lt;span class="s1"&gt; NAME=$(cat $FILE | grep ^Name | head -1 | sed &amp;quot;s/^Name\=//&amp;quot;);&lt;/span&gt;
&lt;span class="s1"&gt; echo &amp;quot;$PACK: $NAME&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sort
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;you'll see a list of lens friendly names, sorted by containing package,
like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;...
unity-scope-gourmet: Gourmet
unity-scope-guayadeque: Guayadeque
unity-scope-manpages: Manpages
unity-scope-musicstores: Music store
unity-scope-musique: Musique
unity-scope-openclipart: OpenClipArt
unity-scopes-master-default: Applications
unity-scopes-master-default: Books
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That way you can see which lenses you'll never use and remove the
matching package (using &lt;code&gt;apt-get&lt;/code&gt; or your favorite package manager).&lt;br&gt;
Of course, if you remove a package you'll lose access to all lenses inside it, so think it through!  &lt;/p&gt;</content><category term="FOSS"></category><category term="Unity"></category><category term="Scripts"></category><category term="Linux"></category><category term="Parallel"></category><category term="Ubuntu"></category><category term="Bash"></category></entry><entry><title>Mass-Checking SSH Connections using Parallel</title><link href="https://blog.backslasher.net/mass-checking-ssh-connections-using-parallel.html" rel="alternate"></link><published>2014-04-13T12:23:00+02:00</published><updated>2014-04-13T12:23:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-04-13:/mass-checking-ssh-connections-using-parallel.html</id><summary type="html">&lt;p&gt;Today I wanted to make sure I have SSH access to about 100 servers.&lt;br&gt;
Obviously, I wasn't going to verify the list by hand, so I put all of
the servers' names in a file, and wrote this little script:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; NAME in &lt;span class="k"&gt;$(&lt;/span&gt;cat ~/Desktop/server-names&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$NAME …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Today I wanted to make sure I have SSH access to about 100 servers.&lt;br&gt;
Obviously, I wasn't going to verify the list by hand, so I put all of
the servers' names in a file, and wrote this little script:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; NAME in &lt;span class="k"&gt;$(&lt;/span&gt;cat ~/Desktop/server-names&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;
        ssh -o &lt;span class="s2"&gt;&amp;quot;StrictHostKeyChecking no&amp;quot;&lt;/span&gt; -o &lt;span class="s2"&gt;&amp;quot;BatchMode yes&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$NAME&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;echo a&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt;/dev/null
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;BAD&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note the SSH executes the command &lt;code&gt;echo a&lt;/code&gt;, because otherwise it'll run
interactively. Also, note the options &lt;code&gt;StrictHostKeyChecking no&lt;/code&gt;,
meaning it will accept new host fingerprints without asking, and
&lt;code&gt;BatchMode yes&lt;/code&gt;, meaning it will not prompt for a password (only try my
SSH key).&lt;br&gt;
This script will print a list of results such as:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;server1 OK
server2 BAD
server3 OK
server4 OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which you can save in a file, and then view all of the bad servers using
something like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat ssh-test-results &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;BAD&lt;/span&gt;$&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Problem was, I didn't like the script checking only one server at a
time, so I parallelized it:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;parallel &lt;span class="s1"&gt;&amp;#39;echo -n &amp;quot;{} &amp;quot;;ssh -o StrictHostKeyChecking=no -o BatchMode=yes {} &amp;quot;echo a&amp;quot; &amp;amp;&amp;gt;/dev/null;if [ $? -eq 0 ]; then echo &amp;quot;OK&amp;quot;;else echo &amp;quot;BAD&amp;quot;;fi;&amp;#39;&lt;/span&gt; &amp;lt;server-names-file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result is the same (not sorted according to the original but I didn't care about it), only much quicker.&lt;/p&gt;</content><category term="FOSS"></category><category term="Scripts"></category><category term="SSH"></category><category term="One-Liner"></category><category term="Bash"></category><category term="Parallel"></category></entry><entry><title>Fixing Dynamic DNS on Gargoyle</title><link href="https://blog.backslasher.net/fixing-dynamic-dns-on-gargoyle.html" rel="alternate"></link><published>2014-03-23T13:07:00+01:00</published><updated>2014-03-23T13:07:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-03-23:/fixing-dynamic-dns-on-gargoyle.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I switched to &lt;code&gt;inadyn&lt;/code&gt; on my home server eventually. I left this article because it's still relevant&lt;/p&gt;
&lt;p&gt;I was digging through the logs of my latest
&lt;a href="http://www.gargoyle-router.com/"&gt;Gargoyle&lt;/a&gt; installation (a router
firmware based on OpenWrt, with a better UI in my opinion), and found
out that &lt;a href="http://en.wikipedia.org/wiki/Dynamic_DNS"&gt;Dynamic DNS&lt;/a&gt; updates
were …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I switched to &lt;code&gt;inadyn&lt;/code&gt; on my home server eventually. I left this article because it's still relevant&lt;/p&gt;
&lt;p&gt;I was digging through the logs of my latest
&lt;a href="http://www.gargoyle-router.com/"&gt;Gargoyle&lt;/a&gt; installation (a router
firmware based on OpenWrt, with a better UI in my opinion), and found
out that &lt;a href="http://en.wikipedia.org/wiki/Dynamic_DNS"&gt;Dynamic DNS&lt;/a&gt; updates
were failing.&lt;br&gt;
I was a little disappointed that I couldn't find any documentation about
what to do - the messages, both in the log and in the UI weren't too
informative.&lt;br&gt;
They were either:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/fixing-dynamic-dns-on-gargoyle/DDNSCliError.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Successfully retrieved local ip from url&lt;/code&gt;..., so no real error there&lt;br&gt;
Or:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/fixing-dynamic-dns-on-gargoyle/DDNSUIError.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Update of new dynamic DNS service configuration(s) failed&lt;/span&gt;
&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="err"&gt;Service(s) could not be update properly and have therefore been&lt;/span&gt;
&lt;span class="err"&gt;removed.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which gives me no info.&lt;br&gt;
Luckily, it's all Linux, so I quickly found the configuration files and
got to work.&lt;br&gt;
Because my DDNS provider is &lt;a href="http://dnsexit.com/"&gt;dnsexit.com&lt;/a&gt;, I
searched for files containing "dnsexit" in the &lt;code&gt;/etc&lt;/code&gt; directory (which
is where configuration is usually kept), like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep -r &lt;span class="s2"&gt;&amp;quot;dnsexit&amp;quot;&lt;/span&gt; /etc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I found the configuration in &lt;code&gt;/etc/ddns_providers.conf&lt;/code&gt;. You'll see
there the configuration for all of different DDNS providers. I'll copy
my current one:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;service dnsexit.com
 url_template   https://www.dnsexit.com/RemoteUpdate.sv?login=[[USERNAME]]&amp;amp;password=[[PASSWORD]]&amp;amp;host=[[DOMAIN]]&amp;amp;myip=[[IP]]
 required_variables  domain username password
 required_variable_names  DyDNS.DoNm,DyDNS.UsrN,DyDNS.Pssw
 success_regexp   /^0=Success|1=IP*/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Using this configuration, we can deduce that hitting the url under
&lt;code&gt;url_template&lt;/code&gt; while replacing all double-bracketed variables with
actual values will try and update my IP, and the response has to match
the &lt;a href="http://en.wikipedia.org/wiki/Regular_expression"&gt;regular expression&lt;/a&gt; under
&lt;code&gt;success_regexp&lt;/code&gt;. My next action was building this small bash script to
try and emulate Gargoyle's actions:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;BESTHOSTEVER.com
&lt;span class="nv"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;SOMETHING
&lt;span class="nv"&gt;PASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;SOMETHINGELSE

&lt;span class="nv"&gt;IP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -s ifconfig.me/ip&lt;span class="k"&gt;)&lt;/span&gt;
curl &lt;span class="s2"&gt;&amp;quot;https://www.dnsexit.com/RemoteUpdate.sv?login=&lt;/span&gt;&lt;span class="nv"&gt;$USER&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;password=&lt;/span&gt;&lt;span class="nv"&gt;$PASS&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;host=&lt;/span&gt;&lt;span class="nv"&gt;$HOST&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;myip=&lt;/span&gt;&lt;span class="nv"&gt;$IP&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note the line starting with IP. It uses &lt;code&gt;cURL&lt;/code&gt; to hit a nice website,
which is supposed to return your external IP address. The result I got
looked like:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; HTTP/1.1 200 OK
4=IP not changed. To save our system resources, please don&amp;#39;t post updates unless the IP got changed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So it looks like dnsexit says something like "no change is needed.
Please don't bother us for no reason." According to &lt;a href="http://downloads.dnsexit.com/ipUpdate.doc"&gt;this document&lt;/a&gt; I found, the code
returned should be 1 (same IP) and not 4 (stop hammering our servers),
because I tried that action once every couple of hours. I can instruct
Gargoyle to accept this as a reasonable answer by modifying
"success_regexp" to this:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; success_regexp   /^0=Success|1=IP|4=IP not changed*/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After backing up the file, editing and trying again, lo and behold!
Everything works!&lt;/p&gt;</content><category term="FOSS"></category><category term="DNS"></category><category term="Mysteries Solved"></category><category term="Gargoyle"></category><category term="Scripts"></category><category term="Linux"></category><category term="Networking"></category><category term="DDNS"></category><category term="Bash"></category></entry><entry><title>Disabling "generate Publisher Evidence" using scripts</title><link href="https://blog.backslasher.net/disabling-generate-publisher-evidence.html" rel="alternate"></link><published>2014-01-28T10:35:00+01:00</published><updated>2014-01-28T10:35:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-28:/disabling-generate-publisher-evidence.html</id><summary type="html">&lt;p&gt;I found the script we were using to disable authenticode on our machines, &lt;a href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html"&gt;a feature that causes great suffering&lt;/a&gt; (and dll-loading-delays) to workstations not connected to the Internet when using various Microsoft products (i.e. SQL Management Studio, SharePoint).&lt;br&gt;
Note the line at the end - the script tries to find …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I found the script we were using to disable authenticode on our machines, &lt;a href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html"&gt;a feature that causes great suffering&lt;/a&gt; (and dll-loading-delays) to workstations not connected to the Internet when using various Microsoft products (i.e. SQL Management Studio, SharePoint).&lt;br&gt;
Note the line at the end - the script tries to find all &lt;code&gt;machine.config&lt;/code&gt;
files on the local machine, but you might want to modify other files
(remote machines, only version 4 etc.).&lt;br&gt;
Also, this script modifies windows configuration files, so make sure to
test critical systems afterwards (perhaps reboot the
server).&lt;a name="more"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Modify-Config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$backupDir&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Loading XML $filename&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;$doc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;xml&lt;/span&gt;
 &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Locating parent node (/configuration/runtime)&amp;#39;&lt;/span&gt;
 &lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectSingleNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/configuration/runtime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Non-default xml. Stopping&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Locating child node (generatePublisherEvidence)&amp;#39;&lt;/span&gt;
  &lt;span class="nv"&gt;$child&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generatePublisherEvidence&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Creating child node&amp;#39;&lt;/span&gt;
   &lt;span class="nv"&gt;$child&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;generatePublisherEvidence&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AppendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Checking attribute &amp;quot;enabled&amp;quot;&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Creating node &amp;quot;enabled&amp;quot;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$att&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;enabled&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$att&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Setting &amp;quot;enabled&amp;quot; to &amp;quot;false&amp;quot;&amp;#39;&lt;/span&gt;
   &lt;span class="nv"&gt;$child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;

   &lt;span class="c"&gt;# If modified, save&lt;/span&gt;
   &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Backing up file&amp;#39;&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$backupDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;cp &lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="n"&gt;-dest&lt;/span&gt; &lt;span class="nv"&gt;$backupDir&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="nb"&gt;Write-Verbose&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Saving file&amp;#39;&lt;/span&gt;
   &lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Framework&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Framework64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$env:windir\Microsoft.NET\$_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;test-path&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;v*&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;fullname&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$_\CONFIG\machine.config&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;test-path&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="n"&gt;Modify-Config&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="Windows"></category><category term=".NET framework"></category><category term="XML"></category><category term="PowerShell"></category></entry><entry><title>Finding Accounts Trusted for Delegation</title><link href="https://blog.backslasher.net/finding-accounts-trusted-for-delegation.html" rel="alternate"></link><published>2014-01-23T13:10:00+01:00</published><updated>2014-01-23T13:10:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-23:/finding-accounts-trusted-for-delegation.html</id><summary type="html">&lt;p&gt;As part of a security audit, I was asked to help in finding all accounts
marked with "Trusted for Delegation"  &lt;/p&gt;
&lt;h3&gt;What is "Trust for Delegation"&lt;/h3&gt;
&lt;p&gt;You can try reading the &lt;a href="http://technet.microsoft.com/en-us/library/cc739740%28v=ws.10%29.aspx"&gt;TechNet Article&lt;/a&gt;,
but in short - delegation (also known as kerberos double-hop) is
allowing a service to impersonate clients in order …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As part of a security audit, I was asked to help in finding all accounts
marked with "Trusted for Delegation"  &lt;/p&gt;
&lt;h3&gt;What is "Trust for Delegation"&lt;/h3&gt;
&lt;p&gt;You can try reading the &lt;a href="http://technet.microsoft.com/en-us/library/cc739740%28v=ws.10%29.aspx"&gt;TechNet Article&lt;/a&gt;,
but in short - delegation (also known as kerberos double-hop) is
allowing a service to impersonate clients in order to access other
services, e.g. allowing an ASP.NET site to pull CRM records via CRM web
service, using the client's credentials (and so showing only records
relevant to the client).&lt;a name="more"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;The Risk&lt;/h3&gt;
&lt;p&gt;Accounts that are trusted for delegation can access other services in
the domain (e.g. Active Directory, Exchange, in-house software that uses
kerberos authentication, external software using ADFS) without the
user's explicit action or consent (sometimes without him even accessing
the system, see next paragraph) and without any limits or indication
that it's not the original user.&lt;br&gt;
Some configurations also allow the delegate access to any service in the
domain (as opposed to specified ones) or giving the delegate access
without the user actually accessing the delegate in the first place
(read on).&lt;br&gt;
To sum it up, delegation must be used sparingly due to its dangerous
nature.  &lt;/p&gt;
&lt;h3&gt;Technical Implementation and Quirks&lt;/h3&gt;
&lt;p&gt;Delegation is all about an application getting a kerberos TGS (Ticket
Granting Service) for another resource, using the client's identity
(allowing the server to impersonate the client for that resource).&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/finding-accounts-trusted-for-delegation/kerbDelegationDialog.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;Delegation configuration is saved like that:  &lt;/p&gt;
&lt;style type="text/css"&gt;
.borderline table td,th { border: 1px solid #000; }
&lt;/style&gt;
&lt;div class="borderline"&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Configuration&lt;/th&gt;
&lt;th&gt;UserAccountControl &amp;amp; 0x80000 (TRUSTED_FOR_DELEGATION)&lt;/th&gt;
&lt;th&gt;UserAccountControl &amp;amp; 0x100000 (TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION)&lt;/th&gt;
&lt;th&gt;msDS-AllowedToDelegateTo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Do not trust this user for delegation&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Trust this user for delegation to any service (Kerberos only)&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Trust this user for delegation for specified services only (Kerberos protocol)&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V (List of SPNs)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Trust this user for delegation for specified services only (Any authentication protocol)&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;V (List of SPNs)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;When "Any protocol" is enabled&lt;/strong&gt;, services don't need to present an existing kerberos TGS, but can fabricate one using only the user's id. (Source: &lt;a href="http://msdn.microsoft.com/en-us/library/ff650469.aspx"&gt;Technet&lt;/a&gt;)&lt;br&gt;
   This method is designed to accommodate services that don't use kerberos authentication (e.g. websites that use forms authentication), but has a very serious implication - accounts allowed to do so don't have to present any proof that a specific user has even accessed the system - they can create any TGS out of thin air.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When constrained to specific services&lt;/strong&gt;, the resulting TGS is itself delegation-constrained to those services, so to allow a "triple hop" like this:&lt;br&gt;
&lt;code&gt;S1 &amp;gt; S2 &amp;gt; S3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;S1&lt;/code&gt; must be configured either to allow delegation to &lt;code&gt;any service&lt;/code&gt; or to &lt;code&gt;S2&lt;/code&gt; &lt;strong&gt;AND&lt;/strong&gt; &lt;code&gt;S3&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;For really sensitive accounts&lt;/strong&gt; (such as domain admins), one can mark "Account is sensitive and cannot be delegated" to prevent AD allowing any form of delegation with this account. This account will suffer from reduced functionality on applications requiring delegation to work (like the site described earlier).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Finding Allowed Accounts&lt;/h3&gt;
&lt;p&gt;Although PowerShell's module for Active Directory has some calculated variables for delegation (e.g. &lt;code&gt;TrustedForDelegation&lt;/code&gt;), they can't be used to filter &lt;code&gt;ADObject&lt;/code&gt; (only &lt;code&gt;ADUSer&lt;/code&gt; or &lt;code&gt;ADComputer&lt;/code&gt;), so I built my own script
to find trusted-for-delegation accounts:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ADObject&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="n"&gt;msDS-AllowedToDelegateTo&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserAccountControl&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="n"&gt;0x0080000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserAccountControl&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="n"&gt;0x1000000&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;samAccountName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;msDS-AllowedToBeDelegateTo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;servicePrincipalName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;userAccountControl&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;DistinguishedName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ObjectClass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;samAccountName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;servicePrincipalName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DelegationStatus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserAccountControl&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="n"&gt;0x80000&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AllServices&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SpecificServices&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}},&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AllowedProtocols&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserAccountControl&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="n"&gt;0x1000000&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Any&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Kerberos&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}},&lt;/span&gt;
&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DestinationServices&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msDS-AllowedToDelegateTo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Security"></category><category term="Scripts"></category><category term="Windows"></category><category term="Delegation"></category><category term="PowerShell"></category><category term="One-Liner"></category><category term="Active Directory"></category></entry><entry><title>Some PowerShell Snippets for Network Scanning</title><link href="https://blog.backslasher.net/some-powershell-snippets-for-network-scanning.html" rel="alternate"></link><published>2014-01-21T13:11:00+01:00</published><updated>2014-01-21T13:11:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-21:/some-powershell-snippets-for-network-scanning.html</id><summary type="html">&lt;p&gt;I recently had to improvise some network scanning using PowerShell. The
security guys got somewhat excited, so I decided to upload these
snippets.&lt;br&gt;
I think all of them require PowerShell v2+  &lt;/p&gt;
&lt;h3&gt;Checking ping for one IP address&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Test-Connection&lt;/span&gt; &lt;span class="nv"&gt;$target&lt;/span&gt; &lt;span class="n"&gt;-count&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt; &lt;span class="n"&gt;-quiet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Checking if a TCP port is listening&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I recently had to improvise some network scanning using PowerShell. The
security guys got somewhat excited, so I decided to upload these
snippets.&lt;br&gt;
I think all of them require PowerShell v2+  &lt;/p&gt;
&lt;h3&gt;Checking ping for one IP address&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Test-Connection&lt;/span&gt; &lt;span class="nv"&gt;$target&lt;/span&gt; &lt;span class="n"&gt;-count&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt; &lt;span class="n"&gt;-quiet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Checking if a TCP port is listening&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;TryOpen-TCPPort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$port&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$socket&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sockets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TcpClient&lt;/span&gt;
  &lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Scanning a list of addresses for predefined ports&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Map-Ports&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$targets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="no"&gt;[int[]]&lt;/span&gt;&lt;span class="nv"&gt;$tcpPorts&lt;/span&gt;
 &lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="nv"&gt;$targets&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$target&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IP&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HasPing&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="nv"&gt;$tcpPorts&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;TCP$_&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$ip&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$ip&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="no"&gt;[System.Net.Dns]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$target&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;AddressList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;IPAddressToString&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="no"&gt;[Net.Sockets.SocketException]&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IP&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$ip&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ip&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nv"&gt;$ret&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HasPing&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Test-Connection&lt;/span&gt; &lt;span class="nv"&gt;$ip&lt;/span&gt; &lt;span class="n"&gt;-Quiet&lt;/span&gt; &lt;span class="n"&gt;-Count&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;$tcpPorts&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$ret&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TCP$_&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TryOpen-TCPPort&lt;/span&gt; &lt;span class="nv"&gt;$ip&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Scanning some subnet for web servers&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Map-Ports&lt;/span&gt; &lt;span class="n"&gt;-targets&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;254&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.0.$_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-tcpPorts&lt;/span&gt; &lt;span class="n"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;443&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Scanning my immediate subnet for common MS ports&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# Fabricate IP Addresses&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Fabricate-IPAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$header&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nv"&gt;$queue&lt;/span&gt;&lt;span class="p"&gt;=@(&lt;/span&gt;&lt;span class="nv"&gt;$header&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;--){&lt;/span&gt;
  &lt;span class="nv"&gt;$newQueue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$queue&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$q&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;254&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$q.$_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
  &lt;span class="nv"&gt;$queue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$newQueue&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nv"&gt;$queue&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Scan Immediate Addresses&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Scan-MySubnet&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$myIps&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;win32_networkAdapterConfiguration&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IPEnabled=True&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IPAddress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;++){&lt;/span&gt;
   &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[System.Net.IPAddress]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IPAddress&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;])}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Subnet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[System.Net.IPAddress]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IPSubnet&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;])}}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$myIPs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
  &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;# Worst range calculation ever, but it works for standard subnets&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Subnet&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="s1"&gt;&amp;#39;225.255.255.0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="s1"&gt;&amp;#39;225.255.0.0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="s1"&gt;&amp;#39;225.0.0.0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Too lazy to calculate range&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$header&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetAddressBytes&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;..(&lt;/span&gt;&lt;span class="n"&gt;4&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;$levels&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt; &lt;span class="n"&gt;-join&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;Fabricate-IPAddress&lt;/span&gt; &lt;span class="nv"&gt;$header&lt;/span&gt; &lt;span class="nv"&gt;$levels&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;Map-Ports&lt;/span&gt; &lt;span class="n"&gt;-targets&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Scan-MySubnet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-tcpPorts&lt;/span&gt; &lt;span class="n"&gt;135&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;445&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Testing a web page on a server&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Get-WebResponseCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[switch]&lt;/span&gt;&lt;span class="nv"&gt;$UseDefaultCredentials&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nv"&gt;$req&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[System.Net.WebRequest]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseDefaultCredentials&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$UseDefaultCredentials&lt;/span&gt;
 &lt;span class="c"&gt;# Avoid downloading the whole page&lt;/span&gt;
 &lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HEAD&amp;#39;&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetResponse&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
 &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="no"&gt;[System.Net.WebException]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;{0}: {1}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusDescription&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Testing common webpages on a server&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Test-WebPages&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$targets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="no"&gt;[uri[]]&lt;/span&gt;&lt;span class="nv"&gt;$paths&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$schemes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="no"&gt;[switch]&lt;/span&gt;&lt;span class="nv"&gt;$UseDefaultCredentials&lt;/span&gt;
 &lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="nv"&gt;$targets&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
  &lt;span class="nb"&gt;Write-Progress&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Testing Servers&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Id&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
  &lt;span class="nv"&gt;$target&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
  &lt;span class="nv"&gt;$schemes&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
   &lt;span class="nb"&gt;Write-Progress&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Testing Schemes&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Id&lt;/span&gt; &lt;span class="n"&gt;2&lt;/span&gt;
   &lt;span class="nv"&gt;$scheme&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
   &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$new&lt;/span&gt;&lt;span class="n"&gt;-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
   &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$target&lt;/span&gt;
   &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Scheme&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$scheme&lt;/span&gt;
   &lt;span class="nv"&gt;$paths&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="nv"&gt;$pu&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${scheme}://$target&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;$paths&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$u&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="nv"&gt;$pu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Progress&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Testing Url&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$u&lt;/span&gt; &lt;span class="n"&gt;-Id&lt;/span&gt; &lt;span class="n"&gt;3&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-WebResponseCode&lt;/span&gt; &lt;span class="nv"&gt;$u&lt;/span&gt; &lt;span class="n"&gt;-UseDefaultCredentials&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$UseDefaultCredentials&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$ret&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;Test-WebPages&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SharePointDev&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ExchangeCAS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AnotherServer&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-paths&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/owa&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/sites&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-schemes&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-UseDefaultCredentials&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="TCP"></category><category term="Security"></category><category term="HTTP"></category><category term="Scripts"></category><category term="Windows"></category><category term="PowerShell"></category><category term="One-Liner"></category></entry><entry><title>Setting Up Samba on Raspberry Pi</title><link href="https://blog.backslasher.net/setting-up-samba-on-raspberry-pi.html" rel="alternate"></link><published>2014-01-13T13:12:00+01:00</published><updated>2014-01-13T13:12:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-13:/setting-up-samba-on-raspberry-pi.html</id><summary type="html">&lt;p&gt;After setting up my rPi TorrentBox, I wanted to let my family access the
downloaded files.&lt;br&gt;
Since they use Windows (and I don't want to bother their systems with
NFS), I wanted to install Samba on the rPi and create a read-only share
(and a weak user for them to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After setting up my rPi TorrentBox, I wanted to let my family access the
downloaded files.&lt;br&gt;
Since they use Windows (and I don't want to bother their systems with
NFS), I wanted to install Samba on the rPi and create a read-only share
(and a weak user for them to access the share with).&lt;br&gt;
I found a lot of guides for setting up Samba, but every one was missing
something, so I documented my own procedure:  &lt;/p&gt;
&lt;h3&gt;1. Plan Configuration&lt;/h3&gt;
&lt;p&gt;Answer these questions before you start:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shares:&lt;ul&gt;
&lt;li&gt;Are you going to use authentication or guest access? (hint:
    authentication is better)&lt;/li&gt;
&lt;li&gt;Is the share read-only?&lt;/li&gt;
&lt;li&gt;What is the share name? (best to keep it in lower-case)&lt;/li&gt;
&lt;li&gt;What is the physical path the share is pointing to? Is it always
    mounted or on a removable drive?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Users / authentication:&lt;ul&gt;
&lt;li&gt;Do you need to change the workgroup's name?&lt;/li&gt;
&lt;li&gt;Do you need to disable password encryption (VERY old clients)?&lt;/li&gt;
&lt;li&gt;How many different remote-access users will be required? How are
    they called? &lt;/li&gt;
&lt;li&gt;Do some users already exist as UNIX users?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's much easier working with a clear understanding of the desired
configuration.  &lt;/p&gt;
&lt;h3&gt;2. Prepare Access User&lt;/h3&gt;
&lt;p&gt;Create the linux user you want to use (in my case "theothers"). You can
use this command:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;adduser --shell /bin/false --no-create-home
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note that:&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shell is set to &lt;code&gt;/bin/false&lt;/code&gt; to help prevent the user from actually
    logging in&lt;/li&gt;
&lt;li&gt;No home directory is created, because the user isn't supposed to
    login anyway&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3. Prepare Permissions&lt;/h3&gt;
&lt;p&gt;Make sure the access user can't do too much damage, because it might be
abused. I limited its permissions to read (since I don't want my family
messing about the directory anyway).&lt;br&gt;
I won't go into the POSIX permissions model, but the best way to test
the user's permissions is to impersonate that user using   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo su -s /bin/bash theothers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that the terminal prompt changes to show the impersonated user,
like "theothers@bestrpi". Try and test everything:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;touch&lt;/code&gt;: Creating files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir&lt;/code&gt;: Creating directories&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;: Listing directories&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail&lt;/code&gt;: Reading files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use &lt;code&gt;exit&lt;/code&gt; when finished to return to your own user  &lt;/p&gt;
&lt;h3&gt;4. Install Samba&lt;/h3&gt;
&lt;p&gt;As always, you should update &amp;amp; upgrade before:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get update &lt;span class="p"&gt;;&lt;/span&gt; sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The installation couldn't be simpler:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install samba
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;5. Create User Mapping&lt;/h3&gt;
&lt;p&gt;Assuming you're using the default authentication method (you should!),
any user accessing Samba should be imported to the Samba user database.&lt;br&gt;
Use this command to add the user. I'm not sure about password
synchronization, so I just gave it the same password as the "real"
user.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pdbedit -a -u theothers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;6. Edit Configuration File&lt;/h3&gt;
&lt;p&gt;This is the hardest part. I'd back up the configuration file to
somewhere safe and start fresh.&lt;br&gt;
Refer to &lt;a href="http://www.samba.org/samba/docs/using_samba/ch06.html"&gt;this site&lt;/a&gt; and &lt;a href="http://www.samba.org/samba/docs/man/manpages/smb.conf.5.html"&gt;this one&lt;/a&gt; for
how the configuration file should look like.&lt;br&gt;
After modifying the configuration, restart the Samba service to apply:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo service samba restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can test your shares from gnome, using "connect to server" and using
the "smb" initial  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/setting-up-samba-on-raspberry-pi/ConnectToServer.png"&gt;&lt;/p&gt;
&lt;h3&gt;7. Apply to Clients&lt;/h3&gt;
&lt;p&gt;Make sure everything works. I find it best to restart all involved
machines and testing again, to make sure all settings are persistent.&lt;br&gt;
When accessing the shares from Windows, I find it best to use network
drives. Check "reconnect at sign-in" to make the drive "permanent" and
check "Connect using different credentials".  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/setting-up-samba-on-raspberry-pi/NetworkDrive.png"&gt;&lt;/p&gt;
&lt;p&gt;(photo from &lt;a href="http://techynotes.net/question-how-do-i-map-a-network-drive-in-windows-8/"&gt;techynotes&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Use the workgroup from the Samba configuration as a domain, e..g
&lt;code&gt;WORKGROUP\theothers&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;Enjoy your Samba server!&lt;/p&gt;</content><category term="FOSS"></category><category term="Samba"></category><category term="Security"></category><category term="Linux"></category><category term="SMB"></category><category term="Raspberry Pi"></category><category term="raspberrySeed"></category></entry><entry><title>List all Group Policy Extensions Registered</title><link href="https://blog.backslasher.net/list-all-group-policy-extensions-registered.html" rel="alternate"></link><published>2014-01-09T20:25:00+01:00</published><updated>2014-01-09T20:25:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-09:/list-all-group-policy-extensions-registered.html</id><summary type="html">&lt;p&gt;I use this script to see all GP extensions that my computer can
process:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\GPExtensions&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Guid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pschildname&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DllName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DllName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ProcessWhenNoChanges&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={!&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NoGPOListChanges&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IsUserPolicy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I use this script to see all GP extensions that my computer can
process:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\GPExtensions&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Guid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pschildname&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DllName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DllName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ProcessWhenNoChanges&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={!&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NoGPOListChanges&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IsUserPolicy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={!&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NoUserPolicy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Group Policy Extensions are the parts that apply the information found in Group Policy objects to the computer / user.&lt;br&gt;
While most settings are
done via "Administrative Templates", there are other extensions (48
counted on my Windows 8 workstation).&lt;br&gt;
Each extension registers a dll (the code that reads data from the GPO
and actually applies it), a GUID, a friendly name (some don't) and
instructions whether it's also a user policy (like "Deployed Printers",
unlike "IPsec") and if it wants to process the Group Policy even if no
settings were changed since last time ("Folder Redirection" does,
"Internet Explorer Branding" doesn't).&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; The last two values are stored as inversions (e.g.
&lt;code&gt;NoUserPolicy&lt;/code&gt;) but I "fixed" them when parsing the key.   &lt;/p&gt;
&lt;p&gt;Further reading:&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/aa375118%28v=vs.85%29.aspx"&gt;Writing a Group Policy Extension&lt;/a&gt;
(not our case, but still has some useful data)&lt;/p&gt;
&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Scripts"></category><category term="Windows"></category><category term="PowerShell"></category><category term="Registry"></category><category term="One-Liner"></category><category term="Active Directory"></category></entry><entry><title>Raspberry Pi + Deluge = Segmentation Fault</title><link href="https://blog.backslasher.net/raspberry-pi-deluge-segmentation-fault.html" rel="alternate"></link><published>2014-01-09T15:43:00+01:00</published><updated>2014-01-09T15:43:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-09:/raspberry-pi-deluge-segmentation-fault.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is relevant to any ARM based device running Linux&lt;/p&gt;
&lt;p&gt;I'm trying to use a Raspberry Pi as a torrentbox (an always-on
BitTorrent client).&lt;br&gt;
If I ever finish this project, I'll defiantly post my build.&lt;br&gt;
Anyway, I had a really annoying problem - every once in a while, the
Deluge …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is relevant to any ARM based device running Linux&lt;/p&gt;
&lt;p&gt;I'm trying to use a Raspberry Pi as a torrentbox (an always-on
BitTorrent client).&lt;br&gt;
If I ever finish this project, I'll defiantly post my build.&lt;br&gt;
Anyway, I had a really annoying problem - every once in a while, the
Deluge daemon would crash, printing only this message as a reason:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Segmentation Fault&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(Meaning that the program tried to access a part of the memory it's not
allowed to.)  &lt;/p&gt;
&lt;p&gt;I made sure I'm running the latest version of deluge (as offered by the
rPi debian repository), and attempted to troubleshoot. &lt;br&gt;
I tried running deluge using debug logging, but found no consistent
message pattern before the crash, probably meaning that the code causing
the fault wasn't message-worthy or it meant to log its action after the
line responsible for the crash. &lt;br&gt;
Since then I've been ignoring it and simply restarting the daemon every
now and then, but today it wouldn't stay running for 5 minutes, so I had
to do something.&lt;br&gt;
Even though I know very little about Linux troubleshooting, I've decided
to try and use GDB (GNU Debugger) to try and understand the cause.&lt;br&gt;
I used these commands to recreate the problem in gdb:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ gdb --args python /usr/bin/deluged -d -L info
(gdb) handle SIGILL nostop
(gdb) run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;deluged&lt;/code&gt; (deluge daemon) arguments are used to tell deluged to avoid
"daemonising" (so to stay attached to console) and to log to screen
information messages.&lt;br&gt;
The &lt;code&gt;handle&lt;/code&gt; line is because libcrypto is testing the CPU features on
initialization, and creates (and handles) a fake "Illegal Instruction"
error (&lt;a href="http://www.raspberrypi.org/phpBB3/viewtopic.php?p=155085"&gt;link&lt;/a&gt;).&lt;br&gt;
&lt;code&gt;run&lt;/code&gt; tells deluged to start executing, and then we wait for the
inevitable crash.&lt;br&gt;
The crash looked something like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0xb5a5e470 (LWP 10169)]
RC4 () at /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So the "guilty" code is libcrypto. Let's search for its owner:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ apt-cache search libcrypto
libcrypto++-dev - General purpose cryptographic library - C++ development
libcrypto++-doc - General purpose cryptographic library - documentation
libcrypto++-utils - General purpose cryptographic library - utilities and data files
libcrypto++9 - General purpose cryptographic library - shared library
libcrypto++9-dbg - General purpose cryptographic library - debug symbols
libcryptokit-ocaml - cryptographic algorithm library for OCaml - runtime
libcryptokit-ocaml-dev - cryptographic algorithm library for OCaml - development
libssl-dev - SSL development libraries, header files and documentation
libssl-doc - SSL development documentation documentation
libssl1.0.0 - SSL shared libraries
libssl1.0.0-dbg - Symbol tables for libssl and libcrypto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As we can see, it's part of &lt;code&gt;libssl1.0.0&lt;/code&gt;. Since these are also
up-to-date, I don't want to touch them. After examining the backtrace in
gdb:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(gdb) thread apply all backtrace
...
Thread 3 (Thread 0xb5a5e470 (LWP 10169)):
#0  0xb6568c7c in RC4 () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0
#1  0xb67acee4 in libtorrent::bt_peer_connection::send_buffer(char const*, int, int) () from /usr/lib/libtorrent-rasterbar.so.6
#2  0xb67ab3ec in libtorrent::bt_peer_connection::append_const_send_buffer(char const*, int) () from /usr/lib/libtorrent-rasterbar.so.6
#3  0xb68b6b30 in ?? () from /usr/lib/libtorrent-rasterbar.so.6
#4  0xb68b6b30 in ?? () from /usr/lib/libtorrent-rasterbar.so.6
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I can see it's being called by &lt;code&gt;libtorrent::bt_peer_connection&lt;/code&gt;, so
it's probably related to peer-to-peer encryption.&lt;br&gt;
Disabling it wasn't trivial either - since I couldn't get deluged to run
for more than one minute, I had to edit the configuration file
manually.&lt;br&gt;
After editing the file &lt;code&gt;~/.config/deluge/core.conf&lt;/code&gt; and changing these
settings (UI equivalent in brackets):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enc_level&lt;/code&gt; (&lt;code&gt;Network &amp;gt; Encryption &amp;gt; Level&lt;/code&gt;) from &lt;code&gt;2&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt; ("Handshake")  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;enc_prefer_rc4&lt;/code&gt; (&lt;code&gt;Network &amp;gt; Encryption &amp;gt; Encrypt entire stream&lt;/code&gt;) from &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Everything seems to be normal now. &lt;del&gt;I'm still not fully aware what are
the friendly names of those settings.&lt;/del&gt; Thanks Lucas for the setting names!  &lt;/p&gt;
&lt;p&gt;Of course this is only a workaround, but at least I can use Deluge
again.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/raspberry-pi-deluge-segmentation-fault/DelugedWorking.png"&gt;&lt;/p&gt;
&lt;p&gt;What an adventure!&lt;/p&gt;</content><category term="FOSS"></category><category term="Mysteries Solved"></category><category term="Linux"></category><category term="BitTorrent"></category><category term="Raspberry Pi"></category><category term="raspberrySeed"></category><category term="Ramblings"></category><category term="Deluge"></category></entry><entry><title>Avoiding Text Overflow with Prettify on Blogger</title><link href="https://blog.backslasher.net/avoiding-text-overflow-with-prettify-on-blogger.html" rel="alternate"></link><published>2014-01-09T12:32:00+01:00</published><updated>2014-01-09T12:32:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-09:/avoiding-text-overflow-with-prettify-on-blogger.html</id><summary type="html">&lt;p&gt;I'm currently testing &lt;a href="http://code.google.com/p/google-code-prettify/"&gt;Prettify&lt;/a&gt; to replace &lt;a href="http://alexgorbatchev.com/SyntaxHighlighter/"&gt;SyntaxHighlighter&lt;/a&gt; as the
syntax-highlighting solution in my blog.&lt;br&gt;
By the way, it's nothing critical, but Blogger's preview mode breaks because of SH's inclusion (the reference URLs are being converted to https and break down) and the project's homepage seems quite stale (latest version release …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm currently testing &lt;a href="http://code.google.com/p/google-code-prettify/"&gt;Prettify&lt;/a&gt; to replace &lt;a href="http://alexgorbatchev.com/SyntaxHighlighter/"&gt;SyntaxHighlighter&lt;/a&gt; as the
syntax-highlighting solution in my blog.&lt;br&gt;
By the way, it's nothing critical, but Blogger's preview mode breaks because of SH's inclusion (the reference URLs are being converted to https and break down) and the project's homepage seems quite stale (latest version release was long ago).&lt;br&gt;
After some initial testing, I found that scripts that are too long are overflowing, which looks bad:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/avoiding-text-overflow-with-prettify-on-blogger/PrettifyWithOverflow.png"&gt;&lt;/p&gt;
&lt;p&gt;I slightly modified a solution I found in &lt;a href="http://stackoverflow.com/a/10787539"&gt;StackOverflow&lt;/a&gt;.&lt;br&gt;
I created a Style segment in my template, but targeted all "prettyprint" &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;s (to avoid having to add "codescroll" to every &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;) and only left the CSS directive "overflow-x: auto;".&lt;br&gt;
The code looks like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;pre.prettyprint {overflow-x: auto}&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And the result, like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/avoiding-text-overflow-with-prettify-on-blogger/PrettifyNoOverflow.png"&gt;&lt;/p&gt;
&lt;p&gt;Much better!&lt;/p&gt;</content><category term="FOSS"></category><category term="Prettify"></category><category term="CSS"></category><category term="HTML"></category><category term="Blog"></category></entry><entry><title>setspn Duplicates and Case Sensitivity</title><link href="https://blog.backslasher.net/setspn-duplicates-and-case-sensitivity.html" rel="alternate"></link><published>2014-01-07T17:06:00+01:00</published><updated>2014-01-07T17:06:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2014-01-07:/setspn-duplicates-and-case-sensitivity.html</id><summary type="html">&lt;p&gt;Today I found out that the command I use to find duplicate SPNs, &lt;code&gt;setspn -x&lt;/code&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/setspn-duplicates-and-case-sensitivity/SetspnX.png"&gt;&lt;br&gt;
is case sensitive, meaning that the following SPNs don't count as
duplicates:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;HOST/bla
HOST/BLA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This makes sense when using UNIX systems for TGS creation.&lt;br&gt;
However, Active Directory Domain Controllers, being Windows systems, are …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I found out that the command I use to find duplicate SPNs, &lt;code&gt;setspn -x&lt;/code&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/setspn-duplicates-and-case-sensitivity/SetspnX.png"&gt;&lt;br&gt;
is case sensitive, meaning that the following SPNs don't count as
duplicates:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;HOST/bla
HOST/BLA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This makes sense when using UNIX systems for TGS creation.&lt;br&gt;
However, Active Directory Domain Controllers, being Windows systems, are
case-insensitive and don't differentiate between the two. You could even
get &lt;a href="http://technet.microsoft.com/en-us/library/cc733945%28v=ws.10%29.aspx"&gt;event 11&lt;/a&gt;
because of such duplication.&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/setspn-duplicates-and-case-sensitivity/Event11.png"&gt;&lt;br&gt;
Since &lt;code&gt;setspn&lt;/code&gt; didn't work, I wrote a few lines of my own that search the
current domain for duplicate SPNs.&lt;br&gt;
Since PowerShell can be made case sensitive, it can find different-cased duplicate SPNs easily.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ADObject&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;serviceprincipalname&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;serviceprincipalname&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DistinguishedName&lt;/span&gt;
    &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServicePrincipalName&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SPN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}},@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;group &lt;/span&gt;&lt;span class="n"&gt;SPN&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SPN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;}},@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Group &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DN&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Images from &lt;a href="http://blogs.technet.com/b/sharepoint_foxhole/archive/2012/02/03/kerberos-fatfingeritis-how-to-set-your-kerby-spns-the-safe-way.aspx"&gt;SharePoint FoxHole&lt;/a&gt;&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Security"></category><category term="Scripts"></category><category term="Windows"></category><category term="Power Management"></category><category term="One-Liner"></category><category term="Event Log"></category><category term="Active Directory"></category></entry><entry><title>Backing up BitLocker to ActiveDirectory - My Additions</title><link href="https://blog.backslasher.net/backing-up-bitlocker-to-activedirectory.html" rel="alternate"></link><published>2013-11-25T20:14:00+01:00</published><updated>2013-11-25T20:14:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-11-25:/backing-up-bitlocker-to-activedirectory.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;If you thought about deploying BitLocker in your enterprise, you probably came across the recovery issue - if you lose the encrypting smart card, corrupt the key file, forget the password or the TPM breaks down - how can you access the data?&lt;br&gt;
For small organizations, manual recovery can be …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;If you thought about deploying BitLocker in your enterprise, you probably came across the recovery issue - if you lose the encrypting smart card, corrupt the key file, forget the password or the TPM breaks down - how can you access the data?&lt;br&gt;
For small organizations, manual recovery can be enough - when bitlocker is enabled through the UI (or via cli with &lt;code&gt;RecoveryPasswordProtector&lt;/code&gt;), bitlocker keeps one password numeric, like &lt;code&gt;123456-123456-123456-123456-123456-123456-123456-123456&lt;/code&gt;, and urges you to save this password externally, so you can use it in
emergencies.  &lt;/p&gt;
&lt;p&gt;For large organizations, documenting these keys (and making sure they're kept safe) is difficult.&lt;br&gt;
Because such organizations are probably good with keeping their primary store of confidential data (the Active Directory) safe, it makes sense to keep the BitLocker recovery passwords there. It's also available out-of-the-box.  &lt;/p&gt;
&lt;p&gt;There is a &lt;a href="http://technet.microsoft.com/en-us/library/cc766015%28v=ws.10%29.aspx"&gt;TechNet article&lt;/a&gt; about this, but I think my steps are better:  &lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;h4&gt;1. Extend the AD schema&lt;/h4&gt;
&lt;p&gt;Only needed if you don't have 2008+ DCs, because their schema includes the required objects  &lt;/p&gt;
&lt;h4&gt;2. Set AD permissions&lt;/h4&gt;
&lt;p&gt;Recovery passwords are saved as objects inside the computer objects, so you have to give the computers permissions to create such objects.&lt;br&gt;
I think that in 2008+ domains they're already present, but it you might want to add them anyway, to make sure  &lt;/p&gt;
&lt;h4&gt;3. Set GP to replicate to AD&lt;/h4&gt;
&lt;p&gt;The GP location is &lt;code&gt;Computer Configuration&amp;gt;Administrative Templates&amp;gt;Windows Components&amp;gt;BitLocker Drive Encryption&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;For NT6&lt;/strong&gt; (Server 2008 / Vista), the setting is global and called "Store BitLocker recovery information in Active Directory Domain Services":&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/backing-up-bitlocker-to-activedirectory/BitLockerGP1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For newer versions&lt;/strong&gt;, there are different settings for OS drives ("C:"), fixed data drives (additional HDs) and removable data drives (e.g. Disk-On-Keys), each under the relevant folder and called "Choose how BitLocker-protected XXX drives can be recovered":&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/backing-up-bitlocker-to-activedirectory/BitLockerGP2.png"&gt;&lt;/p&gt;
&lt;p&gt;Both GPs have settings in common:&lt;br&gt;
&lt;strong&gt;Passwords or Packages?&lt;/strong&gt; Each drive is actually encrypted with a long key which in turn is encrypted by the password. This negates the security vulnerabilities of encrypting large amounts of data with human-memorable passwords. As long as the drive is healthy, the password suffices to read the data because the key can be decrypted. But if the drive is damaged and the part containing the key can't be read, the password is useless.&lt;br&gt;
Storing the entire key package in AD allows reading data even from a key-damaged drive.&lt;br&gt;
On the other hand, storing only the password is safer (since the password can be easily changed without re-encrypting the disk, if the AD is compromised).&lt;br&gt;
&lt;strong&gt;No Encryption Before Backup Completion:&lt;/strong&gt; AD backup is among the first things that happen during a drive encryption (right after password and key package generation). Both GPs have a checkbox to stop the encryption process if the backup fails, saving the sysadmin (you!) from one day finding an encrypted drive with no valid AD-backed key.  &lt;/p&gt;
&lt;h4&gt;4. Trigger Backup&lt;/h4&gt;
&lt;p&gt;Backups to AD only happen when BitLocker passwords are modified (so if some drive was encrypted before you completed the previous steps, the container won't be backed up). To trigger backups manually, use &lt;code&gt;manage-bde&lt;/code&gt;, as explained &lt;a href="http://blogs.technet.com/b/askcore/archive/2010/04/06/how-to-backup-recovery-information-in-ad-after-bitlocker-is-turned-on-in-windows-7.aspx"&gt;here&lt;/a&gt;.&lt;br&gt;
If you're on Windows 8 and want a simple script to backup whatever key you have, here:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$drive&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-BitLockerVolume&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtector&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtectorType&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;RecoveryPassword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$drive&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;KeyProtector&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtectorType&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;RecoveryPassword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
&lt;span class="nb"&gt;Backup-BitLockerKeyProtector&lt;/span&gt; &lt;span class="nv"&gt;$drive&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MountPoint&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtectorId&lt;/span&gt;
&lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Backing up drive $drive, key &lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyProtectorId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;, password &lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecoveryPassword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;5. Test Search:&lt;/h4&gt;
&lt;p&gt;Use the command "Find BitLocker recovery password" under &lt;code&gt;dsa.msc&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/backing-up-bitlocker-to-activedirectory/BitLockerAD1.gif"&gt;&lt;/p&gt;
&lt;p&gt;Then enter the first "box" from the recovery guid, and make sure the
password is found:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/backing-up-bitlocker-to-activedirectory/BitLockerAD2.png"&gt;&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="BitLocker"></category><category term="Scripts"></category><category term="Windows"></category><category term="FileSystem"></category><category term="PowerShell"></category><category term="Ramblings"></category><category term="Active Directory"></category></entry><entry><title>Adding SSL to a SharePoint 2010 Web Application, the Right Way</title><link href="https://blog.backslasher.net/adding-ssl-to-sharepoint-2010-web.html" rel="alternate"></link><published>2013-11-11T18:52:00+01:00</published><updated>2013-11-11T18:52:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-11-11:/adding-ssl-to-sharepoint-2010-web.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I haven't touched SharePoint in a while, but I've been asked by a friend to help him do something "the right way".&lt;br&gt;
We were looking for a way to add an HTTPS binding to an existing SharePoint 2010 site. Google is full of ways of doing that, but …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I haven't touched SharePoint in a while, but I've been asked by a friend to help him do something "the right way".&lt;br&gt;
We were looking for a way to add an HTTPS binding to an existing SharePoint 2010 site. Google is full of ways of doing that, but they
involve adding another binding manually via IIS, like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/adding-ssl-to-sharepoint-2010-web/SharePointSSL1.png"&gt;&lt;/p&gt;
&lt;p&gt;Everyone who's familiar with SharePoint (and especially with cleaning after poor SharePoint infrastructure work) can see the issue immediately - even if this method works (and it might, with some added configuration) it will only apply to the current SharePoint front-end server - it won't be reflected in:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Other servers in the farm&lt;/li&gt;
&lt;li&gt;This server if it's rejoined (as a troubleshooting measure)&lt;/li&gt;
&lt;li&gt;Future servers added to the farm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This happens because SharePoint is not informed of the new
configuration. The right way is through Web Application Extension  &lt;/p&gt;
&lt;h3&gt;What is Web Application Extension&lt;/h3&gt;
&lt;p&gt;Having more than one binding (a port the IIS site is listening to) is new to IIS 7 (until then, each site had one HTTP port and one HTTPS port). Since SharePoint 2010 is in this mindset (maybe left-overs from 2007), each SharePoint web application is contained in one IIS site, which has only one port.&lt;br&gt;
However, an administrator can "extend" a web application to a child-web application, allowing the same SharePoint sites to be served using different authentication mechanisms, ports etc.&lt;br&gt;
More about extending &lt;a href="http://technet.microsoft.com/en-us/library/cc261698%28v=office.14%29.aspx"&gt;here.&lt;/a&gt;&lt;br&gt;
Basically, you supply SharePoint with information about the new Web Application you want (name, port, SSL, authentication etc.) and the zone it's capturing (for &lt;a href="http://technet.microsoft.com/en-us/library/cc261814%28v=office.12%29.aspx"&gt;alternate access
mappings&lt;/a&gt;
- other URLs that the application might be viewed from).  &lt;/p&gt;
&lt;h3&gt;Via Central Administration (GUI):&lt;/h3&gt;
&lt;p&gt;Open "Web Applications Management" and select the Web Application you wish to extend  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/adding-ssl-to-sharepoint-2010-web/SharePointSSL2.png"&gt;&lt;/p&gt;
&lt;p&gt;Hit "Extend" (under "Contribute") and fill the form to match the configuration of the &lt;strong&gt;new&lt;/strong&gt; web application you wish to create. If you've used alternate access mappings before with this web application, make sure not to choose a zone you didn't use already (if you're not familiar with this term, you're probably OK with using "Intranet")  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/adding-ssl-to-sharepoint-2010-web/SharePointSSL3.png"&gt;&lt;/p&gt;
&lt;p&gt;Make sure the IIS site has been created. If you did choose SSL, you probably want to configure the certificate.&lt;br&gt;
Unfortunately, this is done via IIS console (and has to be repeated for every server).&lt;br&gt;
Open IIS console, find your new site and select "bindings". Choose the only binding there, select "edit" and choose your favorite certificate.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/adding-ssl-to-sharepoint-2010-web/SharePointSSL4.png"&gt;&lt;/p&gt;
&lt;p&gt;Make sure everything works!  &lt;/p&gt;
&lt;h3&gt;Via PowerShell:&lt;/h3&gt;
&lt;p&gt;It's much quicker and even included in the official examples.&lt;br&gt;
Straight from the &lt;a href="http://technet.microsoft.com/en-us/library/ff607551%28v=office.14%29.aspx"&gt;Snap-in's documentation&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-SPWebApplication&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://sitename&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;New-SPWebApplicationExtension&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ExtranetSite&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-SecureSocketsLayer&lt;/span&gt; &lt;span class="n"&gt;-Zone&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Extranet&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-URL&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://extranet.sitename.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;"This example extends the given Web application at http://sitename to
the Extranet zone for SSL use."&lt;br&gt;
You still have to configure the SSL certificate and make sure everything works.   &lt;/p&gt;
&lt;h3&gt;Undoing&lt;/h3&gt;
&lt;p&gt;To reverse the process, see &lt;a href="http://technet.microsoft.com/en-us/library/cc288561%28v=office.14%29.aspx"&gt;"Unextend a Web application"&lt;/a&gt; for both GUI and PowerShell methods.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="HTTP"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="IIS"></category><category term="PowerShell"></category><category term="One-Liner"></category></entry><entry><title>Using Remote Desktop Client without Network Level Authentication</title><link href="https://blog.backslasher.net/using-remote-desktop-client-without-network-level-authentication.html" rel="alternate"></link><published>2013-11-11T18:07:00+01:00</published><updated>2013-11-11T18:07:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-11-11:/using-remote-desktop-client-without-network-level-authentication.html</id><summary type="html">&lt;p&gt;Whenever I use Remote Desktop to connect to an NT6+ (Windows Vista /
Windows Server 2008 and later) machine, I use Network Level
Authentication, meaning that authentication with the server is performed
before session is created (contrary to first connecting to the server
and using its GUI to enter the credentials …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Whenever I use Remote Desktop to connect to an NT6+ (Windows Vista /
Windows Server 2008 and later) machine, I use Network Level
Authentication, meaning that authentication with the server is performed
before session is created (contrary to first connecting to the server
and using its GUI to enter the credentials). Usually this is a good
behavior, saving me from man-in-the-middle attacks.&lt;br&gt;
However, sometimes I wish to disable it at the client level, usually for
troubleshooting.&lt;br&gt;
Turns out it's not that easy. One can mandate NLA by using the
&lt;code&gt;Advanced&lt;/code&gt; tab, under &lt;code&gt;Server Authentication&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/using-remote-desktop-client-without-network-level-authentication/RDPwithoutNLA1.png"&gt;&lt;/p&gt;
&lt;p&gt;but in order to avoid using it completely, you have to save your
connection as an RDP file using "Save As":  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/using-remote-desktop-client-without-network-level-authentication/RDPwithoutNLA2.png"&gt;&lt;/p&gt;
&lt;p&gt;And then edit the file using notepad and add the line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;enablecredsspsupport:i:0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Sources&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://technet.microsoft.com/en-us/library/ff393716%28v=ws.10%29.aspx"&gt;http://technet.microsoft.com/en-us/library/ff393716%28v=ws.10%29.aspx&lt;/a&gt;&lt;br&gt;
&lt;a href="http://support.microsoft.com/kb/941641"&gt;http://support.microsoft.com/kb/941641&lt;/a&gt;&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Windows"></category><category term="Terminal Server"></category></entry><entry><title>Parsing Event Log Subscription Runtime Status using PowerShell and Regex</title><link href="https://blog.backslasher.net/parsing-event-log-subscription-runtime-status.html" rel="alternate"></link><published>2013-10-12T16:00:00+02:00</published><updated>2013-10-12T16:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-10-12:/parsing-event-log-subscription-runtime-status.html</id><summary type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;Since Event Log Subscription doesn't have a module or a .NET class,
interacting with its settings and status has to be done either via UI or
the command line utility, &lt;code&gt;wecutil.exe&lt;/code&gt;&lt;br&gt;
I was especially interested in getting the computers runtime status, to
see which machines are failing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;Since Event Log Subscription doesn't have a module or a .NET class,
interacting with its settings and status has to be done either via UI or
the command line utility, &lt;code&gt;wecutil.exe&lt;/code&gt;&lt;br&gt;
I was especially interested in getting the computers runtime status, to
see which machines are failing (and why).&lt;br&gt;
Let’s look at the output generated by &lt;code&gt;wecutil gr&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/parsing-event-log-subscription-runtime/WecutilOutput.png"&gt;&lt;/p&gt;
&lt;p&gt;As we can see, every server's status is represented by multiple lines,
which rules out easy one-line-at-a-time parsing.&lt;br&gt;
Since Wecutil has no script-friendly output (e.g. CSV), I had to use multiline regex parsing.&lt;br&gt;
This is done by joining the lines using &lt;code&gt;`n&lt;/code&gt; (since PowerShell returns
an array of rows rather than the complete string), using the .NET class
&lt;code&gt;Regex&lt;/code&gt; (&lt;a href="http://msdn.microsoft.com/en-us/library/system.text.regularexpressions.regex.aspx"&gt;System.Text.RegularExpressions.Regex&lt;/a&gt;)
and creating a complicated regex pattern to parse by.&lt;br&gt;
My full script also supports remoting (using
&lt;a href="http://technet.microsoft.com/en-us/library/hh849719.aspx"&gt;Invoke-Command&lt;/a&gt;)
and parsing all of the fields into meaningful objects (e.g. extracting
the error messages out of the XML).&lt;br&gt;
The really interseting part is the regex pattern, especially these
parts:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nonecapturing groups:&lt;/strong&gt; Using &lt;code&gt;(?:)&lt;/code&gt; means the group isn't kept for
    data extraction&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Positive lookbehind:&lt;/strong&gt; both the beginning and the end of my string
    contain line-breaks, so I had to use lookbehind &lt;code&gt;(?\&amp;lt;=)&lt;/code&gt; or lookahead
    &lt;code&gt;(?=)&lt;/code&gt; (or both) groups to avoid "competition" for the same line-break
    between two close matches.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Capturing ALL characters:&lt;/strong&gt; apperantly, &lt;code&gt;.&lt;/code&gt; captures every
    character except &lt;code&gt;\n&lt;/code&gt; (newline) so &lt;code&gt;(?:.|\\n)&lt;/code&gt; will match every
    character. Although this difference isn't visible when dealing with
    single line expressions (since you don't encounter line breaks),
    it's vital when handling multiline ones.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optional segments:&lt;/strong&gt; The fields &lt;code&gt;ErrorMessage&lt;/code&gt;, &lt;code&gt;ErrorTime&lt;/code&gt; and
    &lt;code&gt;NextRetryTime&lt;/code&gt; only appear when &lt;code&gt;LastError&lt;/code&gt; isn't 0, so we can't
    mandate them in the pattern. On the other hand, we do want to
    capture them when they're present. Surrounding them all with
    &lt;code&gt;(?:&lt;/code&gt;text&lt;code&gt;)?&lt;/code&gt; will ensure that the entire expression won't fall if
    they're not present but populate the right capturing groups if they
    are.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reaching the real end:&lt;/strong&gt; The last line isn't terminated with a
    newline but rather with End-Of-String, so our string ends with
    &lt;code&gt;(?:\n|$)&lt;/code&gt; to match either.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;The Script&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$subscriptionName&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$wecUtil&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="n"&gt;wecutil&lt;/span&gt; &lt;span class="n"&gt;gr&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="nv"&gt;$splatTable&lt;/span&gt;&lt;span class="p"&gt;=@{}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$computeRName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$splatTable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ComputerName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]=&lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$in&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Invoke-Command&lt;/span&gt; &lt;span class="nv"&gt;@splatTable&lt;/span&gt; &lt;span class="nv"&gt;$wecUtil&lt;/span&gt; &lt;span class="n"&gt;-ArgumentList&lt;/span&gt; &lt;span class="nv"&gt;$subscriptionName&lt;/span&gt;
&lt;span class="nv"&gt;$in2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$in&lt;/span&gt; &lt;span class="n"&gt;-join&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$pattern&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(?&amp;lt;=\n)\t{2}(?!\t)(.+)\n\t{3}RunTimeStatus: (.+)\n\t{3}LastError: (.+)(?:\n\t{3}ErrorMessage: ((?:\n|.)+?)\n\t{3}ErrorTime: (.+)\n\t{3}NextRetryTime: (.+))?(?:\n|$)&amp;#39;&lt;/span&gt;
&lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$in2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Multiline&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$arr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Groups&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-s&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt; &lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="n"&gt;5&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RunTimeStatus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LastError&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ErrorMessage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;
        &lt;span class="nv"&gt;$msg&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="n"&gt;WSManFault&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt; &lt;span class="o"&gt;-is&lt;/span&gt; &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProviderFault&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProviderError&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ErrorTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]}},&lt;/span&gt;
    &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NextRetryTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Further Reading&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;MSDN:&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/az24scfc.aspx"&gt;Regular Expression Language - Quick Reference&lt;/a&gt;&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/bs2twtah.aspx"&gt;Grouping Constructs in Regular
Expressions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="Regular Expressions"></category><category term="Windows"></category><category term="PowerShell"></category><category term="Event Log"></category></entry><entry><title>Finding Superseding WSUS updates in PowerShell</title><link href="https://blog.backslasher.net/finding-superseding-wsus-updates-in-wsus-powershell.html" rel="alternate"></link><published>2013-09-25T16:11:00+02:00</published><updated>2013-09-25T16:11:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-09-25:/finding-superseding-wsus-updates-in-wsus-powershell.html</id><summary type="html">&lt;p&gt;Whenever I see a superseded update, I usually want to know which update
supersedes it.&lt;br&gt;
Finding it from the console is easy enough:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/finding-superseding-wsus-updates-in-wsus/WsusSuper.png"&gt;&lt;/p&gt;
&lt;p&gt;But of course, working through the UI is no fun.&lt;br&gt;
After you got an update object through PowerShell, like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$wsus&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-WsusServer&lt;/span&gt; &lt;span class="n"&gt;WSUS2&lt;/span&gt; &lt;span class="n"&gt;-PortNumber&lt;/span&gt; &lt;span class="n"&gt;8530&lt;/span&gt;
&lt;span class="nv"&gt;$update&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wsus …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Whenever I see a superseded update, I usually want to know which update
supersedes it.&lt;br&gt;
Finding it from the console is easy enough:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/finding-superseding-wsus-updates-in-wsus/WsusSuper.png"&gt;&lt;/p&gt;
&lt;p&gt;But of course, working through the UI is no fun.&lt;br&gt;
After you got an update object through PowerShell, like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$wsus&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-WsusServer&lt;/span&gt; &lt;span class="n"&gt;WSUS2&lt;/span&gt; &lt;span class="n"&gt;-PortNumber&lt;/span&gt; &lt;span class="n"&gt;8530&lt;/span&gt;
&lt;span class="nv"&gt;$update&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wsus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SearchUpdates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2847204&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt;
          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductTitles&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Windows 7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt;
          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LegacyName&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;KB2847204-Win7-SP1-X86*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use the method &lt;code&gt;GetRelatedUpdates&lt;/code&gt; to find related updates. The relationships relevant to us are &lt;code&gt;UpdatesThatSupersedeThisUpdate&lt;/code&gt; and &lt;code&gt;UpdatesSupersededByThisUpdate&lt;/code&gt;.&lt;br&gt;
If we use this code:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$update&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetRelatedUpdates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UpdatesThatSupersedeThisUpdate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;KnowledgebaseArticles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;KnowledgebaseArticles
---------------------
{2838727}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We get the KB of updates that directly supersede the one we have.
Remember, there can be updates that supersede these!  &lt;/p&gt;
&lt;p&gt;Enjoy your relationships.&lt;/p&gt;
&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="WSUS"></category><category term="One-Liner"></category></entry><entry><title>Reading Daylight Saving Time Data in Windows</title><link href="https://blog.backslasher.net/reading-daylight-saving-time-data-in-windows.html" rel="alternate"></link><published>2013-09-04T16:48:00+02:00</published><updated>2013-09-04T16:48:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-09-04:/reading-daylight-saving-time-data-in-windows.html</id><summary type="html">&lt;p&gt;When it comes to DST complexity, Israel has it worst (I think). We have
our DST definition changed on a yearly basis, and consequently we have
to repeat the DST deployment cycle (install update, check for timezone
data, test DST-sensitive resources like Outlook calendars...) twice a
year.&lt;br&gt;
Even simple users …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When it comes to DST complexity, Israel has it worst (I think). We have
our DST definition changed on a yearly basis, and consequently we have
to repeat the DST deployment cycle (install update, check for timezone
data, test DST-sensitive resources like Outlook calendars...) twice a
year.&lt;br&gt;
Even simple users are familiar with the UI reminder for DST (when it
starts / ends) that appears about 2 weeks before the due date, and looks
something like this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/reading-daylight-saving-time-data-in-windows/dstUI.jpg"&gt;&lt;/p&gt;
&lt;p&gt;There are two alternatives that are easier to script and are not
date-dependent, but they're harder to understand:  &lt;/p&gt;
&lt;h4&gt;CMD - &lt;code&gt;W32tm /tz&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This command will give you the computer's timezone configuration,
including the DST data - the bias, beginning and end of Standard/DST times:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/reading-daylight-saving-time-data-in-windows/dstW32tm.png"&gt;&lt;/p&gt;
&lt;h4&gt;PowerShell - WMI&lt;/h4&gt;
&lt;p&gt;Using the class &lt;code&gt;win32_timezone&lt;/code&gt; you can get the same data (and you can
even access it remotely). Just select the relevant fields:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/reading-daylight-saving-time-data-in-windows/dstPowerShell.png"&gt;&lt;/p&gt;
&lt;h3&gt;Readability&lt;/h3&gt;
&lt;p&gt;The problem with those two methods is that the output is not trivially
understood (unlike "DST ends on XXXX/XX/XX, the clock goes back 1 hour")
After finding &lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa394498%28v=vs.85%29.aspx"&gt;this page&lt;/a&gt;
explaining about the WMI class, I hope I can save you some effort:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;w32tm letter&lt;/th&gt;
&lt;th&gt;WMI field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;StandardMonth / DaylightMonth&lt;/td&gt;
&lt;td&gt;1-based-index (1=Jan,12=Dec) of the month in which the time is applied.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DoW&lt;/td&gt;
&lt;td&gt;StandardDayOfWeek / DaylightDayOfWeek&lt;/td&gt;
&lt;td&gt;0-based-index (0=Sun,1=Mon,6=Sat) of the day-of-the-week in which the time is applied&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;StandardDay / DaylightDay&lt;/td&gt;
&lt;td&gt;The occurrence of the day-of-week in the month in which the time is applied.&lt;br/&gt;&lt;code&gt;5&lt;/code&gt; is the last instance.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Examples&lt;/h4&gt;
&lt;p&gt;If &lt;code&gt;M=10,D=2,W=0&lt;/code&gt;, the time will be applied on the &lt;strong&gt;second&lt;/strong&gt; &lt;strong&gt;Sunday&lt;/strong&gt;  of &lt;strong&gt;October&lt;/strong&gt;.&lt;br&gt;
If &lt;code&gt;M=12,D=1,W=0&lt;/code&gt; then time will be applied on the &lt;strong&gt;first&lt;/strong&gt; &lt;strong&gt;Sunday&lt;/strong&gt; of &lt;strong&gt;December.&lt;/strong&gt;&lt;br&gt;
If &lt;code&gt;M=10,D=5,W=0&lt;/code&gt; means the &lt;strong&gt;last&lt;/strong&gt; &lt;strong&gt;Sunday&lt;/strong&gt; of &lt;strong&gt;October&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;And there you have it.&lt;br&gt;
FYI, the latest DST update is &lt;a href="http://support.microsoft.com/kb/2863058"&gt;kb2863058&lt;/a&gt;&lt;/p&gt;</content><category term="Microsoft"></category><category term="WMI"></category><category term="Calendar"></category><category term="Windows"></category><category term="W32tm"></category><category term="PowerShell"></category><category term="DST"></category></entry><entry><title>Network Monitor capture filter limitations</title><link href="https://blog.backslasher.net/network-monitor-capture-filter-limitations.html" rel="alternate"></link><published>2013-08-30T09:11:00+02:00</published><updated>2013-08-30T09:11:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-08-30:/network-monitor-capture-filter-limitations.html</id><summary type="html">&lt;p&gt;I recently had to deal with some network traffic issues, so naturally I turned to NetMon.&lt;br&gt;
My problem was with some TCP packets not reaching their destination.&lt;br&gt;
Since TCP has packet acknowledgements (meaning the receiving end says "packet received" or the packet is sent again), the issue was detectable as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently had to deal with some network traffic issues, so naturally I turned to NetMon.&lt;br&gt;
My problem was with some TCP packets not reaching their destination.&lt;br&gt;
Since TCP has packet acknowledgements (meaning the receiving end says "packet received" or the packet is sent again), the issue was detectable as "retransmits" on the sending side.&lt;br&gt;
While some retransmits are acceptable, I had an unreasonable amount of these.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/network-monitor-capture-filter/NetMonRetransmit.png"&gt;&lt;br&gt;
This is a &lt;code&gt;SynRetransmit&lt;/code&gt; (and not &lt;code&gt;TCPRetransmit&lt;/code&gt;) because it's easier to recreate, but the idea is the same.&lt;/p&gt;
&lt;p&gt;Filtering for retransmits can be done using "Property.TCPRetransmit" or
"Property.TCPSynRetransmit" (depending on what you're looking for):&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/network-monitor-capture-filter/NetMonFilter.png"&gt;  &lt;/p&gt;
&lt;p&gt;As any NetMon novice knows, there are two filters you can use during a
capture:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Capture Filter&lt;/strong&gt;, affecting the packets being collected and parsed into NetMon&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Filter&lt;/strong&gt;, controlling which collected packets are presented on screen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After learning the difference, it's common sense that as much filtering as possible should be done using the capture filter, to save NetMon the job of collecting and parsing unneeded packets. So I spent 30 minutes trying to understand why filtering for &lt;code&gt;TCPRetransmit&lt;/code&gt;s using the capture filter yielded no packets whatsoever.&lt;br&gt;
Eventually, after reading up on &lt;code&gt;TCPRetransmit&lt;/code&gt;s and the way NetMon parses them (file &lt;code&gt;tcp.npl&lt;/code&gt;, around row 239), I realised:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/network-monitor-capture-filter/NetMonTCPDefinition.png"&gt;&lt;/p&gt;
&lt;p&gt;The retransmits have no special identifying property - NetMon just looks for previous packets in the conversation that have the same sequence number, so if it doesn't capture the original packet, it has nothing to compare the sequence number to, so it won't find the retransmits as well.  &lt;/p&gt;
&lt;h3&gt;To sum up:&lt;/h3&gt;
&lt;p&gt;You can't detect retransmits using the capture filter. You should use the capture filter to narrow the packet options using other properties (like &lt;code&gt;IPv4.Address&lt;/code&gt;) and filter for retransmits only using the display filter.&lt;/p&gt;</content><category term="Microsoft"></category><category term="TCP"></category><category term="Mysteries Solved"></category><category term="Firewall"></category><category term="Network Monitor"></category></entry><entry><title>Putting your Windows to sleep</title><link href="https://blog.backslasher.net/putting-your-windows-to-sleep.html" rel="alternate"></link><published>2013-08-09T13:01:00+02:00</published><updated>2013-08-09T13:01:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-08-09:/putting-your-windows-to-sleep.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerZoe.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Although there are many blog posts about configuring standby ("sleep")
in Windows, each one with its own insomnia joke, I thought I'd share my
methodology .  &lt;/p&gt;
&lt;h3&gt;&lt;code&gt;PowerCfg -energy&lt;/code&gt;:  The one tool to sort it all&lt;/h3&gt;
&lt;p&gt;I only learnt about this command near the end of my testing, but it
still managed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerZoe.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Although there are many blog posts about configuring standby ("sleep")
in Windows, each one with its own insomnia joke, I thought I'd share my
methodology .  &lt;/p&gt;
&lt;h3&gt;&lt;code&gt;PowerCfg -energy&lt;/code&gt;:  The one tool to sort it all&lt;/h3&gt;
&lt;p&gt;I only learnt about this command near the end of my testing, but it
still managed to save me a lot of work.&lt;br&gt;
Execute this command (as an administrator) when the computer is idling.
It will run for 60 seconds, profile the system and generate an HTML
report about energy-related problems.&lt;br&gt;
Some will be irrelevant for sleeping (e.g. "Processor utilization is high") but some will save you
valuable time. Try reading the report before following my guide, because
you may find some instant problem solvers.&lt;/p&gt;
&lt;h3&gt;What is Sleep&lt;/h3&gt;
&lt;p&gt;Microsoft defines in this article 6 sleeping states - S0 to S5&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/windows/hardware/ff564575%28v=vs.85%29.aspx"&gt;http://msdn.microsoft.com/en-us/library/windows/hardware/ff564575%28v=vs.85%29.aspx&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;S0&lt;/strong&gt; is a fully working computer.&lt;br&gt;
&lt;strong&gt;S1&lt;/strong&gt;..&lt;strong&gt;S3&lt;/strong&gt; are standby states, in which some parts of the computer
are turned off to conserve power but resuming to S0 is relatively quick
(2-30sec). These states differ by how many parts are shut down - in S1
only the processor clock and buses are shut down, and in S3 the entire
processor and some parts of the motherboard are shut down.&lt;br&gt;
&lt;strong&gt;S4&lt;/strong&gt; is hibernation - the computer is shut down, but the operating
system context (memory, running services etc.) is saved to the
hibernation file. When the computer is turned on, the operating system
detects that it has been hibernated and loads its context from the
hibernation file instead of starting fresh&lt;br&gt;
&lt;strong&gt;S5&lt;/strong&gt; is shutting the computer down completely.&lt;br&gt;
When people refer to sleeping, they usually refer to S3.&lt;br&gt;
You can see in the energy report which states are supported:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerEnergyReport.png"&gt;&lt;/p&gt;
&lt;h3&gt;How Sleep Works&lt;/h3&gt;
&lt;p&gt;When sleep is enabled, after the computer idles for a set time (e.g. 15
minutes), it will stop working and turn off some of its components to
save power. The user can "wake" the computer to full power in order to
resume work.  &lt;/p&gt;
&lt;h3&gt;GP Settings&lt;/h3&gt;
&lt;p&gt;There are several ways to configure Windows' sleep settings.&lt;br&gt;
Assuming you manage Windows 7+ workstations, the most convenient way is
to use the Administrative Templates found in&lt;br&gt;
&lt;code&gt;Administrative Templates &amp;gt; System &amp;gt; Power Management &amp;gt; Sleep Settings&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerSleepGP.png"&gt;&lt;/p&gt;
&lt;p&gt;Some things to note:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some interesting settings (such as "Turn off the display") are found
    in other folders inside "Power Management".&lt;/li&gt;
&lt;li&gt;"Unattended sleep" is the computer returning to sleep after being
    woken up using an automated method (like a scheduled task, magic
    packet etc.), as opposed to being woken up from user interaction,
    like a mouse move.&lt;/li&gt;
&lt;li&gt;Hybrid sleep is a new-ish power saving option for laptops (or other
    battery-equipped computers). The computer turns off the screen
    immediately while creating a hibernation file. After creating the
    file, it goes to standby (instead of shutting down like normal S4).
    If the computer doesn't lose power, it will resume quickly from
    standby. If it does, it will resume from the hibernation file.&lt;/li&gt;
&lt;li&gt;Disabling "Allow standby states (S1-S3) when sleeping" will prevent
    the computer from sleeping. UI options for sleep will disappear (as
    if the computer didn't have that capability) and sleeping through
    command line (see ahead) will cause the computer to hibernate
    instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Why Won't it Sleep&lt;/h3&gt;
&lt;p&gt;The reasons for computers not sleeping as expected are divided into 3
main categories:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows Won't Try&lt;/strong&gt;&lt;br&gt;
  Try putting the computer to sleep manually, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;%windir%&lt;/span&gt;\System32\rundll32.exe powrprof.dll,SetSuspendState Standby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the computer still won't sleep, check if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sleep is unavailable on the hardware level (really old hardware, not
    enabled on BIOS…)&lt;/li&gt;
&lt;li&gt;Sleep is disabled by GP. Check the registry key:&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKLM\Software\Policies\Microsoft\Power\PowerSettings\abfc2519-3608-4c2a-94ea-171b0ed546ab:ACSettingIndex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows is Busy&lt;br&gt;
  If the computer will sleep when manually instructed but won't sleep by
  itself, it might be busy doing something that mustn't be interrupted.&lt;br&gt;
  For example, media players will usually ask Windows not to sleep when
  they're playing.&lt;br&gt;
  Current requests can be viewed using &lt;code&gt;PowerCfg -requests&lt;/code&gt; and they look a little like this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerRequests.png"&gt;&lt;/p&gt;
&lt;p&gt;The usual suspect list contains media players, IM software with voice
chat, AV software and indexing software (like google desktop).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows Keeps Getting Bothered&lt;/strong&gt;&lt;br&gt;
    Windows allows different devices and software to wake it up from sleep.&lt;br&gt;
    For example, scheduled tasks can wake Windows up to execute:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerTask.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Or network cards can wake up the computer, either by any incoming
activity or a special "magic packet":  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerNIC.png"&gt;&lt;/p&gt;
&lt;p&gt;And of course, you can usually tap your keyboard to wake your computer up:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/putting-your-windows-to-sleep/PowerKeyboard.png"&gt;&lt;/p&gt;
&lt;p&gt;Some of those devices / features may be misbehaving and keep waking
windows up.&lt;br&gt;
You can try:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Using this command to see which hardware devices can wake the
computer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;powercfg.exe -devicequery wake_armed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using this command to see what caused the computer to wake up the
last time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;powercfg.exe /lastwake
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disconnecting some devices and disabling some tasks to see if the
computer suddenly goes to sleep&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now go get a good night's sleep.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Mysteries Solved"></category><category term="Windows"></category><category term="Power Management"></category><category term="Ramblings"></category><category term="Registry"></category><category term="Performance"></category></entry><entry><title>Adding .net 3.5 to a Windows Server 2012 template</title><link href="https://blog.backslasher.net/adding-net-35-to-windows-server-2012-template.html" rel="alternate"></link><published>2013-06-28T10:48:00+02:00</published><updated>2013-06-28T10:48:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-06-28:/adding-net-35-to-windows-server-2012-template.html</id><summary type="html">&lt;p&gt;I was approached by some colleagues building a new VM template for
Windows Server 2012 who wanted some help with .NET framework 3.5.  &lt;/p&gt;
&lt;h3&gt;The .NET oddity&lt;/h3&gt;
&lt;p&gt;As anyone who messed a bit with Windows Server 2012 knows, the .NET
framework 3.5 is one of two features (along with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was approached by some colleagues building a new VM template for
Windows Server 2012 who wanted some help with .NET framework 3.5.  &lt;/p&gt;
&lt;h3&gt;The .NET oddity&lt;/h3&gt;
&lt;p&gt;As anyone who messed a bit with Windows Server 2012 knows, the .NET
framework 3.5 is one of two features (along with PowerShell v2, contrary
to v3) whose status is &lt;code&gt;removed&lt;/code&gt;, meaning it's not installed &lt;strong&gt;and&lt;/strong&gt; the installation sources aren't
available in the Windows directory, so that in order to install it you
have to supply an installation source - either the "sources" folder from
the CD or access to the Microsoft Update service (and no, WSUS won't do
for now).&lt;/p&gt;
&lt;p&gt;&lt;img alt="AA" src="https://blog.backslasher.net/images/adding-net-35-to-windows-server-2012/AddNet1.png"&gt;&lt;/p&gt;
&lt;h3&gt;Why I care&lt;/h3&gt;
&lt;p&gt;Contrary to Microsoft's optimistic view of the software world, almost
all modern .NET-based software run on version 3.5-, not on 4+, so I'm
going to have to install this feature on a lot of servers.&lt;/p&gt;
&lt;h3&gt;What we did&lt;/h3&gt;
&lt;p&gt;At first I saw two options:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid installing the feature, causing myself a serious amount of
    work (either some manual action or complicated scripting) every time
    I want to create a VM with .NET 3.5,&lt;/li&gt;
&lt;li&gt;Install the feature on the template, causing all VMs to come
    equipped with the feature and relying on my colleagues (and
    future-self) to remove the feature where it's not needed (requires a
    restart) or expose the VM to unnecessary security/performance
    issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After some thinking and tinkering, I came up with a 3rd option - I'll
install the feature on the template then immediately remove it, changing
its state from &lt;code&gt;removed&lt;/code&gt; to &lt;code&gt;available&lt;/code&gt;, thus making the feature itself
unavailable, but the installation sources present in Windows' "sources"
folder, meaning it can be easily installed in the future without
external media!&lt;/p&gt;
&lt;h3&gt;The Steps&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Get a model VM (clean setup of Windows Server 2012 is best)&lt;/li&gt;
&lt;li&gt;Make sure you have the additional sources. If you're connected to
    the internet, you're set. If not, get the "sources\sxs" directory
    from the installation CD&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the feature and immediately remove it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Add-WindowsFeature&lt;/span&gt; &lt;span class="n"&gt;Net-Framework-Core&lt;/span&gt; &lt;span class="n"&gt;-Sources&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SXSDIRECTORY&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;Remove-WindowsFeature&lt;/span&gt; &lt;span class="n"&gt;Net-Framework-Core&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="Step 2" src="https://blog.backslasher.net/images/adding-net-35-to-windows-server-2012/AddNet2.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart the machine, e.g. using &lt;code&gt;Restart-Computer&lt;/code&gt; and verify:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-WindowsFeature&lt;/span&gt; &lt;span class="n"&gt;Net-Framework-Core&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="Step 3" src="https://blog.backslasher.net/images/adding-net-35-to-windows-server-2012/AddNet3.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it!   &lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="Windows"></category><category term="Virtualization"></category><category term="PowerShell"></category></entry><entry><title>Remotely changing DNS server list through registry</title><link href="https://blog.backslasher.net/remotely-changing-dns-server-list.html" rel="alternate"></link><published>2013-06-21T09:51:00+02:00</published><updated>2013-06-21T09:51:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-06-21:/remotely-changing-dns-server-list.html</id><summary type="html">&lt;p&gt;Recently I was called to help some some friends who had an unusual problem:&lt;br&gt;
They demoted an old DC because they needed to raise the domain functional level, and after doing so many of their servers stopped working - they wouldn't allow remote logins, the Exchange services wouldn't start, while showing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I was called to help some some friends who had an unusual problem:&lt;br&gt;
They demoted an old DC because they needed to raise the domain functional level, and after doing so many of their servers stopped working - they wouldn't allow remote logins, the Exchange services wouldn't start, while showing this message when trying to connect:&lt;br&gt;
&lt;code&gt;There are currently no logon servers available to service the logon request.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/remotely-changing-dns-server-list/NoLogonServers.gif"&gt;&lt;/p&gt;
&lt;p&gt;We quickly realized the issue - these servers had a static list of DNS servers configured. The list was out of date, and the only working server was the one they demoted.&lt;br&gt;
Connection to AD requires a working DNS server, because the first step in locating a DC is querying DNS for &lt;code&gt;_ldap._tcp.DOMAIN&lt;/code&gt;.&lt;br&gt;
We had some ideas that would normally work, but not this time:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Repromote the old DC&lt;/strong&gt; - Functional level has already been raised, so we couldn't just run it through DCPromo again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Crate a cache-only DNS server&lt;/strong&gt; - the server was expected to be rebooted and generally unavailable for the following week, so we couldn't rely on it to be available.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create a new DC and steal the old DC's IP&lt;/strong&gt; - some application was running on the old DC and needed its IP.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Eventually we realized something interesting - although the server couldn't authenticate to the DCs (because of the non-functional DNS), connections &lt;strong&gt;to the server&lt;/strong&gt; worked fine, because Kerberos ticket validation happens locally. Therefore, we used &lt;code&gt;regedit&lt;/code&gt; to remotely
connect to the servers and give them new DNS server addresses.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/remotely-changing-dns-server-list/RemoteRegedit.png"&gt;&lt;/p&gt;
&lt;p&gt;The configuration for network adapters can be found under:&lt;br&gt;
&lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\{DEVICEGUID}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/remotely-changing-dns-server-list/TCPRegistry.png"&gt;&lt;/p&gt;
&lt;p&gt;If you have more than one NIC, just choose the key with the value &lt;code&gt;NameServer&lt;/code&gt; already configured. Replace &lt;code&gt;NameServer&lt;/code&gt; with a comma-separated list of your DNS servers' IPs, and reboot (remotely, using &lt;code&gt;shutdown -m&lt;/code&gt;).  &lt;/p&gt;
&lt;p&gt;That's it!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="DNS"></category><category term="Mysteries Solved"></category><category term="Exchange"></category><category term="Registry"></category><category term="Active Directory"></category></entry><entry><title>Filtering Windows Event Log using XPath</title><link href="https://blog.backslasher.net/filtering-windows-event-log-using-xpath.html" rel="alternate"></link><published>2013-05-19T15:24:00+02:00</published><updated>2013-05-19T15:24:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-05-19:/filtering-windows-event-log-using-xpath.html</id><summary type="html">&lt;p&gt;When I want to search for events in Windows Event Log, I can usually make do with searching / filtering through the Event Viewer. For instance, to see all 4624 events (successful logon), I can fill the UI filter dialog like this:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Event Logs:&lt;/strong&gt; Security&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Event IDs:&lt;/strong&gt; 4624&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/EventFilterUI.png"&gt;&lt;/p&gt;
&lt;p&gt;But sometimes I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I want to search for events in Windows Event Log, I can usually make do with searching / filtering through the Event Viewer. For instance, to see all 4624 events (successful logon), I can fill the UI filter dialog like this:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Event Logs:&lt;/strong&gt; Security&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Event IDs:&lt;/strong&gt; 4624&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/EventFilterUI.png"&gt;&lt;/p&gt;
&lt;p&gt;But sometimes I need higher granularity. That's when XPath comes in.  &lt;/p&gt;
&lt;h3&gt;What is XPath&lt;/h3&gt;
&lt;p&gt;Xpath is a method for selecting specific XML nodes from an XML document.&lt;br&gt;
Given a list of books in XML, one can select the third book, the book with the most pages or the book with the author "David" with a single, human-readable XPath statement.  &lt;/p&gt;
&lt;h3&gt;Usage in Windows Event Log&lt;/h3&gt;
&lt;p&gt;Since Windows NT6 (Vista / Server 2008), events are saved in XML format.&lt;br&gt;
If we'll take a look in event 16384:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/16384Text.png"&gt;&lt;/p&gt;
&lt;p&gt;The general message (&lt;code&gt;Successfully scheduled Software Protection service for re-start at {0}. Reason: {1}.&lt;/code&gt;) is saved in an external resource file, but the specifics (the replacement strings) are saved in the event.&lt;br&gt;
They can be viewed in a friendly view (&lt;code&gt;Details/Friendly&lt;/code&gt;) or in their raw XML form (&lt;code&gt;Details/XML&lt;/code&gt;):  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/16384Friendly.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/16384Xml.png"&gt;&lt;/p&gt;
&lt;p&gt;Also available are the general event details (computer name, event ID,
time generated), under the "System" Node:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/16384SystemXml.png"&gt;&lt;/p&gt;
&lt;p&gt;Not only can you filter events using XPath on the event's XML node, this is how the UI is actually filtering.&lt;br&gt;
If we make up some sort of filter:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/SomeFilterUI.png"&gt;&lt;/p&gt;
&lt;p&gt;And switch to the &lt;code&gt;XML&lt;/code&gt; view:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/SomeFilterXml.png"&gt;&lt;/p&gt;
&lt;p&gt;we can see our selections reflected in the XPath statement contained in the &lt;code&gt;Select&lt;/code&gt; element.&lt;br&gt;
Note &lt;code&gt;(EventID=4624)&lt;/code&gt; for filtering by event ID, for example.&lt;/p&gt;
&lt;h3&gt;Using XPath Filtering&lt;/h3&gt;
&lt;p&gt;To filter events using XPath, you need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic XPath skills&lt;/li&gt;
&lt;li&gt;A sample event to examine its structure&lt;/li&gt;
&lt;li&gt;A way to filter&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Basic XPath skills&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;You can learn basic queries on the w3c site: &lt;a href="https://www.w3schools.com/xml/xpath_syntax.asp"&gt;https://www.w3schools.com/xml/xpath_syntax.asp&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;More about XPath: &lt;a href="http://www.whoishostingthis.com/resources/xpath/"&gt;http://www.whoishostingthis.com/resources/xpath/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows Event Log XPath filtering uses a subset of XPath 1.0 with some serious limitations, which can be found here: &lt;a href="http://msdn.microsoft.com/en-us/library/dd996910(VS.85).aspx#limitations"&gt;http://msdn.microsoft.com/en-us/library/dd996910(VS.85).aspx#limitations&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;You can always use the UI to build a filter, then switch to the XML view and see how it's represented in XPath.  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;A sample event&lt;/h4&gt;
&lt;p&gt;When searching for specific fields within a certain event (e.g. 4624 where &lt;code&gt;Process ID&lt;/code&gt; is &lt;code&gt;0x2b0&lt;/code&gt;), it's always good to find a sample event, switch to &lt;code&gt;Details&lt;/code&gt; and see how it's built. In my example, I can see the
field I need is &lt;code&gt;EventData/ProcessId&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/filtering-windows-event-log-using-xpath/4624ProcessID.png"&gt;&lt;/p&gt;
&lt;p&gt;And I can deduce that the XPath expression I need should be something
like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event[
 System[
  EventID=4624
 ] and
 EventData[
  Data[@Name=&amp;quot;ProcessId&amp;quot;]=&amp;quot;0x2b0&amp;quot;
 ]
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;A Way to Filter&lt;/h4&gt;
&lt;p&gt;After you got the XPath query, you need to choose the right tool to run the query on.&lt;br&gt;
You can use:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UI (&lt;code&gt;EventVwr&lt;/code&gt;)&lt;br&gt;
    To use your XPath query in EventVwr, choose one of these two options, switch to the &lt;code&gt;XML&lt;/code&gt; card, enable &lt;code&gt;Edit query manually&lt;/code&gt; and... edit the query.&lt;ul&gt;
&lt;li&gt;Filter&lt;br&gt;
   Use the &lt;code&gt;Filter current log&lt;/code&gt; button to get a one-time filter. Useful when you don't need to save the query for later&lt;/li&gt;
&lt;li&gt;Custom View&lt;br&gt;
  Create a new custom view if you intend to reuse the query. Note that it's saved on the computer running the event viewer, not on the computer being queried.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cmd&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Wevtutil&lt;/code&gt;&lt;br&gt;
This tool is useful when managing event logs in general, but it also can be used to query for events. The usage is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wevtutil qe LogName /q:&lt;span class="s2"&gt;&amp;quot;XpathQuery&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more info, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wevtutil qe /?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PowerShell  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Get-WinEvent&lt;/code&gt;&lt;br&gt;
This Cmdlet has 3 options for filtering. Choose one:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FilterXml&lt;/code&gt; - Accepts a full XML (as seen in the event viewer UI)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FilterXPath&lt;/code&gt; - Accepts just the XPath query&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FilterHashtable&lt;/code&gt; - Accepts a hashtable of field IDs and values. I
find it kind of confusing and buggy, so I avoid it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, to view the top 5 events matching our query (ID 4624
    and "Process ID" is "0x2b0") on computer "comp", you can try:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-WinEvent&lt;/span&gt; &lt;span class="n"&gt;-ComputerName&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Comp&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-LogName&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Security&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-FilterXPath&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Event[System[EventID=4624] and EventData[Data[@Name=&amp;quot;ProcessId&amp;quot;]=&amp;quot;0x2b0&amp;quot;]]&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-MaxEvents&lt;/span&gt; &lt;span class="n"&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Pointers&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can't specify both Channel ("Event Logs") and Provider ("Event
    Sources"). In any case, if you have the provider, the channel is
    redundant.&lt;/li&gt;
&lt;li&gt;Specifying the Channel in the XPath query (like &lt;code&gt;Event[System[Channel="Security"]]&lt;/code&gt;) doesn't seem to work. The UI also avoids it in its generated queries.&lt;/li&gt;
&lt;li&gt;When querying for events using PowerShell, you might get empty messages. The useful event details are still there! For example, you can use &lt;code&gt;ToXml()&lt;/code&gt; on the event objects to get the XML format.&lt;/li&gt;
&lt;li&gt;General event properties (like &lt;code&gt;TimeGenerated&lt;/code&gt; and &lt;code&gt;Level&lt;/code&gt;) can be quite different than how they look in the UI. Check the friendly/XML view or the UI-generated XPath Query.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The event-specific properties are contained in "Data" elements. To search for named properties, use something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event[EventData[Data[@Name=&amp;quot;PropertyName&amp;quot;]=&amp;quot;RequiredValue&amp;quot;]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To search for that value in any property (kind of like searching for
the value in the entire message), use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event[EventData[Data=&amp;quot;RequiredValue&amp;quot;]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To search for two fields, use something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event[ EventData[  Data[@Name=&amp;quot;PropA&amp;quot;]=&amp;quot;ValueA&amp;quot; and  Data[@Name=&amp;quot;PropB&amp;quot;]=&amp;quot;ValueB&amp;quot; ]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;To Sum Up&lt;/h3&gt;
&lt;p&gt;It may look harder than normal filtering at first, but the resulting
queries can be much more granular and effective than UI-based filtering.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="Windows"></category><category term="PowerShell"></category><category term="Ramblings"></category><category term="Event Log"></category></entry><entry><title>Preventing Users from Adding Computers to a Domain</title><link href="https://blog.backslasher.net/preventing-users-from-adding-computers-to-a-domain.html" rel="alternate"></link><published>2013-05-19T09:32:00+02:00</published><updated>2013-05-19T09:32:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-05-19:/preventing-users-from-adding-computers-to-a-domain.html</id><summary type="html">&lt;p&gt;Some time ago, we've come to the conclusion that the computer accounts
in the domain are disorganized. After doing the tedious job of sorting
existing accounts, we saw that new computer accounts are still being
added to the "Computers" container, and we had no idea which computer
was behind them …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some time ago, we've come to the conclusion that the computer accounts
in the domain are disorganized. After doing the tedious job of sorting
existing accounts, we saw that new computer accounts are still being
added to the "Computers" container, and we had no idea which computer
was behind them (server/workstation, test/production etc.). After doing
some research, we managed to block everyone from joining computers to
the domain without pre-creating a computer account (inside organized
OUs).  &lt;/p&gt;
&lt;h3&gt;The domain join process&lt;/h3&gt;
&lt;p&gt;To join a domain, Windows needs a computer account. Windows tries to get
its own computer account using these methods, in that order:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Searches for an existing account with an identical name to its own.&lt;br&gt;
   If a matching account is found (and is disabled), Windows attempts
    to make it its own (write FQDN, reset password etc.)&lt;/li&gt;
&lt;li&gt;Tries to create a new account using the user's permissions in the
    default computers container&lt;/li&gt;
&lt;li&gt;Tries to use the "Add workstations to domain" privilege to create a
    new account in the default computers container&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;A little about "Add workstations to domain":&lt;/h3&gt;
&lt;p&gt;Microsoft intends for users to join their own workstations to the
domain, probably to reduce load on helpdesks. For this to work, DCs have
a &lt;a href="http://technet.microsoft.com/en-us/library/cc780182%28v=ws.10%29.aspx"&gt;User Right Assignment&lt;/a&gt; called
"Add workstations to domain".&lt;br&gt;
By default, Authenticated users are members of this group, meaning that
all domain users can use this privilege.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/preventing-users-from-adding-computers-to-a-domain/AddWorkstationsToDomain.png"&gt;&lt;/p&gt;
&lt;p&gt;Users with this privilege can create up to 10 (by default) computer
accounts in the default computers container.&lt;br&gt;
The limit of accounts every user can create is defined in the domain
object, under the property &lt;code&gt;ms-DS-MachineAccountQuota&lt;/code&gt;. To view it,
execute&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;get-addomain&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DistinguishedName&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;get-adobject&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ms-DS-MachineAccountQuota&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;ms-DS-MachineAccountQuota&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The amount of computers a user has already joined is determined by
counting the machines with &lt;code&gt;ms-DS-CreatorSID&lt;/code&gt; identical to the user's
SID. To find all computers added to the domain using this privilege, you
can try   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ADComputer&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To find computers added to the domain using this privilege by a specific
user, execute:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$sid&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;get-aduser&lt;/span&gt; &lt;span class="n"&gt;OneBoredAdmin&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;SID&lt;/span&gt;
&lt;span class="nb"&gt;Get-ADComputer&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$sid&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To get a summary of all privilege-added computers and the users that
added them, try:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;get-adcomputer&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;group &lt;/span&gt;&lt;span class="n"&gt;ms-DS-CreatorSID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UserName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;}},@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ComputerNames&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Group &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="c"&gt;# Try to resolve the SID into an account&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[System.Security.Principal.NTAccount]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By the way, when using this privilege to create an account, the account
is created with "Domain Admins" as its owner (and not the creating
user), and the user's SID in the &lt;code&gt;ms-DS-CreatorSID&lt;/code&gt; property.  &lt;/p&gt;
&lt;h3&gt;Action Plan&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; While these actions should work as planned and prevent users from
adding computers without having a computer account ready, step 1 will
break DC demotion. You can either redirect your default computer
directory to another OU for the process (see
&lt;a href="http://support.microsoft.com/kb/324949"&gt;KB324949&lt;/a&gt;) or restore the
original permissions. Since demoting isn't a daily action, I still think
this procedure is worth doing.  &lt;/p&gt;
&lt;p&gt;In order to prevent users from joining computers to the domain without
pre-creating a computer account, you have to perform these actions:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Remove permissions to create computer accounts on the default
    computers container. To check what is the current default computers
    container in your domain, you can try:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADDomain&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ComputersContainer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prevent users from using the "Add workstations to domain" privilege.
    This can be done either by modifying the &lt;code&gt;ms-DS-MachineAccountQuota&lt;/code&gt;
    property on the domain to zero, or removing "Authenticated users"
    from the URA on the DCs (use Group Policy to make sure it'll apply to future
    DCs as well).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As long as you don't perform those two steps, users will still be able
to add computers to the domain.  &lt;/p&gt;
&lt;h5&gt;Further reading:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technet.microsoft.com/en-us/library/cc780195%28v=ws.10%29.aspx"&gt;Add workstations to domain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://support.microsoft.com/kb/243327"&gt;Default limit to number of workstations a user can join to the domain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Security"></category><category term="Mysteries Solved"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Investigating Repeatedly Locked Out Users</title><link href="https://blog.backslasher.net/investigating-repeatedly-locked-out-users.html" rel="alternate"></link><published>2013-05-14T09:44:00+02:00</published><updated>2013-05-14T09:44:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-05-14:/investigating-repeatedly-locked-out-users.html</id><summary type="html">&lt;p&gt;I often get asked by some other IT guy "why does user XXXXX keep on
getting locked out?"  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/investigating-repeatedly-locked-out-users/AccountLockedOut.png"&gt;&lt;/p&gt;
&lt;p&gt;Let me clue you in on something - users (almost) always get locked out for the
same reason: They try the wrong password too many times.The reasons for
THAT, however, are quite …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I often get asked by some other IT guy "why does user XXXXX keep on
getting locked out?"  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/investigating-repeatedly-locked-out-users/AccountLockedOut.png"&gt;&lt;/p&gt;
&lt;p&gt;Let me clue you in on something - users (almost) always get locked out for the
same reason: They try the wrong password too many times.The reasons for
THAT, however, are quite diverse and include:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People typing in the wrong password&lt;/li&gt;
&lt;li&gt;Computers trying to renew TGTs with an old password (after a
    different one has been set/reset from somewhere else)&lt;/li&gt;
&lt;li&gt;Some external system (SAP, VMWare SSO...) is using AD as its user
    store, and is being presented with the wrong credentials from its
    own client (a web browser, for instance)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also recently learned that turning on &lt;code&gt;Smart card is required for interactive logon&lt;/code&gt; actually scrambles the user's password as well, so
people being enforced to use smart cards are often locked out without
doing anything other than being logged in (with the now old password).&lt;br&gt;
Finding the root cause is not trivial, but I've created a small
procedure to help the helpdesk  / IT team solve such mysteries:&lt;/p&gt;
&lt;h3&gt;1. Start working immediately after a lockout&lt;/h3&gt;
&lt;p&gt;Unless you have some fancy enterprise event logging solution (like
SCOM's ACS or Symantec's SIM), you better act quick. Events in DCs don't
last for long, because they have limited log size and are constantly
generating new events. Considering the fact that it's easier to find
fresh events anyway, it's usually a good idea to determine when the
lockout happens (all the time, every 48 hours...), unlock the account
and start looking at logs immediately after it's locked again. Assuming
you have a functional PDC, it'll hold the latest user data, so you can
check on the user using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ADUser&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADDomainController&lt;/span&gt; &lt;span class="n"&gt;-Service&lt;/span&gt; &lt;span class="n"&gt;PrimaryDC&lt;/span&gt; &lt;span class="n"&gt;-Discover&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt;
&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;USERNAME&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;LockedOut&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LockedOut&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2. Search DC security logs for audit logon failures with that user&lt;/h3&gt;
&lt;p&gt;If you have enterprise event collection, use it.&lt;br&gt;
If you don't (or prefer the hardcore version), you have 3 ways to
filter:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Filter every one of your DCs' logs with the following criteria:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logged (time): The smallest time range you can afford. I usually take 15 minutes&lt;/li&gt;
&lt;li&gt;Event Logs: &lt;code&gt;Security&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Event Sources: &lt;code&gt;Microsoft Windows security auditing.&lt;/code&gt; (this dot is actually there)&lt;/li&gt;
&lt;li&gt;Task Category: &lt;code&gt;Logon, Kerberos Service Ticket Operations, Kerberos Authentication Service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Keywords: &lt;code&gt;Audit Failure&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/investigating-repeatedly-locked-out-users/AccountLockedOutFilter.png"&gt;&lt;/p&gt;
&lt;p&gt;And manually search (&lt;code&gt;Ctrl+F&lt;/code&gt;) for the user name in the resulting event list&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Filter every DC's security log with the following xml criteria:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;QueryList&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;Query&lt;/span&gt; &lt;span class="na"&gt;Id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;Path=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Security&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Select&lt;/span&gt; &lt;span class="na"&gt;Path=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Security&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Event[
 System[
  Provider[@Name=&amp;#39;Microsoft-Windows-Security-Auditing&amp;#39;] and
  ( Task = 12544 or Task = 14337 or Task = 14339 ) and
  (band(Keywords,4503599627370496)) and
  TimeCreated[timediff(@SystemTime) &amp;gt;= 3600000]
 ] and
 EventData[
  (Data=&amp;#39;USERNAMEHERE&amp;#39;)
 ]
]
    &lt;span class="nt"&gt;&amp;lt;/Select&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/Query&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/QueryList&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute this script, which extracts the event from all of your
DCs, and inspect the results:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$timeBack&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[timespan]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0:15:0&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;USERNAME&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$msg&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADDomainController&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;hostname&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
&lt;span class="nb"&gt;Get-WinEvent&lt;/span&gt; &lt;span class="n"&gt;-ComputerName&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-LogName&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Security&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-FilterXPath&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;Event[&lt;/span&gt;
&lt;span class="s2"&gt; System[&lt;/span&gt;
&lt;span class="s2"&gt;  Provider[@Name=&amp;#39;Microsoft-Windows-Security-Auditing&amp;#39;] and&lt;/span&gt;
&lt;span class="s2"&gt;  ( Task = 12544 or Task = 14337 or Task = 14339 ) and&lt;/span&gt;
&lt;span class="s2"&gt;  (band(Keywords,4503599627370496)) and&lt;/span&gt;
&lt;span class="s2"&gt;  TimeCreated[timediff(@SystemTime) &amp;lt;= &lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$timeBack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TotalMilliseconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;]&lt;/span&gt;
&lt;span class="s2"&gt; ] and&lt;/span&gt;
&lt;span class="s2"&gt; EventData[&lt;/span&gt;
&lt;span class="s2"&gt;  (Data=&amp;#39;$userName&amp;#39;)&lt;/span&gt;
&lt;span class="s2"&gt; ]&lt;/span&gt;
&lt;span class="s2"&gt;]&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{(&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toXml&lt;/span&gt;&lt;span class="p"&gt;())}&lt;/span&gt;
&lt;span class="nv"&gt;$msg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;3. Analyze the failure message&lt;/h3&gt;
&lt;p&gt;After finding the message, we need to read it to decide why the computer
is locking out the user.&lt;br&gt;
It usually involves locating the following parts of the message:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Machine / workstation name&lt;/li&gt;
&lt;li&gt;Authentication failure reason: We need to know if this computer is the real culprit (providing wrong passwords) or only a harmless victim (trying to authenticate the account when it's already locked).&lt;br&gt;
    These can help:&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technet.microsoft.com/en-us/library/bb463166.aspx"&gt;Keberos error codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blogs.technet.com/b/askpfeplat/archive/2013/01/28/quick-reference-troubleshooting-netlogon-error-codes.aspx"&gt;NTLM error codes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logon Type - It helps to know what type of logon was attempted.&lt;br&gt;
    For example, it could be physical logon (a good old keyboard-mouse user session) or a service logon (a service with such credentials trying to start). &lt;a href="http://technet.microsoft.com/en-us/library/cc787567%28v=ws.10%29.aspx"&gt;Here is a pretty good list&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these details, we should have a good idea about the computer
responsible for the lockout&lt;/p&gt;
&lt;h3&gt;4. Handle offending computer&lt;/h3&gt;
&lt;p&gt;Since there are many root causes and many responses, I'll just give a
couple of ideas here, categorised by the logon type:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2(&lt;code&gt;Interactive&lt;/code&gt;)&lt;br&gt;
  7(&lt;code&gt;Unlock&lt;/code&gt;)&lt;br&gt;
  10(&lt;code&gt;RemoteInteractive&lt;/code&gt;)  &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A user left a session (Console/RDP) running with the wrong password&lt;/strong&gt;&lt;br&gt;
  Either restart the computer, log the user off or unlock the session with fresh credentials&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Someone is typing the wrong password (by mistake)&lt;/strong&gt;&lt;br&gt;
  Manually inform the user that &lt;a href="http://cdn.memegenerator.net/instances/400x/37280439.jpg"&gt;his password is incorrect&lt;/a&gt; (physically / via helpdesk)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brute force is being attempted&lt;/strong&gt;&lt;br&gt;
  Security response team?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3(&lt;code&gt;Network&lt;/code&gt;)&lt;br&gt;
  8(&lt;code&gt;NetworkClearText&lt;/code&gt;)&lt;br&gt;
&lt;strong&gt;Non-session authentication (basic / network etc.) failing on a domain member&lt;/strong&gt;&lt;br&gt;
  Some server application is being provided the wrong credentials from a client (e.g. IIS using basic authentication, Windows File Server using NTLM…)&lt;br&gt;
  Open the domain member's local security log and look for authentication failures to determine the failing computer. Note the &lt;code&gt;Caller process name&lt;/code&gt; field.&lt;br&gt;
  Some applications (like SAP) may record their attempts in their own log and not in Windows' event log&lt;/li&gt;
&lt;li&gt;4(&lt;code&gt;Batch&lt;/code&gt;)&lt;br&gt;
  5(&lt;code&gt;Service&lt;/code&gt;)&lt;br&gt;
&lt;strong&gt;A service / scheduled task is using the wrong credentials to launch&lt;/strong&gt;&lt;br&gt;
  Find the wrong configuration and fix it. You may use the local computer's security event log&lt;/li&gt;
&lt;li&gt;ANY&lt;br&gt;
&lt;strong&gt;Failed authentication from a non-domain member (e.g. thin client)&lt;/strong&gt;&lt;br&gt;
  There isn't a lot you can do with these, because they're not domain members. Either handle them (e.g. reset the device) or block them from accessing the DC using some firewall. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Remember&lt;/strong&gt;: There are other possibilities, these are just some pointers.&lt;/p&gt;
&lt;p&gt;Lockout pictures are from:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blogs.technet.com/b/askds/archive/2008/02/15/read-only-domain-controllers-and-account-lockouts.aspx"&gt;http://blogs.technet.com/b/askds/archive/2008/02/15/read-only-domain-controllers-and-account-lockouts.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.petri.co.il/add_unlock_user_option_to_dsa.htm"&gt;http://www.petri.co.il/add_unlock_user_option_to_dsa.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.strictly-software.com/2012/01/remote-desktop-access-denied-error.html"&gt;http://blog.strictly-software.com/2012/01/remote-desktop-access-denied-error.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.top-password.com/blog/troubleshooting-locked-out-windows-user-account/"&gt;http://www.top-password.com/blog/troubleshooting-locked-out-windows-user-account/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Security"></category><category term="Mysteries Solved"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Event Log"></category><category term="Active Directory"></category></entry><entry><title>Viewing detailed replication status using Repadmin and PowerShell</title><link href="https://blog.backslasher.net/viewing-detailed-replication-status-using-repadmin-and-powershell.html" rel="alternate"></link><published>2013-05-03T11:46:00+02:00</published><updated>2013-05-03T11:46:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-05-03:/viewing-detailed-replication-status-using-repadmin-and-powershell.html</id><summary type="html">&lt;p&gt;Whenever I want to view the replication status in my domain, I use
&lt;code&gt;repadmin /replsum&lt;/code&gt;, which queries all of the DCs and gives me a summary
of the replication links status per DC, which looks a little like this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/replsum.png"&gt;&lt;/p&gt;
&lt;p&gt;If I wanted to get detailed information, I'd use &lt;code&gt;repadmin /showrepl …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Whenever I want to view the replication status in my domain, I use
&lt;code&gt;repadmin /replsum&lt;/code&gt;, which queries all of the DCs and gives me a summary
of the replication links status per DC, which looks a little like this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/replsum.png"&gt;&lt;/p&gt;
&lt;p&gt;If I wanted to get detailed information, I'd use &lt;code&gt;repadmin /showrepl *&lt;/code&gt;
which would print some information for every replication link:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/showrepl.png"&gt;&lt;/p&gt;
&lt;p&gt;Since I have more than two DCs in some environments, looking at all of
the information is quite a long read and I usually avoid using this
option unless I have to.&lt;br&gt;
Recently, I discovered a nifty trick.&lt;br&gt;
&lt;code&gt;repadmin /showrepl&lt;/code&gt; has a csv option, which isn't exciting by itself:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;repadmin /showrepl * /csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/showreplCsv.png"&gt;&lt;/p&gt;
&lt;p&gt;However, combined with PowerShell's &lt;code&gt;ConvertFrom-Csv&lt;/code&gt;, I could convert
the link status rows into objects and filter them within PowerShell:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;repadmin&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;showrepl&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-Csv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/showreplCsvPowerShell.png"&gt;&lt;/p&gt;
&lt;p&gt;Now, for example, if I wanted to view all links that had replication
errors, I could use  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;repadmin&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;showrepl&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-Csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Number Of Failures&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And I can even display all of the links in GridView, for ease of use:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;repadmin&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;showrepl&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-Csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ogv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/viewing-detailed-replication-status-using-repadmin-and-powershell/replGridView.png"&gt;&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="One-Liner"></category><category term="Active Directory"></category></entry><entry><title>Solving Event Log Subscription Error "0x138C"</title><link href="https://blog.backslasher.net/solving-event-log-subscription-error-0x138c.html" rel="alternate"></link><published>2013-04-09T13:06:00+02:00</published><updated>2013-04-09T13:06:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-04-09:/solving-event-log-subscription-error-0x138c.html</id><summary type="html">&lt;p&gt;Today I saw some collector-initiated event log subscriptions that
displayed a weird error, something like  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Windows Event Forward plugin can&amp;#39;t read any event from the query since the query returns no active channel. Please check channels in the query and make sure they exist and you have access to …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Today I saw some collector-initiated event log subscriptions that
displayed a weird error, something like  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Windows Event Forward plugin can&amp;#39;t read any event from the query since the query returns no active channel. Please check channels in the query and make sure they exist and you have access to them.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The reason for this message is that WinRM can't read the event log.&lt;br&gt;
If you haven't read my &lt;a href="https://blog.backslasher.net/windows-event-collection.html"&gt;long post about Event
Forwarding&lt;/a&gt;,
you should.&lt;br&gt;
The main point is that the WinRM service doesn't perform any
impersonation while reading the events. Instead, it reads the logs using
it's own security context and then verifies the client's permissions (if
there are any).&lt;br&gt;
Default Windows permissions grant &lt;code&gt;Network Service&lt;/code&gt; or similar
principals (e.g. &lt;code&gt;SERVICE&lt;/code&gt;) read access to all of the event logs, but
I've encountered software that modifies those permissions. Although it's
icky, you can view your current event log permissions using the command
line:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wevtutil gl LOGNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Look for &lt;code&gt;channelAccess&lt;/code&gt;. You can repair them if necessary (carefully).
You can also manually modify them &lt;a href="http://blog.oneboredadmin.com/2011/01/event-log-permissions-with-scripts.html"&gt;using registry&lt;/a&gt;.
Remember that you have to reboot the machine for those permissions to
apply.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="WinRM"></category><category term="Registry"></category><category term="Event Log"></category></entry><entry><title>Group Policy Security Filtering and Loopback</title><link href="https://blog.backslasher.net/group-policy-security-filtering-and-loopback.html" rel="alternate"></link><published>2013-03-19T18:13:00+01:00</published><updated>2013-03-19T18:13:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-03-19:/group-policy-security-filtering-and-loopback.html</id><summary type="html">&lt;p&gt;I recently discovered that when applying a GP object using loopback and
user security filtering (allowing only specific users to apply the GP),
the computer still needs read access to the GP.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPSecFiltering.png"&gt;&lt;/p&gt;
&lt;p&gt;Otherwise, the GP will show up as not applied due to it being
"inaccessible":  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPInaccessible.PNG"&gt;&lt;/p&gt;
&lt;p&gt;My guess is that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently discovered that when applying a GP object using loopback and
user security filtering (allowing only specific users to apply the GP),
the computer still needs read access to the GP.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPSecFiltering.png"&gt;&lt;/p&gt;
&lt;p&gt;Otherwise, the GP will show up as not applied due to it being
"inaccessible":  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPInaccessible.PNG"&gt;&lt;/p&gt;
&lt;p&gt;My guess is that it's because the group policy engine is using the
computer account's security context to collect the loopback GPs.&lt;br&gt;
Basically, you have to give the computer account you wish to apply the
GP on read permissions on the GP object. You can simply use &lt;code&gt;Domain Computers&lt;/code&gt; if the content of the GP is not sensitive.&lt;br&gt;
You can either:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Grant Read permissions through the "Delegation" tab:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPDelegation1.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add the computers to the &lt;code&gt;security filtering&lt;/code&gt; (only if the GP has no
    computer settings, otherwise they will apply):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/group-policy-security-filtering-and-loopback/GPDelegation2.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now the GP loopback will work fine.&lt;br&gt;
Enjoy!  &lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Security"></category><category term="Mysteries Solved"></category><category term="Active Directory"></category></entry><entry><title>Opening Group Policy Management Editor from the Command Line</title><link href="https://blog.backslasher.net/opening-group-policy-management-editor-from-the-command-line.html" rel="alternate"></link><published>2013-03-19T18:12:00+01:00</published><updated>2013-03-19T18:12:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-03-19:/opening-group-policy-management-editor-from-the-command-line.html</id><summary type="html">&lt;p&gt;Yesterday I wanted to open the Group Policy editor (or "Group Policy
Management Editor") for a specific GP object through PowerShell, but
there is no "Edit-GPO" cmdlet. I quickly checked from the task manager
how the GPMC opens the editor, and made my own:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Edit-GPO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$guid&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADDomain …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Yesterday I wanted to open the Group Policy editor (or "Group Policy
Management Editor") for a specific GP object through PowerShell, but
there is no "Edit-GPO" cmdlet. I quickly checked from the task manager
how the GPMC opens the editor, and made my own:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Edit-GPO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$guid&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADDomain&lt;/span&gt;
&lt;span class="c"&gt;# Operate on PDC to help consistency&lt;/span&gt;
&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$domain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDCEmulator&lt;/span&gt;
&lt;span class="nv"&gt;$PoliciesPath&lt;/span&gt;&lt;span class="p"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CN=Policies,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$domain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SystemsContainer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$GPPath&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;LDAP://{0}/CN={{{1}}},{2}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$guid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$PoliciesPath&lt;/span&gt;
&lt;span class="c"&gt;#$GPPath&lt;/span&gt;
&lt;span class="n"&gt;gpme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;msc&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/GPOBJECT:&lt;/span&gt;&lt;span class="se"&gt;`&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;$GPPath&lt;/span&gt;&lt;span class="se"&gt;`&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;My function binds to the PDC for the same reason the GPMC does - it
helps consistency. If you don't like it, you can modify the &lt;code&gt;$server&lt;/code&gt;
variable to point at something else.&lt;br&gt;
For example, this is how you open the gpme for the default domain
policy:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Default Domain Policy&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nb"&gt;Edit-GPO&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And this is how you open it for every GP with user settings enabled:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="n"&gt;-All&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GpoStatus&lt;/span&gt; &lt;span class="o"&gt;-band&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[Microsoft.GroupPolicy.GpoStatus]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ComputerSettingsDisabled&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nb"&gt;Edit-GPO&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Programming"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Removing all Metro Apps from Windows 8</title><link href="https://blog.backslasher.net/removing-all-metro-apps-from-windows-8.html" rel="alternate"></link><published>2013-03-19T13:59:00+01:00</published><updated>2013-03-19T13:59:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-03-19:/removing-all-metro-apps-from-windows-8.html</id><summary type="html">&lt;p&gt;I wanted to open some photos today (to add to my blog) on my Windows 8
workstation, and it kept opening the full-screen metro app instead of
the normal picture viewer. It really annoyed me, and I looked for a
quick and dirty way to remove &lt;strong&gt;ALL&lt;/strong&gt; metro apps. This …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I wanted to open some photos today (to add to my blog) on my Windows 8
workstation, and it kept opening the full-screen metro app instead of
the normal picture viewer. It really annoyed me, and I looked for a
quick and dirty way to remove &lt;strong&gt;ALL&lt;/strong&gt; metro apps. This one-liner I wrote
quickly removes all metro apps that can be removed. I know I liked it!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-AppxPackage&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Remove-AppxPackage&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="n"&gt;SilentlyContinue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="One-Liner"></category></entry><entry><title>Wget in PowerShell v3</title><link href="https://blog.backslasher.net/wget-in-powershell-v3.html" rel="alternate"></link><published>2013-03-14T21:20:00+01:00</published><updated>2013-03-14T21:20:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-03-14:/wget-in-powershell-v3.html</id><summary type="html">&lt;p&gt;I've been envying my *nix brethren for having
&lt;a href="http://en.wikipedia.org/wiki/Wget"&gt;Wget&lt;/a&gt; for a long time. To get the
contents of a web page or download a file using http I had to use
workarounds that took more than one command - either creating a new
System.Net.WebRequest or using a BITS module …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been envying my *nix brethren for having
&lt;a href="http://en.wikipedia.org/wiki/Wget"&gt;Wget&lt;/a&gt; for a long time. To get the
contents of a web page or download a file using http I had to use
workarounds that took more than one command - either creating a new
System.Net.WebRequest or using a BITS module.&lt;br&gt;
Well - Since I started using PowerShell v3 I can be lazy once more,
thanks to
&lt;a href="http://technet.microsoft.com/en-us/library/hh849901.aspx"&gt;Invoke-WebRequest&lt;/a&gt;.&lt;br&gt;
For example, say you want to fetch the contents of my blog's frontpage:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://backslasher.net&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or maybe you'd like just the title?  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://backslasher.net&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ParsedHtml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or if I want to download google's logo to a file:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.google.com/images/srpr/logo4w.png&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-OutFile&lt;/span&gt; &lt;span class="p"&gt;~\&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;omgLogo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Proxying through Fiddler was never easier:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://Some.Site.com&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-Proxy&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://localhost:8888&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And lastly, if you want to hit your SharePoint site's homepage, but you
need to use kerberos authentication:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://SharepointServer/BestSite&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-UseDefaultCredentials&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Easy webbing!&lt;/p&gt;</content><category term="Microsoft"></category><category term="HTTP"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="HTML"></category></entry><entry><title>Copying Files In PowerShell - Using Windows Explorer UI</title><link href="https://blog.backslasher.net/copying-files-in-powershell-using-windows-explorer-ui.html" rel="alternate"></link><published>2013-02-19T14:35:00+01:00</published><updated>2013-02-19T14:35:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-02-19:/copying-files-in-powershell-using-windows-explorer-ui.html</id><summary type="html">&lt;p&gt;I know this trick is widely known, but I thought it's worth mentioning anyway.&lt;br&gt;
If you use PowerShell's Copy-Item to copy files, you don't get any progress report, ETA or statistics like you do when using Windows Explorer's file copy.  &lt;/p&gt;
&lt;p&gt;First, let's generate a random file using &lt;code&gt;fsutil&lt;/code&gt;. Note how …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I know this trick is widely known, but I thought it's worth mentioning anyway.&lt;br&gt;
If you use PowerShell's Copy-Item to copy files, you don't get any progress report, ETA or statistics like you do when using Windows Explorer's file copy.  &lt;/p&gt;
&lt;p&gt;First, let's generate a random file using &lt;code&gt;fsutil&lt;/code&gt;. Note how PowerShell
makes things easy by translating "2GB" to "2147483648":  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fsutil&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;createnew&lt;/span&gt; &lt;span class="n"&gt;big&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;2GB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When we copy the file via &lt;code&gt;Copy-Item&lt;/code&gt;, the best progress indication we can get is through the &lt;code&gt;-passthrough&lt;/code&gt; flag to see a list of files copied:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/copying-files-in-powershell-using/PowerShellCopyExplorer1.png"&gt;&lt;/p&gt;
&lt;p&gt;Compared to Windows Explorer's copy dialog:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/copying-files-in-powershell-using/PowerShellCopyExplorer2.png"&gt;&lt;/p&gt;
&lt;p&gt;I recently wrote a script that copies a lot of big files, and I wanted to spoil myself and get detailed information about the transfer - not just file names.&lt;br&gt;
After a quick search, I wrote this method to copy files using Explorer's Shell (represented as a COM object):  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Copy-ItemUsingExplorer&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$destination&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$CopyFlags&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nv"&gt;$objShell&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;-ComObject&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Shell.Application&amp;#39;&lt;/span&gt;    
    &lt;span class="nv"&gt;$objFolder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$objShell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NameSpace&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;gi &lt;/span&gt;&lt;span class="nv"&gt;$destination&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;FullName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;$objFolder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CopyHere&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;gi &lt;/span&gt;&lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;FullName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$CopyFlags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{0:x}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Replacing &lt;code&gt;CopyHere&lt;/code&gt; with &lt;code&gt;MoveHere&lt;/code&gt; will trigger a move operation instead.&lt;br&gt;
More reading about CopyHere (including the options offered by &lt;code&gt;CopyFlags&lt;/code&gt;) - &lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb787866(v=vs.85).aspx"&gt;Here&lt;/a&gt;&lt;br&gt;
Happy Scripting!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="FileSystem"></category><category term="PowerShell"></category></entry><entry><title>Testing actual SMB version</title><link href="https://blog.backslasher.net/testing-actual-smb-version.html" rel="alternate"></link><published>2013-02-14T07:52:00+01:00</published><updated>2013-02-14T07:52:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-02-14:/testing-actual-smb-version.html</id><summary type="html">&lt;p&gt;Ever since I got employed in my present company, I've been told that our
NetApp Filer supports SMB2 when used as NAS. &lt;br&gt;
I was always skeptic of that (due to high transfer times and being
unable to cancel mid-file) but had no easy way of testing (I guess I
could …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever since I got employed in my present company, I've been told that our
NetApp Filer supports SMB2 when used as NAS. &lt;br&gt;
I was always skeptic of that (due to high transfer times and being
unable to cancel mid-file) but had no easy way of testing (I guess I
could use Network Monitor, but I wasn't THAT skeptic), but I recently
learned that in Windows 8 it's super easy!&lt;br&gt;
&lt;a href="http://blogs.technet.com/b/josebda/archive/2012/06/06/windows-server-2012-which-version-of-the-smb-protocol-smb-1-0-smb-2-0-smb-2-1-or-smb-3-0-you-are-using-on-your-file-server.aspx"&gt;Jose Barreto's
post&lt;/a&gt;
taught me a little trick:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open PowerShell as an administrator (on a Windows 8 / Windows Server
    2012 machine)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perform an SMB operation against the file server (my Filer) like
    this:   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;\\&lt;/span&gt;&lt;span class="n"&gt;Netapp&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;stupidShare&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute the command &lt;code&gt;Get-SmbConnection&lt;/code&gt;, filter for sessions to the
    file server and look at &lt;code&gt;Dialect&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-SmbConnection&lt;/span&gt; &lt;span class="n"&gt;-server&lt;/span&gt; &lt;span class="n"&gt;Netapp&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;fl&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result should look like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ServerName : Netapp
ShareName  : stupidShare
UserName   : Domain\OBA
Credential : Domain.Domains\OBA
Dialect    : 1.50
NumOpens   : 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As you can see, my suspicions were correct! My Windows 8 machine (that
definitely supports SMB3 and SMB2) and the NetApp Filer eventually
negotiated on SMB1, probably indicating that the Filer doesn't support
SMB2 (at least at the moment).&lt;br&gt;
No one can fool me with SMB versions anymore!  &lt;/p&gt;
&lt;p&gt;P.S.: Check out Jose's post for SMB support matrix, version difference
and some complex diagram with a raptor (no kidding).&lt;/p&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="Scripts"></category><category term="NetApp"></category><category term="SMB"></category><category term="FileSystem"></category><category term="PowerShell"></category><category term="CIFS"></category><category term="Performance"></category></entry><entry><title>Mass Setting Permissions on Remote Shares</title><link href="https://blog.backslasher.net/mass-setting-permissions-on-remote-shares.html" rel="alternate"></link><published>2013-02-13T07:26:00+01:00</published><updated>2013-02-13T07:26:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-02-13:/mass-setting-permissions-on-remote-shares.html</id><summary type="html">&lt;p&gt;I was recently asked by one of my teammates to add several NTFS
permissions to the root folders of a bunch of shares. Seems easy, but I
had two problems:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The shares were stored on a NetApp Filer, so I couldn't use any WMI
    trickery (or the new SMB module …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;I was recently asked by one of my teammates to add several NTFS
permissions to the root folders of a bunch of shares. Seems easy, but I
had two problems:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The shares were stored on a NetApp Filer, so I couldn't use any WMI
    trickery (or the new SMB module for Windows 8)&lt;/li&gt;
&lt;li&gt;There are about 2,000 shares, so the good old manual method is out
    of the question&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Of course, PowerShell has a solution.&lt;br&gt;
The script was composed of two parts:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Discovering all shares on the Filer&lt;/li&gt;
&lt;li&gt;Setting the permissions on each share&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style="font-size: large;"&gt;Discovery&lt;/span&gt;&lt;br&gt;
For the share discovery, I looked for an elegant way but could not find
one. Eventually I noticed that "net view" worked, so I figured I can
parse its output.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Shared resources at \\SERVER



Share name            Type   Used as  Comment

-------------------------------------------------------------------------------
Files                 Disk
Lexmark C772 PS (MS)  Print           Lexmark C772 PS (MS)
Lexmark E360dn (MS)   Print           Lexmark E360dn (MS)
NETLOGON              Disk            Logon server share
SYSVOL                Disk            Logon server share
The command completed successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, some cleanup is required.&lt;br&gt;
I started with skipping the first seven rows to remove the fancy
header.&lt;br&gt;
Then I filtered only rows that contain &lt;code&gt;disk&lt;/code&gt; with spaces before and at
least 5 after (even though there are no Print shares on the Filer
anyway).&lt;br&gt;
Finally, I used a regex trick (&lt;code&gt;-match&lt;/code&gt;ing to &lt;code&gt;out-null&lt;/code&gt; and extracting
members of &lt;code&gt;$matches&lt;/code&gt;) to extract the Share name from each line.&lt;br&gt;
This resulted in:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SERVERNAME&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="p"&gt;\\&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-s&lt;/span&gt; &lt;span class="n"&gt;7&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;disk\s{5,}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^(.+?)\s+Disk\s{5,}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Permission Settings&lt;/h3&gt;
&lt;p&gt;This part is pretty unadventurous, although it's the one most prominent
to fail (due to access denied errors etc.).&lt;br&gt;
I firstly created an array of ACEs (Access Control Entries) I wanted to
add:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemAccessRule&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DOMAIN\Filer Admins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FullControl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ContainerInherit,ObjectInherit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemAccessRule&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DOMAIN\Filer Readers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Read&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ContainerInherit,ObjectInherit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After this, it's all about enumerating the shares and adding the ACEs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$server\$_&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt;
 &lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
 &lt;span class="nb"&gt;set-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that's it.&lt;/p&gt;
&lt;h3&gt;Decorations&lt;/h3&gt;
&lt;p&gt;Because I wanted to add error handling and basic reporting, I added to
the &lt;code&gt;foreach&lt;/code&gt; block:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; blocks&lt;/li&gt;
&lt;li&gt;Generation of a small report object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thusly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$server\$_&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;$err&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt;
 &lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
 &lt;span class="nb"&gt;set-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$err&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="n"&gt;5&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$share&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-gridview&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that's it.&lt;br&gt;
The whole script looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SERVERNAME&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Get all shares&lt;/span&gt;
&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="p"&gt;\\&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-s&lt;/span&gt; &lt;span class="n"&gt;7&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;disk\s{5,}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^(.+?)\s+Disk\s{5,}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$matches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;

&lt;span class="c"&gt;# Prepare new ACEs&lt;/span&gt;
&lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemAccessRule&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DOMAIN\Filer Admins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FullControl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ContainerInherit,ObjectInherit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemAccessRule&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DOMAIN\Filer Readers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Read&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ContainerInherit,ObjectInherit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Add ACEs to share ACLs&lt;/span&gt;
&lt;span class="nv"&gt;$rawShares&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\$server\$_&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;$err&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt;
 &lt;span class="nv"&gt;$aces&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
 &lt;span class="nb"&gt;set-acl&lt;/span&gt; &lt;span class="nv"&gt;$share&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nv"&gt;$err&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="n"&gt;5&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$share&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
 &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-gridview&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="NetApp"></category><category term="FileSystem"></category><category term="PowerShell"></category></entry><entry><title>Copying List Permissions in SharePoint 2010</title><link href="https://blog.backslasher.net/copying-list-permissions-in-sharepoint.html" rel="alternate"></link><published>2013-01-05T17:31:00+01:00</published><updated>2013-01-05T17:31:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-01-05:/copying-list-permissions-in-sharepoint.html</id><summary type="html">&lt;p&gt;I just wrote a small script to copy permissions from one SharePoint list to the other.  &lt;/p&gt;
&lt;h3&gt;Things to consider&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Custom permission levels are not preserved:&lt;/strong&gt; For some reason, my method of copying permissions isn't custom-permission-level friendly. The customized permissions will still be copied, but an auto-generated permission level will be …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I just wrote a small script to copy permissions from one SharePoint list to the other.  &lt;/p&gt;
&lt;h3&gt;Things to consider&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Custom permission levels are not preserved:&lt;/strong&gt; For some reason, my method of copying permissions isn't custom-permission-level friendly. The customized permissions will still be copied, but an auto-generated permission level will be used.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Only same-web list tested:&lt;/strong&gt; I only tested copying permissions between two lists in the same web (site). If you tweak the script to work on lists from different sites, make sure to test it first!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Script&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="nv"&gt;$webAddress&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://server/site/url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$sourceTitle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SourceListTitle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$destTitle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DestinationListTitle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c"&gt;# Reset permissions on child objects (items)?&lt;/span&gt;
    &lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$resetChildObjects&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$web&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-spweb&lt;/span&gt; &lt;span class="nv"&gt;$webAddress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$srcList&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$web&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$sourceTitle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;$dstList&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$web&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$destTitle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$srcList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Permissions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Inherited&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$dstList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResetRoleInheritance&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$dstList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BreakRoleInheritance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$resetChildObjects&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;$srcList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Permissions&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="nv"&gt;$dstList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Permissions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Member&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PermissionMask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$dstList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="PowerShell"></category></entry><entry><title>Finding WSUS Clients by SusClientId</title><link href="https://blog.backslasher.net/finding-wsus-clients-by-susclientid.html" rel="alternate"></link><published>2013-01-02T11:41:00+01:00</published><updated>2013-01-02T11:41:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2013-01-02:/finding-wsus-clients-by-susclientid.html</id><summary type="html">&lt;p&gt;Today someone showed me a strange problem - he had servers that recently
installed new updates from his WSUS server, but he couldn't find them in
the WSUS console by their name.&lt;br&gt;
Obviously the servers have been renamed and didn't have time to report
to the WSUS server, but he wanted …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today someone showed me a strange problem - he had servers that recently
installed new updates from his WSUS server, but he couldn't find them in
the WSUS console by their name.&lt;br&gt;
Obviously the servers have been renamed and didn't have time to report
to the WSUS server, but he wanted to find the client entry in WSUS
nevertheless.&lt;br&gt;
I wrote him a small script that finds the client's &lt;code&gt;SusClientId&lt;/code&gt; (which is
a self-generated guid that is used to identify the client in the WSUS
server), searches for that entry in the WSUS server and retrives the
name (so you can go back to messing with the WSUS console).&lt;br&gt;
One interesting thing to note about this script - all of the WSUS server
connection data is compacted into a uri. I find it much easier than to
specify a server name, port number and whether to use https. Also, it's
built around Windows Server 2012's module, so it won't work "as is" on
Windows Server 2008R2.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="nv"&gt;$wsusUri&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://WSUS-Server:443&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$ComputerName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;OtherServer&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$wsus&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-WsusServer&lt;/span&gt; &lt;span class="nv"&gt;$wsusUri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Host&lt;/span&gt; &lt;span class="n"&gt;-PortNumber&lt;/span&gt; &lt;span class="nv"&gt;$wsusUri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Port&lt;/span&gt; &lt;span class="n"&gt;-UseSsl&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wsusUri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scheme&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$baseKey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[Microsoft.Win32.RegistryKey]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OpenRemoteBaseKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LocalMachine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$ComputerName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$baseKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OpenSubKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SusClientId&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$wsus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetComputerTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;FullDomainName&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="WSUS"></category><category term="Registry"></category></entry><entry><title>Reverse Lookup in SharePoint 2010</title><link href="https://blog.backslasher.net/reverse-lookup-in-sharepoint-2010.html" rel="alternate"></link><published>2012-12-29T15:34:00+01:00</published><updated>2012-12-29T15:34:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-12-29:/reverse-lookup-in-sharepoint-2010.html</id><summary type="html">&lt;p&gt;Every SharePoint noob knows that one can create list lookup
relationships, like specifying that a book belongs in a specific
bookshelf.&lt;br&gt;
What I didn't know until today is SharePoint 2010 supports "reverse
lookup" out of the box!&lt;/p&gt;
&lt;h3&gt;What's Lookup?&lt;/h3&gt;
&lt;p&gt;Consider this.You have 2 lists in your SharePoint site - one …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Every SharePoint noob knows that one can create list lookup
relationships, like specifying that a book belongs in a specific
bookshelf.&lt;br&gt;
What I didn't know until today is SharePoint 2010 supports "reverse
lookup" out of the box!&lt;/p&gt;
&lt;h3&gt;What's Lookup?&lt;/h3&gt;
&lt;p&gt;Consider this.You have 2 lists in your SharePoint site - one that
contains books, and one that contains bookshelves:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup1.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup2.png"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;You now create a lookup column in the "Books" list that contains the
bookshelf that the book belongs to. That's easy:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup3.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup4.png"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;And now you can easily see where every book belongs to, and you have
nice options such as "data integrity enforcement" (not allowing books to
remain in a deleted bookshelf) and "linked columns" (adding additional
bookshelf-related data to the book list based on the relevant
bookshelf)&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup5.png"&gt;  &lt;/p&gt;
&lt;h3&gt;What's &lt;strong&gt;reverse&lt;/strong&gt; Lookup?&lt;/h3&gt;
&lt;p&gt;After you finisehd writing your library contents into SharePoint, you
want to see all of the books belonging to each bookshelf.&lt;br&gt;
A tried and true idea is to filter the book list using the bookshelf
column, like this:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup6.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup7.png"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Which is fine, but very troublesome. I wanted the exact opposite of
lookup - the ability to view from every bookshelf item the matching
books!&lt;/p&gt;
&lt;h3&gt;My original idea&lt;/h3&gt;
&lt;p&gt;My original plan was to create a custom field type that contains no data
and has a list-viewing webpart in its display mode that shows the
referencing items from the child list (the book list in our case). I was
halfway done when I thought about how to call my blog post, and decided
to Google that before making any further progress.&lt;br&gt;
For the curious ones, I was trying to find out how to add field
parameters (such as "allow multiple selections") for my custom field.  &lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;I stumbled upon some articles announcing that such a thing exists in
SharePoint 2010 OOTB but didn't mention where it's located. So I started
exploring, and found it! It's called "Related List" under "Insert". For
our example, I'll add a webpart showing the books contained in the shelf
in the shelf list's item display form:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup8.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup9.png"&gt;&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup10.png"&gt;&lt;br&gt;
You can now customize the webpart in any normal way, and the best thing
- it's not  breaking the form in any way (you can still customize field
display etc. thorough the setting pages).&lt;br&gt;
The end result looks like that:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/reverse-lookup-in-sharepoint-2010/RLookup11.png"&gt;  &lt;/p&gt;
&lt;p&gt;Enjoy your 2-way lookup!&lt;/p&gt;
&lt;/p&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="SharePoint"></category><category term="Office"></category></entry><entry><title>Making Sure Only Your PDC is Scavanging DNS Records</title><link href="https://blog.backslasher.net/making-sure-only-your-pdc-is-scavanging.html" rel="alternate"></link><published>2012-12-18T17:25:00+01:00</published><updated>2012-12-18T17:25:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-12-18:/making-sure-only-your-pdc-is-scavanging.html</id><summary type="html">&lt;p&gt;I recently looked over out DNS server settings, and I found out that
more than one DNS server (DC in our case) was scavenging records.&lt;br&gt;
In order to put that right, I made a small script that makes sure that
only the PDC is scavenging records:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="nv"&gt;$scavengeInterval&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;7&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;Get-ADDomainController …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I recently looked over out DNS server settings, and I found out that
more than one DNS server (DC in our case) was scavenging records.&lt;br&gt;
In order to put that right, I made a small script that makes sure that
only the PDC is scavenging records:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="nv"&gt;$scavengeInterval&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;7&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;Get-ADDomainController&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;MicrosoftDNS_Server&lt;/span&gt; &lt;span class="n"&gt;-Namespace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root\microsoftdns&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-comp&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OperationMasterRoles&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;PDCEmulator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ScavengingInterval&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$scavengeInterval&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ScavengingInterval&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="DNS"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Brute Force Guessing for User Passwords</title><link href="https://blog.backslasher.net/brute-force-guessing-for-user-passwords.html" rel="alternate"></link><published>2012-12-16T17:26:00+01:00</published><updated>2012-12-16T17:26:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-12-16:/brute-force-guessing-for-user-passwords.html</id><summary type="html">&lt;p&gt;Our security team complained to me that they found a lot of users with trivial passwords simply by trying to log in as them.&lt;br&gt;
They asked me to write them a script to speed up the process, so I wrote them my brute force guessing script.&lt;br&gt;
It's not very stealthy …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Our security team complained to me that they found a lot of users with trivial passwords simply by trying to log in as them.&lt;br&gt;
They asked me to write them a script to speed up the process, so I wrote them my brute force guessing script.&lt;br&gt;
It's not very stealthy, as it's doing multiple authentication attempts against the Domain Controller (and unlocks the user in between).&lt;br&gt;
It's basically designed for domain admins wishing to search for one or two particular passwords on their domain without bothering to analyze the &lt;code&gt;ntds.dit&lt;/code&gt; file.&lt;br&gt;
It can optionally re-lock users it unlocked during testing (if you don't want to disturb anything...)&lt;br&gt;
The parameters are simple - the users and passwords you wish to test and the relock parameters (whether to relock and how many times a wrong password should be attempted to lock a user).  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[string[]&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$passwords&lt;/span&gt;&lt;span class="p"&gt;=(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Password1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Password2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$reLock&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$lockRepeats&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;3&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;test-UserPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$userName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$Password&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$locked&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ADUser&lt;/span&gt; &lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;LockedOut&lt;/span&gt; &lt;span class="n"&gt;-errorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;LockedOut&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$locked&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Unlock-AdAccount&lt;/span&gt; &lt;span class="nv"&gt;$userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;directoryServices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DirectoryEntry&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$userName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$users&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Get-ADUser&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;LockedOut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;canonicalName&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="k"&gt;Continue&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;samAccountName&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Debug&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Working on user $userName&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$matchPass&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$passwords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$matchPass&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;++)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$passwords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Debug&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Testing user $userName : $password&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;$passOk&lt;/span&gt;  &lt;span class="nb"&gt;test-UserPassword&lt;/span&gt; &lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="nv"&gt;$password&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$passOk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;Write-Debug&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found $userName : $password&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;$matchPass&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$reLock&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LockedOut&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;# Relock the user&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$lockRepeats&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;++){&lt;/span&gt;&lt;span class="nb"&gt;test-UserPassword&lt;/span&gt; &lt;span class="nv"&gt;$userName&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;SamAccountName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;canonicalName&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OriginallyLocked&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LockedOut&lt;/span&gt;&lt;span class="p"&gt;}},@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MatchingPassword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$matchPass&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy your brute forcing!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Automaticlly Updating DNS Server Addresses In A Domain Machine</title><link href="https://blog.backslasher.net/automaticlly-updating-dns-server.html" rel="alternate"></link><published>2012-10-06T20:50:00+02:00</published><updated>2012-10-06T20:50:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-10-06:/automaticlly-updating-dns-server.html</id><summary type="html">&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;I was recently requested to make sure that our machine's network interface cards (NICs) have their DNS queries pointed to "the correct servers".&lt;br&gt;
I decided that every machine should point to its domain's DNS servers, and it's their job to redirect queries (if needed) to other DNS servers …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;I was recently requested to make sure that our machine's network interface cards (NICs) have their DNS queries pointed to "the correct servers".&lt;br&gt;
I decided that every machine should point to its domain's DNS servers, and it's their job to redirect queries (if needed) to other DNS servers. Of course there are exceptions, but it seems like a good solution.&lt;br&gt;
In most companies, the domain controllers are the domain DNS servers, but some domain controllers may not be DNS servers, and some setups might be using other servers (like a secondary, read-only server for backup) to answer domain queries.&lt;br&gt;
So if you're going to implement my solution, you need to think about what are "the correct servers" in your case.&lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;The solution to "the correct servers" I found is to query for A records for the domain name itself.&lt;br&gt;
DCs make sure to register their own records there, and if a sysadmin wants to add another DNS server, he only has to create an A record with the domain name pointing to its IP.&lt;br&gt;
Ideally, I would have queried for the NameServer records of the domain (&lt;code&gt;NS&lt;/code&gt; type), since it's actually equivalent to asking the DNS servers "who can answer
queries on this domain?" but it wasn't so easy, because my 3 options for querying are:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Using&lt;/strong&gt; &lt;code&gt;[System.Net.Dns]::GetHostAddresses&lt;/code&gt;:&lt;br&gt;
    Sadly, only &lt;code&gt;A&lt;/code&gt;-type records are supported, which means I won't be able to query for &lt;code&gt;NS&lt;/code&gt; records&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Using&lt;/strong&gt; &lt;code&gt;Add-Type&lt;/code&gt; &lt;strong&gt;to compile C# code that uses&lt;/strong&gt; &lt;code&gt;DLLImport&lt;/code&gt; &lt;strong&gt;on&lt;/strong&gt; &lt;code&gt;dnsapi.dll&lt;/code&gt;&lt;strong&gt;, creates a wrapper function and call that function from
    PowerShell&lt;/strong&gt;:&lt;br&gt;
    It creates a hard-to-maintain script that throws win32 errors when fails (rather that simple .net exceptions) and can stop working on the next version of Windows&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Calling&lt;/strong&gt; &lt;code&gt;NSLookup&lt;/code&gt; &lt;strong&gt;and parsing the results&lt;/strong&gt;:&lt;br&gt;
    NSLookup's output isn't easy to read as a human - I have no intention to start explaining to a machine how to parse it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And so I ended up using the first method, because I figured that it's not that much of a crime, since I'm still getting my information from a domain-global location.&lt;/p&gt;
&lt;h3&gt;The Logic&lt;/h3&gt;
&lt;p&gt;The script itself is pretty short, and works only on the local machine (since I'm planning to use SCCM or something similar to invoke it on all of my machines):  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The machine's domain is determined&lt;/li&gt;
&lt;li&gt;All NICs with IP enabled (i.e. that are actually used) are being queried through WMI&lt;/li&gt;
&lt;li&gt;All IP addresses are collected from the NICs&lt;/li&gt;
&lt;li&gt;All NICs that "belong" to the domain (have the domain name as a DNS search suffix, thus filtering non-domain NICs, like internet-facing
    or iSCSI ones) are being collected&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt;-type records of the machine's domain are being queried, excluding
    ones that are matching the machine's IP addresses (if such record is
    found, the machine is a DNS server itself)&lt;/li&gt;
&lt;li&gt;If the machine is a DNS server (as found in step 5), the address
    &lt;code&gt;127.0.0.1&lt;/code&gt; is added to the top of the list, to make sure it tries
    querying itself first&lt;/li&gt;
&lt;li&gt;The generated DNS list is being written into every domain-related
    NIC&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;The Code&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$compDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[DirectoryServices.ActiveDirectory.Domain]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetCurrentDomain&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;
&lt;span class="nv"&gt;$nics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;win32_networkAdapterConfiguration&lt;/span&gt; &lt;span class="n"&gt;-filter&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IPEnabled=True&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$ipAddresses&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$nics&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;IPAddress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$dnsNics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$nics&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DNSDomainSuffixSearchOrder&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="nv"&gt;$compDomain&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DNSServerSearchOrder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$isDNSServer&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;$dnsAddresses&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="no"&gt;[net.dns]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetHostAddresses&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$compDomain&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;IPAddressToString&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ipAddresses&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nv"&gt;$isDNSServer&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$isDNSServer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$dnsAddresses&lt;/span&gt; &lt;span class="p"&gt;=@(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="nv"&gt;$dnsAddresses&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$dnsNics&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetDNSServerSearchOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$dnsAddresses&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Have fun resolving!&lt;/p&gt;</content><category term="Microsoft"></category><category term="DNS"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Applying SPWebConfigModification objects safely</title><link href="https://blog.backslasher.net/applying-spwebconfigmodification-objects-safely.html" rel="alternate"></link><published>2012-10-04T15:38:00+02:00</published><updated>2012-10-04T15:38:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-10-04:/applying-spwebconfigmodification-objects-safely.html</id><summary type="html">&lt;p&gt;My SharePoint team and I wanted to move to &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.administration.spwebconfigmodification.aspx"&gt;SPWebConfigModification&lt;/a&gt; rather that just modifying the web.config file manually, but I was always worried that applying faulty modifications will ruin my file.&lt;br&gt;
Why?&lt;/p&gt;
&lt;h3&gt;How SPWebConfigModification objects work&lt;/h3&gt;
&lt;p&gt;Some code requires you to modify the SharePoint web application's &lt;code&gt;web.config&lt;/code&gt; file …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My SharePoint team and I wanted to move to &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.administration.spwebconfigmodification.aspx"&gt;SPWebConfigModification&lt;/a&gt; rather that just modifying the web.config file manually, but I was always worried that applying faulty modifications will ruin my file.&lt;br&gt;
Why?&lt;/p&gt;
&lt;h3&gt;How SPWebConfigModification objects work&lt;/h3&gt;
&lt;p&gt;Some code requires you to modify the SharePoint web application's &lt;code&gt;web.config&lt;/code&gt; file.&lt;br&gt;
SharePoint handles some modifications automatically, such as &lt;code&gt;SafeControl&lt;/code&gt; entries for controls deployed via WSPs. But you might want to add an SQL connection string, or some custom HTTP modules (axd files).&lt;br&gt;
You can obviously change the web.config files manually, but:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's easy to lose track of your modifications&lt;/li&gt;
&lt;li&gt;Every new server's config has to be updated manually&lt;/li&gt;
&lt;li&gt;You could get inconsistent config files between your servers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Microsoft's solution - &lt;code&gt;SPWebConfigModification&lt;/code&gt;! These objects are stored
inside the SPWebApplication, and every one of them represents a single
modification to its parent's web.config file. It has four important
properties:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;:&lt;br&gt;
    What type of modification is defined. It can be:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;EnsureChildNode&lt;/strong&gt;: Adds an element as a child to the specified parent, e.g. &lt;code&gt;&amp;lt;parent&amp;gt;&amp;lt;bla blu="bli"&amp;gt;&amp;lt;/parent&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EnsureAttribute&lt;/strong&gt;: Adds an attribute to the parent (e.g. &lt;code&gt;&amp;lt;parent blu="bli"&amp;gt;&lt;/code&gt;). The attribute can already exist, in which case its value is modified&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EnsureSection&lt;/strong&gt;: Adds a section as a child to the specified parent. A "section" is an empty element, and removing the &lt;code&gt;SPWebConfigModification&lt;/code&gt; won't remove the element, so I don't use it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Path&lt;/strong&gt;:&lt;br&gt;
  An XPath expression pointing the modification's parent.&lt;br&gt;
  Used only when removing the modification&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;:&lt;br&gt;
  The name of the modification.&lt;br&gt;
  If the type is &lt;code&gt;EnsureChildNode&lt;/code&gt;, it's an XPath executed on the parent and used to locate the node when it needs to be removed.&lt;br&gt;
  If the type is &lt;code&gt;EnsureAttribute&lt;/code&gt;, it's simply the attribute's name.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value&lt;/strong&gt;:&lt;br&gt;
  The actual modification. If it's an &lt;code&gt;EnsureChildNode&lt;/code&gt;, it's the entire node (&lt;code&gt;&amp;lt;item attribute="value"&amp;gt;&amp;lt;stuff&amp;gt;&amp;lt;/item&amp;gt;&lt;/code&gt;)&lt;br&gt;
  If its type is &lt;code&gt;EnsureAttribute&lt;/code&gt;, it's simply the attribute's value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many complaints about &lt;code&gt;SPWebConfigModifications&lt;/code&gt; that can be easily found by googling (binging?) "SPWebConfigModifications", but my biggest problem with it was that it was simply unsafe to use - SharePoint offers no validation for these objects.&lt;br&gt;
You may find yourself with modifications that weren't applied due to a missing parent, or modifications that won't be deleted from the web.config because the name isn't written correctly (the XPath returns nothing, or the wrong node), and without SharePoint admitting that the modifications failed to execute.&lt;br&gt;
After some research, I built this script.&lt;br&gt;
Using this script will help make sure your SPWebConfigModifications won't break, either now or during their removal. You can even use a blank CSV to validate your current modifications!  &lt;/p&gt;
&lt;h3&gt;The inner workings&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Apply-WebConfigModifications&lt;/code&gt; applies web.config modifications (duh) from
a csv file thusly:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Finds all relevant SPWebApplications&lt;/li&gt;
&lt;li&gt;For every one, loads a CSV file containing all of the web modifications
required on the web application&lt;/li&gt;
&lt;li&gt;Fetches all existing web modifications from the web application&lt;/li&gt;
&lt;li&gt;Creates an action list, classifying each modification as either &lt;code&gt;add&lt;/code&gt;,
&lt;code&gt;delete&lt;/code&gt; or &lt;code&gt;unchanged&lt;/code&gt; (instead of updating it deletes and adds the
modification again, probably safer)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Loads the local web.config, and simulates the web modification process,
making sure for each modification:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If the modification should be added, that no element matching the path/name XPath already exists, and that after adding the element, a single element matching the XPath exists.&lt;/li&gt;
&lt;li&gt;If it should be deleted / unchanged, that a single element matching the path/name exists.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It also actually performs those actions (without saving the file, obviously), and makes sure that there are no clashing modifications (for example, that an element that's about to be removed isn't used by a new element).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The user gets a report of every modification and its errors, and if the
user approves, the web modifications are actually updated in the
SharePoint farm (removals first, additions later)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;A mutex (added to the SPFarm's property bag) is used to make sure that
only one script runs at a time.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Additional features:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Interactive mode - can be disabled when executing using a scheduled
    task or another non-interactive way, which then applies the
    modifications if there are no errors, and aborts if there are&lt;/li&gt;
&lt;li&gt;Force, which applies the modifications even if there are errors&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Parameters:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WebAppUrls&lt;/code&gt;: An array of urls, names or port numbers (e.g. '80')
    that need their WebConfigModifications updated. Each webapp will
    need to have a matching file in the source directory called
    WebWEBAPPNAME.csv&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SourceDir&lt;/code&gt;: The directory containing the CSV files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Interactive&lt;/code&gt;: Ask the user whether to continue if there are simulation errors (or
    automatically abort instead)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;testInternaly&lt;/code&gt;: Simulate changes to the web.config before
    actually applying the modifications&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whatIf&lt;/code&gt;: Don't actually apply the modifications&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Force&lt;/code&gt;: Ignore simulation errors and apply anyway&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ShowUnchanged&lt;/code&gt;: Report unchanged values to the console (rather than just
    the changed ones)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UseMutex&lt;/code&gt;: Use the mutex system&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MutexPhrase&lt;/code&gt;: The PropertyBag key used for the mutex&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ModificationString&lt;/code&gt;: The owner of the new SPWebConfigModification
    objects&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Migrating to SPWebConfigModifications&lt;/h3&gt;
&lt;p&gt;Moving to WebConfigModifications is complicated for whoever is
responsible to maintain the web.config, and nerve-stretching for the
sysadmin. You have to make sure that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All modifications are tested in pre-production environments, in
    order to avoid last-moment changes in the file&lt;/li&gt;
&lt;li&gt;No one should be allowed to modify the web.config manually, or via
    means other than SPWebConfigModifications - even other programs or
    via the IIS console. Inconsistency can ruin the modifications, as
    they might be applied differently to different servers around your
    farm. You can try finding the modification that the software is
    supposed to do, and adding it in the csv.&lt;/li&gt;
&lt;li&gt;Each modification file is applied to a different web application -
    create multiple CSVs if needed&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Script&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$WebAppUrls&lt;/span&gt;&lt;span class="p"&gt;=@(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;80&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$SourceDir&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:\temp\Config\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$Interactive&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="c"&gt;#Tests&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$testInternaly&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[Switch]&lt;/span&gt;&lt;span class="nv"&gt;$whatIf&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[Switch]&lt;/span&gt;&lt;span class="nv"&gt;$Force&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$ShowUnchanged&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="c"&gt;#Mutex&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$UseMutex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OBAWebConfigModifications&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="c"&gt;#Modification&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$ModificationString&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OBA&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nb"&gt;gsnp &lt;/span&gt;&lt;span class="p"&gt;|?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sharepoint&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;asnp &lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sharepoint&lt;/span&gt;&lt;span class="p"&gt;*}&lt;/span&gt;
&lt;span class="c"&gt;#$ErrorActionPreference = &amp;#39;stop&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Wait-ConfigTimerJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Action&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$stop&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;diagnostics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stopwatch&lt;/span&gt;
    &lt;span class="nv"&gt;$stop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-SPTimerjob&lt;/span&gt; &lt;span class="n"&gt;job-webconfig-modification&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nv"&gt;$waitTime&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$stop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Elapsed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\.\d+$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Progress&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Applying Modifications - $webAppUrl - $Action&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Waiting for modification to finish for $waitTime&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-PercentComplete&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sec&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="n"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;Start-Sleep&lt;/span&gt; &lt;span class="n"&gt;-sec&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Get-NodeParent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$errorAction&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$parents&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No matching parent found&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$errorAction&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Too many parents found&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$errorAction&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$parents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Compare-Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt; &lt;span class="o"&gt;-ceq&lt;/span&gt; &lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-ceq&lt;/span&gt; &lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="o"&gt;-ceq&lt;/span&gt; &lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$n1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-ceq&lt;/span&gt; &lt;span class="nv"&gt;$n2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$UseMutex&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$whatIf&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="c"&gt;# Check mutex&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContainsKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;# Extract mutex&lt;/span&gt;
        &lt;span class="nv"&gt;$currentMutex&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-CSV&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="nv"&gt;$currentMutex&lt;/span&gt; &lt;span class="n"&gt;-WarningAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Inquire&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# Apply mutex&lt;/span&gt;
    &lt;span class="nv"&gt;$myMutex&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$pID&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
                            &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UserName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$env:Username&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
                            &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$env:ComputerName&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
                            &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;StartTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hh:mm:ss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ConvertTo-Csv&lt;/span&gt; &lt;span class="nv"&gt;$myMutex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;##START&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$webAppUrls&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;# Load config&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^\d+$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$candidates&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nb"&gt;Get-SPWebApplication&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{(&lt;/span&gt;&lt;span class="no"&gt;[uri]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$candidates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$candidates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$candidates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;&amp;lt;#Skip this port#&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;write-error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No single matching WebApp found&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-SPWebApplication&lt;/span&gt; &lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$configPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;join-path&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IisSettings&lt;/span&gt;&lt;span class="no"&gt;[[Microsoft.SharePoint.Administration.SPUrlZone]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;web.config&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[IO.File]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ReadAllText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$configPath&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c"&gt;# Find modificationsFile&lt;/span&gt;
    &lt;span class="nv"&gt;$modificationsFile&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;join-path&lt;/span&gt; &lt;span class="nv"&gt;$SourceDir&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Web&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt; &lt;span class="nv"&gt;$modificationsFile&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;write-error&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Excpected file &amp;#39;$modificationsFile&amp;#39; not found for $webAppUrl&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# Load modifications from file&lt;/span&gt;
    &lt;span class="nv"&gt;$newModifications&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nb"&gt;Import-Csv&lt;/span&gt; &lt;span class="nv"&gt;$modificationsFile&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="c"&gt;# Load current modifications&lt;/span&gt;
    &lt;span class="nv"&gt;$currentModifications&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebConfigModifications&lt;/span&gt;

    &lt;span class="c"&gt;# Create action list&lt;/span&gt;
        &lt;span class="c"&gt;# Remove entries found in currentModifications but not in newModifications&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@();&lt;/span&gt;
        &lt;span class="nv"&gt;$currentModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$cur&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$newModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;Compare-node&lt;/span&gt; &lt;span class="nv"&gt;$cur&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;})}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="c"&gt;#$objNew = new-object object;&lt;/span&gt;
        &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WebApp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Action&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Remove&amp;#39;&lt;/span&gt;
        &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Err&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$objNew&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;# Add entries found in newModifications but not in currentModifications&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$newModifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;   
            &lt;span class="nv"&gt;$newModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$new&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;!(&lt;/span&gt;&lt;span class="nv"&gt;$currentModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;Compare-node&lt;/span&gt; &lt;span class="nv"&gt;$new&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;})}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="c"&gt;#$objNew = new-object object;&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WebApp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Action&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Add&amp;#39;&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Err&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
            &lt;span class="nv"&gt;$actionList&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$objNew&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;# Mark entries found in both&lt;/span&gt;
        &lt;span class="nv"&gt;$currentModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$cur&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$newModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;Compare-node&lt;/span&gt; &lt;span class="nv"&gt;$cur&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;})}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WebApp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$webAppUrl&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Action&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unchanged&amp;#39;&lt;/span&gt;
            &lt;span class="nv"&gt;$objNew&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Err&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
            &lt;span class="nv"&gt;$actionList&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$objNew&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;# Simulate actions on $config&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$testInternaly&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c"&gt;# Remove nodes&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Remove&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-NodeParent&lt;/span&gt; &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Parent not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureAttribute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetNamedItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;#Fake remove, because has no effect#&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Attribute not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureChildNode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                        &lt;span class="nv"&gt;$items&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Child node not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Too many matching child nodes found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                            &lt;span class="c"&gt;# Remove item&lt;/span&gt;
                            &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RemoveChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;# Add nodes&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Add&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-NodeParent&lt;/span&gt; &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Parent not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureAttribute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c"&gt;# Adding has no effect&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureChildNode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                        &lt;span class="nv"&gt;$items&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;innerXml&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;
                            &lt;span class="c"&gt;# Make sure now node exists!&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Node was added, but was not found by name.&amp;#39;&lt;/span&gt;
                            &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Matching child node already exists&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;# Verify existing nodes&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unchanged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-NodeParent&lt;/span&gt; &lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Parent not found&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureAttribute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c"&gt;# Make sure attribute still exists&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetNamedItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                            &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Attribute is missing&amp;#39;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EnsureChildNode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                        &lt;span class="nv"&gt;$items&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Name not found&amp;#39;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                            &lt;span class="c"&gt;# Do nothing, success finding node&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Duplicate names detected&amp;#39;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Invalid type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;# Review results&lt;/span&gt;
    &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$ShowUnchanged&lt;/span&gt; &lt;span class="o"&gt;-or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unchanged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$ShowUnchanged&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nv"&gt;$hiddenCount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unchanged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;measure &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hiddenCount&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;There are $hiddenCount unchanged values hidden&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-WarningAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Continue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nv"&gt;$errorCount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(@(&lt;/span&gt;&lt;span class="nv"&gt;$ActionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Interactive&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;There are $errorCount errors during simulation. Proceed?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-WarningAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Inquire&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$errorCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$Force&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found $errorCount errors. Aborting&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found $errorCount errors. Carrying on because FORCE is specified&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c"&gt;# Do nothing, modifications will be applied&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;# Remove / Add SPWebConfigModifications&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$whatIf&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Whatif: applying changes&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;#Remove nodes&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$UseMutex&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="c"&gt;# Extract mutex&lt;/span&gt;
            &lt;span class="nv"&gt;$currentMutex&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-CSV&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$myMutex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="nv"&gt;$currentMutex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
                &lt;span class="nb"&gt;Write-Warning&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Wrong mutex is present :&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$currentMutex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-WarningAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Inquire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Remove&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c"&gt;#$removables = @($webApp.WebConfigModifications | ?{($_.Path -eq $Action.Path) -and ($_.Name -eq $Action.Name) -and ($_.Value -eq $Action.Value) -and ($_.Type.toString() -eq $Action.Type.toString())})&lt;/span&gt;
            &lt;span class="nv"&gt;$removables&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebConfigModifications&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nb"&gt;Compare-Node&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="nv"&gt;$Action&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$removables&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;write-error&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Could not find matching WebConfigModification&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Inquire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$removables&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebConfigModifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;#Apply&lt;/span&gt;
        &lt;span class="nv"&gt;$method&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[microsoft.Sharepoint.Administration.SPServiceCollection]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GetValue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;MakeGenericMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[Microsoft.Sharepoint.administration.SPWebService]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$service&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Farm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$webapp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;$service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplyWebConfigModifications&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="nb"&gt;Wait-ConfigTimerJob&lt;/span&gt; &lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Removing&amp;#39;&lt;/span&gt;

        &lt;span class="nv"&gt;$actionList&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Add&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Microsoft.SharePoint.Administration.SPWebConfigModification&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Type &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Type&lt;/span&gt;
            &lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Owner&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ModificationString&lt;/span&gt;
            &lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebConfigModifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$modification&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;#Apply&lt;/span&gt;
        &lt;span class="nv"&gt;$method&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[microsoft.Sharepoint.Administration.SPServiceCollection]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GetValue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;MakeGenericMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[Microsoft.Sharepoint.administration.SPWebService]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$service&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Farm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$webapp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;$service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplyWebConfigModifications&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="nb"&gt;Wait-ConfigTimerJob&lt;/span&gt; &lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Adding&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;##END&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$UseMutex&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-SPFarm&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$MutexPhrase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Happy Scripting!&lt;/p&gt;</content><category term="Microsoft"></category><category term="ASP.net"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="Web.Config"></category><category term="PowerShell"></category></entry><entry><title>Updating VMware discovery info in Active Directory</title><link href="https://blog.backslasher.net/updating-vmware-discovery-info-in-active-directory.html" rel="alternate"></link><published>2012-10-02T14:54:00+02:00</published><updated>2012-10-02T14:54:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-10-02:/updating-vmware-discovery-info-in-active-directory.html</id><summary type="html">&lt;p&gt;Recently I decided I want to store physical discovery data (name,
physical location, host if it's a VM) on the machine's account in Active
Directory, because we have a lot of machines and during a crisis we
sometimes forget where they are.&lt;br&gt;
I started with our VMware infrastructure, and decided …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I decided I want to store physical discovery data (name,
physical location, host if it's a VM) on the machine's account in Active
Directory, because we have a lot of machines and during a crisis we
sometimes forget where they are.&lt;br&gt;
I started with our VMware infrastructure, and decided to list 3 of the
VM's attributes in AD:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The VM name, since it's sometimes different from the OS name (a VM
    can be called "A" and contain a Windows OS called "B" in the domain)&lt;/li&gt;
&lt;li&gt;The current VMware host, because if the machine disappears we want
    to know where it was last seen&lt;/li&gt;
&lt;li&gt;The VM Uid - a pathlike expression containing the VM's and the
    cluster's unique identifiers, allowing the virtualization team to
    quickly find the VM in their datastore&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I decided to write them into one of the extension attributes - there
are10 such attributes set aside by AD for such tasks. I chose
&lt;code&gt;extensionAttribute3&lt;/code&gt;.&lt;br&gt;
The script finds all VMs in a given vSphere, and finds those whose OS is
in the same domain as the current user. For those VMs, it creates the
description string, searches for the AD computer account matching the
VM's OS name and updates its extension attribute.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nv"&gt;$viServer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;VSPHERE&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$myDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$env:USERDNSDOMAIN&lt;/span&gt;

&lt;span class="c"&gt;# VMWare init&lt;/span&gt;
&lt;span class="nb"&gt;gsnp &lt;/span&gt;&lt;span class="n"&gt;-reg&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMware.VimAutomation.Core&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMware.VimAutomation.License&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMware.DeployAutomation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMware.ImageBuilder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;asnp&lt;/span&gt;
&lt;span class="nb"&gt;Disconnect-VIServer&lt;/span&gt; &lt;span class="n"&gt;-Confirm&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;
&lt;span class="nb"&gt;Connect-VIServer&lt;/span&gt; &lt;span class="nv"&gt;$viServer&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;

&lt;span class="c"&gt;# AD init&lt;/span&gt;
&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;ActiveDirectory&lt;/span&gt;

&lt;span class="nb"&gt;Get-VM&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$vm&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="nv"&gt;$guest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-VMGuest&lt;/span&gt; &lt;span class="nv"&gt;$vm&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$vm&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;VMHost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Uid&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HostName&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$guest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HostName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$ret&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HostName&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$myDomain&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$descString&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VMWare: {1}/{0} | {2}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VMHost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Uid&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;HostName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;descString&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;descString&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$hostName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostName&lt;/span&gt;
 &lt;span class="nv"&gt;$comp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-ADComputer&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;dnsHostName&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$HostName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;-ErrorAction&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;continue&amp;#39;&lt;/span&gt;
 &lt;span class="nv"&gt;$descString&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;descString&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comp&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nb"&gt;set-ADComputer&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Add&lt;/span&gt; &lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extensionattribute3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$descString&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nv"&gt;$_&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="VMware"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Some Things I Didn't Know About People Picker</title><link href="https://blog.backslasher.net/some-things-i-didnt-know-about-people-picker.html" rel="alternate"></link><published>2012-09-27T19:20:00+02:00</published><updated>2012-09-27T19:20:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-09-27:/some-things-i-didnt-know-about-people-picker.html</id><summary type="html">&lt;p&gt;Recently I got to mess with SharePoint 2010's People Picker - a control
that emulates Windows' "Directory Object Picker", allowing the user to
select security principals  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Active Directory's People Picker:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/ActiveDirectoryObjectPickerDialog.gif"&gt;&lt;/li&gt;
&lt;li&gt;The SharePoint 2010 Variant:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/24-browse-for-users.jpg"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After the Devs asked me to customize it for them, I went rummaging
through the dark corners …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I got to mess with SharePoint 2010's People Picker - a control
that emulates Windows' "Directory Object Picker", allowing the user to
select security principals  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Active Directory's People Picker:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/ActiveDirectoryObjectPickerDialog.gif"&gt;&lt;/li&gt;
&lt;li&gt;The SharePoint 2010 Variant:&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/24-browse-for-users.jpg"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After the Devs asked me to customize it for them, I went rummaging
through the dark corners of the internet (pages 5+ on Google), and came
back with several facts that weren't included in the &lt;a href="http://technet.microsoft.com/en-us/library/gg602075.aspx"&gt;regular TechNet
documentation&lt;/a&gt;
and I think should have been:  &lt;/p&gt;
&lt;h3&gt;Changes can (and even should) be made from PowerShell&lt;/h3&gt;
&lt;p&gt;Although the official documentation states that there are no PowerShell
commands (as seen in the picture),&lt;br&gt;
&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/Capture.png"&gt;&lt;br&gt;
changes don't have to be made from the &lt;code&gt;stsadm&lt;/code&gt; utility.&lt;br&gt;
You can instead find the relevant &lt;code&gt;SPWebApplication&lt;/code&gt; object and use its
PeoplePickerSettings property to modify the PeoplePicker configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-SPWebApplication&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SharePoint - 80&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PeoplePickerSettings&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;SearchActiveDirectoryDomains                     : {}
ActiveDirectoryCustomQuery                       : 
ActiveDirectoryCustomFilter                      : 
OnlySearchWithinSiteCollection                   : False
PeopleEditorOnlyResolveWithinSiteCollection      : False
DistributionListSearchDomains                    : {}
ActiveDirectorySearchTimeout                     : 00:00:30
NoWindowsAccountsForNonWindowsAuthenticationMode : True
ServiceAccountDirectoryPaths                     : {}
ReferralChasingOption                            : None
ActiveDirectoryRestrictIsolatedNameLevel         : False
AllowLocalAccount                                : True
UpgradedPersistedProperties                      : {}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Just make sure that you update after modifying!   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$webApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Changes apply immediately&lt;/h3&gt;
&lt;p&gt;After making a change, there is no need for an application pool recycle
or even a page reload. You only need to press the search / check name
button again!  &lt;/p&gt;
&lt;h3&gt;People Picker always queries the external data source (e.g. Active Directory), unless specifically told not to&lt;/h3&gt;
&lt;p&gt;Unless told to limit external queries (see "Force People Picker to pick
only from users in the site collection" on TechNet), the People Picker
will always query the data source, even if you have a perfect match in
the local site's user collection. I think it's a good thing, but you can
always limit external queries using &lt;code&gt;ActiveDirectoryRestrictIsolatedNameLevel&lt;/code&gt; or &lt;code&gt;OnlySearchWithinSiteCollection&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;The Active Directory query differs between "Check Names" and "Browse"&lt;/h3&gt;
&lt;p&gt;There are two ways to search for users using the people picker - using
the "check names" button and using the "browse" dialog  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/some-things-i-didnt-know-about-people-picker/PP.png"&gt;&lt;/p&gt;
&lt;p&gt;According to the MS documentation, the queries sent to AD after clicking
each one are different, and search for different attributes in users.&lt;br&gt;
The "check names" command searches those attributes in users:&lt;br&gt;
&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;cn&lt;/code&gt;, &lt;code&gt;SamAccountName&lt;/code&gt;, &lt;code&gt;mail&lt;/code&gt;, &lt;code&gt;proxyAddresses&lt;/code&gt;&lt;br&gt;
The "browse" command &lt;strong&gt;additionally&lt;/strong&gt; searches the attribute &lt;code&gt;sn&lt;/code&gt; (last name).&lt;br&gt;
Both commands search the following attributes in groups:&lt;br&gt;
&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;cn&lt;/code&gt;, &lt;code&gt;samAccountName&lt;/code&gt;&lt;br&gt;
Sources:&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/dd357076%28v=prot.13%29.aspx"&gt;Active Directory: People Picker Browse Display
UI&lt;/a&gt;&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/en-us/library/dd303522%28v=prot.13%29.aspx"&gt;Active Directory: People Picker Check Name
UI&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;The Active Directory custom query can only add results&lt;/h3&gt;
&lt;p&gt;Any custom query added to the people picker through
&lt;code&gt;ActiveDirectoryCustomQuery&lt;/code&gt; is concatenated using an "or" sign (&lt;code&gt;|&lt;/code&gt;) to
its own query. The implication is that you should only add additional
attributes you want to search, and don't have to rewrite the original
query.  &lt;/p&gt;
&lt;h3&gt;In Active Directory mode, the User Profile Application is not queried&lt;/h3&gt;
&lt;p&gt;Even if you have a working UPA in the farm, it's not queried on AD mode.
The only places that matter are the current site (&lt;code&gt;SPWeb&lt;/code&gt;)'s local user
collection and the AD.  &lt;/p&gt;
&lt;p&gt;Enjoy picking some people!&lt;/p&gt;</content><category term="Microsoft"></category><category term="SharePoint"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Windows Event Collection</title><link href="https://blog.backslasher.net/windows-event-collection.html" rel="alternate"></link><published>2012-06-28T12:48:00+02:00</published><updated>2012-06-28T12:48:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-06-28:/windows-event-collection.html</id><summary type="html">&lt;p&gt;I've recently implemented an enterprise-wide solution of event
collection in our organization, using Windows' built-in mechanism called
the &lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb427443%28v=vs.85%29.aspx"&gt;Windows Event Collector.&lt;/a&gt;&lt;br&gt;
This mechanism allows you to collect events from computers running
Windows NT5+ (XP/Server 2003 and greater) into Windows NT6+
(Vista/Server 2008 and greater) machines. The only basic …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've recently implemented an enterprise-wide solution of event
collection in our organization, using Windows' built-in mechanism called
the &lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb427443%28v=vs.85%29.aspx"&gt;Windows Event Collector.&lt;/a&gt;&lt;br&gt;
This mechanism allows you to collect events from computers running
Windows NT5+ (XP/Server 2003 and greater) into Windows NT6+
(Vista/Server 2008 and greater) machines. The only basic rules are that
the source machine should have Winrm2 installed and running on it, and
the &lt;code&gt;Event Collector Service&lt;/code&gt; should be running on the collector machine.&lt;br&gt;
There are two methods available to complete this challenge - collector
initiated and source initiated:  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Collector Initiated&lt;/th&gt;
&lt;th&gt;Source Initiated&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Socket direction (for firewall rules)&lt;/td&gt;
&lt;td&gt;Collector --&amp;gt; Source&lt;/td&gt;
&lt;td&gt;Collector --&amp;gt; Source&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initiating machine&lt;/td&gt;
&lt;td&gt;Collector&lt;/td&gt;
&lt;td&gt;Source&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Authentication Type&lt;/td&gt;
&lt;td&gt;Kerberos&lt;/td&gt;
&lt;td&gt;Kerberos / Certificates&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Permissions used to access event log&lt;/td&gt;
&lt;td&gt;Configurable (&lt;code&gt;system&lt;/code&gt;/user)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;system&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bulk adding methods&lt;/td&gt;
&lt;td&gt;None (machines are added one by one)&lt;/td&gt;
&lt;td&gt;Active Directory Groups (and Group Policy)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Similarities&lt;/h3&gt;
&lt;p&gt;In both of the methods, some persistent open socket is created between
the collector and the source machine using WinRM (so it's firewall
friendly - one configurable port, standard HTTP messages), through which
events are transferred (as opposed to other mechanisms, which have one
machine polling another every now and then, creating a new socket during
every poll).&lt;br&gt;
The events are passing encrypted through the channel (standard WinRM
encryption, either via the Kerberos authentication or using an SSL
certificate), which makes it ideal for sensitive events (like security
ones).&lt;br&gt;
There can be several subscriptions to and from every server, each one
with its own configuration, including method, authentication, client
list and other settings (like heartbeat rate).  &lt;/p&gt;
&lt;h3&gt;Collector Initiated&lt;/h3&gt;
&lt;p&gt;When defining such a subscription, you instruct the collector to open a
WinRM session to the source machine(s) using a specified set of
credentials (or the computer account) and ask for a subscription. The
user doesn't have to be able to read all of the event logs, but can
rather be delegated access to a specific log that needs reading (the
&lt;code&gt;NETWORK SERVICE&lt;/code&gt; has to be able to read that log as well, since that's
the identity WinRM is operating with). Monitoring the connection
programmatically from the collector is quite easy, because events
related are written to the
&lt;code&gt;Microsoft-Windows-EventCollector/Operational&lt;/code&gt; log.  &lt;/p&gt;
&lt;h4&gt;Pros:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Easy to configure and test&lt;/li&gt;
&lt;li&gt;Easy to centrally programmatically monitor (only read collector's
    log)&lt;/li&gt;
&lt;li&gt;Collector doesn't necessarily gain access to all events in source
    machine, only ones allowed by permissions on source&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Source Initiated&lt;/h3&gt;
&lt;p&gt;Using this method requires one to dabble in Group Policy, because it
works by telling the source machine(s) "You should access server X and
offer it a subscription to your event logs at leisure".&lt;br&gt;
The only settings configured at the source level are the collector
endpoints (server name, authentication type, port etc) and the maximum
amount of events per second allowed to pass through subscriptions
(offering the most basic performance throttling on the source side). All
other configuration is performed on the collector machine.&lt;br&gt;
The Collector can be configured to allow certain sources in every
subscription. Such sources can be Kerberos-Authenticated, in which case
they can be filtered by Account or Active Directory group membership
(like allowing &lt;code&gt;Domain Computers&lt;/code&gt; but rejecting &lt;code&gt;Domain Controllers&lt;/code&gt;),
or Certificate-Authenticated, filtered by wildcard name-matching (e.g.
including all &lt;code&gt;*.domain.com&lt;/code&gt; and rejecting &lt;code&gt;*dc*.domain.com&lt;/code&gt;).   &lt;/p&gt;
&lt;h4&gt;Pros:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Can be configured on arrays of machines easily&lt;/li&gt;
&lt;li&gt;Can be used to collect events from machines from outside the domain&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Basic Configuration&lt;/h3&gt;
&lt;p&gt;In any case, one can use either the GUI (Event Viewer from the
collector) or the CLI (&lt;code&gt;WecUtil.exe&lt;/code&gt; on the collector) to create a
subscription and fine tune it, including (but not limited to) the rate
in which new events arrive, the allowed/denied computers, destination
log and event query (which events will get transferred). Current
information about the subscription can be viewed using both tools,
whether it's the &lt;code&gt;runtime status&lt;/code&gt; in the GUI or &lt;code&gt;wecutil rs&lt;/code&gt; in the
CLI. I will expand this post if I see fit. Event forwarding is not
trivial, but it allows a sysadmin to centralize events for all kinds of
reasons using tools included in the Windows OS and doing so in a
standard, performance-friendly and secure way.  &lt;/p&gt;
&lt;p&gt;Have fun forwarding!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Group Policy"></category><category term="Security"></category><category term="Event Log"></category><category term="Active Directory"></category></entry><entry><title>Installing WSUS Prerequisites Easily in a Disconnected Server</title><link href="https://blog.backslasher.net/installing-wsus-prerequisites-easily-in-a-disconnected-server.html" rel="alternate"></link><published>2012-04-27T08:08:00+02:00</published><updated>2012-04-27T08:08:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-27:/installing-wsus-prerequisites-easily-in-a-disconnected-server.html</id><summary type="html">&lt;p&gt;Our company has an internet-isolated environment, and I was requested to
create a WSUS infrastructure there.&lt;br&gt;
The most annoying thing about installing a disconnected WSUS server is
that you can't do it via the server manager (because it requires a
working internet connection) but rather through an exe file, and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Our company has an internet-isolated environment, and I was requested to
create a WSUS infrastructure there.&lt;br&gt;
The most annoying thing about installing a disconnected WSUS server is
that you can't do it via the server manager (because it requires a
working internet connection) but rather through an exe file, and that
file won't install the prerequisites, just complain that some of them
are missing (without informing you which ones), compared to the
automatic prerequisite installation of the server manager.&lt;br&gt;
Well, problem solved through the power of scripting!&lt;br&gt;
The following line of code will install all of WSUS's windows-related
components without actually installing WSUS through the &lt;code&gt;ServerManager&lt;/code&gt;
module:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;ServerManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;Get-WindowsFeature&lt;/span&gt; &lt;span class="n"&gt;OOB-WSUS&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;DependsOn&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-WindowsFeature&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="WSUS"></category></entry><entry><title>Automaticlly Extracting Downloaded Torrents</title><link href="https://blog.backslasher.net/automaticlly-extracting-downloaded-torrents.html" rel="alternate"></link><published>2012-04-14T20:17:00+02:00</published><updated>2012-04-14T20:17:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-14:/automaticlly-extracting-downloaded-torrents.html</id><summary type="html">&lt;p&gt;As every average geek, I too download torrents (containing only legal, copyright-free material, of course), and most of the time the torrents contain multi-file archives that contain the really juicy data.&lt;br&gt;
A lot of times I return home and find some new torrent has completed downloading, but I have to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As every average geek, I too download torrents (containing only legal, copyright-free material, of course), and most of the time the torrents contain multi-file archives that contain the really juicy data.&lt;br&gt;
A lot of times I return home and find some new torrent has completed downloading, but I have to manually extract the file and wait for &lt;strong&gt;THAT&lt;/strong&gt; to complete.&lt;br&gt;
Well, wait no more!&lt;br&gt;
Through µTorrent's "Run Program" setting (&lt;code&gt;Options&amp;gt;Preferences&amp;gt;Advanced&amp;gt;Run Program&lt;/code&gt;), I can execute any command line application I want whenever a torrent completes.&lt;br&gt;
Of course, I use it to execute a PowerShell Script :-D&lt;br&gt;
The actual line I put there is:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;powershell.exe -executionPolicy RemoteSigned -file  &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;%D&amp;quot; &amp;quot;%&lt;/span&gt;&lt;span class="s2"&gt;T&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;%N&amp;quot; &amp;quot;%&lt;/span&gt;&lt;span class="s2"&gt;L&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The extra tags at the end are used to pass data to the script - namely the torrent's incoming directory, primary tracker, title and primary label. I keep all of the parameters other than the directory for future use (for example, I may wish to send podcasts automatically into my Kindle-Mail some day).&lt;br&gt;
The script itself only extracts rar files using the &lt;strong&gt;GREAT&lt;/strong&gt; open-source archiver &lt;a href="http://www.7-zip.org/"&gt;7zip&lt;/a&gt; which has a command line
interface, and it goes like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Tracker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Label&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s2"&gt;&amp;quot;TorrentDir:&lt;/span&gt;&lt;span class="se"&gt;`t&lt;/span&gt;&lt;span class="s2"&gt; $TorrentDir&lt;/span&gt;
&lt;span class="s2"&gt;Tracker:&lt;/span&gt;&lt;span class="se"&gt;`t&lt;/span&gt;&lt;span class="s2"&gt; $Tracker&lt;/span&gt;
&lt;span class="s2"&gt;Title:&lt;/span&gt;&lt;span class="se"&gt;`t`t&lt;/span&gt;&lt;span class="s2"&gt; $Title&lt;/span&gt;
&lt;span class="s2"&gt;Label:&lt;/span&gt;&lt;span class="se"&gt;`t`t&lt;/span&gt;&lt;span class="s2"&gt; $Label&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Extract if torrent is composed entirely of rar files into smaller subfolder:&lt;/span&gt;
&lt;span class="c"&gt;# Check if directory has only rar&lt;/span&gt;
&lt;span class="nv"&gt;$rars&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\.r(ar|[0-9]{2})$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$leadRar&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\.rar$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$nonrars&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-notmatch&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^(Sample(s?)|.+\.r(ar|[0-9]{2})|.+\.sfv|.+\.nfo|folder.jpg)$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;((!(&lt;/span&gt;&lt;span class="nv"&gt;$nonrars&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="nv"&gt;$leadRar&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c"&gt;# Directory is release directory&lt;/span&gt;
    &lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Extracting&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$exDir&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;join-path&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$TorrentDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Extracted&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;fullname&lt;/span&gt;
    &lt;span class="nv"&gt;$res&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\Program Files\7-Zip\7z.exe&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-o&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$exDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$leadRar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-y&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$res&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Everything is Ok&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;All Good&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Failed: $res&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;Read-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Press the any key to continue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nothing here&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see that first it outputs all of the details acquired from µTorrent, checks if the incoming directory has only &lt;code&gt;.rar&lt;/code&gt; files (and secondary files, such as &lt;code&gt;.r01&lt;/code&gt;), ignoring sample directories, &lt;code&gt;.nfo&lt;/code&gt; files etc.&lt;br&gt;
If so, it tells 7zip to extract the primary &lt;code&gt;.rar&lt;/code&gt; file into a directory called &lt;code&gt;Extracted&lt;/code&gt;.&lt;br&gt;
Hope it helps!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="BitTorrent"></category><category term="PowerShell"></category></entry><entry><title>Remotely Viewing Machine Certificates With Minimal Permissions</title><link href="https://blog.backslasher.net/remotley-viewing-machine-certificates-with-minimal-permissions.html" rel="alternate"></link><published>2012-04-11T20:18:00+02:00</published><updated>2012-04-11T20:18:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-11:/remotley-viewing-machine-certificates-with-minimal-permissions.html</id><summary type="html">&lt;p&gt;We've started remotely monitoring our certificate stores on critical
servers, and wanted the monitoring software to be able to remotely
connect to our servers' personal certificate stores.&lt;br&gt;
I quickly found a script to enumerate all certificates in a specific
store on a remote computer:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Get-Cert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$computer&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$env:computername&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$ro …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;We've started remotely monitoring our certificate stores on critical
servers, and wanted the monitoring software to be able to remotely
connect to our servers' personal certificate stores.&lt;br&gt;
I quickly found a script to enumerate all certificates in a specific
store on a remote computer:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Get-Cert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$computer&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$env:computername&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$ro&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="no"&gt;[System.Security.Cryptography.X509Certificates.OpenFlags]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ReadOnly&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$lm&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="no"&gt;[System.Security.Cryptography.X509Certificates.StoreLocation]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;LocalMachine&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$store&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cryptography&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X509Certificates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X509Store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\\$computer\root&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$lm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Certificates&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, as long as the user was not an administrator, it got "access is denied" whenever it tried to open the store (&lt;code&gt;$store.Open&lt;/code&gt;).&lt;br&gt;
Since I don't want the monitoring software to have local admin rights on our servers (BAD habit), I tried troubleshooting the problem.&lt;br&gt;
I found out that the script works &lt;strong&gt;locally&lt;/strong&gt; for every user, so it must be some sort of a remoting issue.&lt;br&gt;
After two hours of troubleshooting I found the problem -
non-administrators, by default, can't execute remote queries against the registry, which is where certificates are stored by default (as told by ProcMon while querying locally).&lt;br&gt;
So after granting the monitoring software remote registry permissions, according to &lt;a href="http://support.microsoft.com/kb/314837"&gt;kb314837&lt;/a&gt;,
suddenly opening the remote store worked perfectly.&lt;br&gt;
I could rage about it not being documented anywhere, but if everything was properly documented my work will be really boring... Have fun remote-querying!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="PKI"></category><category term="Mysteries Solved"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Determining Size of all Tables in a Database</title><link href="https://blog.backslasher.net/determining-size-of-all-tables-in-a-database.html" rel="alternate"></link><published>2012-04-11T07:15:00+02:00</published><updated>2012-04-11T07:15:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-11:/determining-size-of-all-tables-in-a-database.html</id><summary type="html">&lt;p&gt;Just a quick SQL script to get the rowcount and size data of every table
in the current database:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="n"&gt;reserved&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;index_size&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;unused&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;DELCARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="k"&gt;CURSOR&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;from …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Just a quick SQL script to get the rowcount and size data of every table
in the current database:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="n"&gt;reserved&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;index_size&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;unused&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;DELCARE&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;DECLARE&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="k"&gt;CURSOR&lt;/span&gt; &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tables&lt;/span&gt;
&lt;span class="k"&gt;OPEN&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;
&lt;span class="k"&gt;FETCH&lt;/span&gt; &lt;span class="k"&gt;NEXT&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="n"&gt;WHILE&lt;/span&gt; &lt;span class="o"&gt;@@&lt;/span&gt;&lt;span class="n"&gt;FETCH_STATUS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="k"&gt;BEGIN&lt;/span&gt;
 &lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt; &lt;span class="k"&gt;EXEC&lt;/span&gt; &lt;span class="n"&gt;sp_spaceused&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
 &lt;span class="k"&gt;END&lt;/span&gt;
&lt;span class="k"&gt;CLOSE&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;
&lt;span class="k"&gt;DEALLOCATE&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt;
&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;sizeof&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="SQL"></category></entry><entry><title>Creating proxied http requests with PowerShell</title><link href="https://blog.backslasher.net/creating-proxied-http-requests-with-powershell.html" rel="alternate"></link><published>2012-04-09T21:45:00+02:00</published><updated>2012-04-09T21:45:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-04-09:/creating-proxied-http-requests-with-powershell.html</id><summary type="html">&lt;p&gt;I'm working on some sort of HTTP proxy (maybe more details about it later), and to test it I've created a short PowerShell script.&lt;br&gt;
Note it also performs basic authentication voluntarily (without waiting for a server challenge) by injecting an &lt;code&gt;Authorization&lt;/code&gt; header, because I was testing something extra special.&lt;br&gt;
I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm working on some sort of HTTP proxy (maybe more details about it later), and to test it I've created a short PowerShell script.&lt;br&gt;
Note it also performs basic authentication voluntarily (without waiting for a server challenge) by injecting an &lt;code&gt;Authorization&lt;/code&gt; header, because I was testing something extra special.&lt;br&gt;
I want to point out that I &lt;strong&gt;REALLY&lt;/strong&gt; liked the way http proxies are fed into &lt;code&gt;WebRequest&lt;/code&gt;s - it allows one to create "different" proxies by
appending paths and query-string data to the URI.&lt;br&gt;
Hope it will help someone out there.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://google.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$proxy&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://someHttpProxy.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$req&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[net.webrequest]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;#Prox&lt;/span&gt;
&lt;span class="nv"&gt;$prox&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebProxy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$prox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$proxy&lt;/span&gt;
&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Proxy&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$prox&lt;/span&gt;
&lt;span class="c"&gt;#Auth&lt;/span&gt;
&lt;span class="nv"&gt;$authInfo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$authInfo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[Convert]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ToBase64String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[Text.Encoding]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Ascii&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$authInfo&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Basic $authInfo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c"&gt;#Resp&lt;/span&gt;
&lt;span class="nv"&gt;$resp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetResponse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$stream&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;streamreader&lt;/span&gt; &lt;span class="nv"&gt;$resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetResponseStream&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$res&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readtoend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$res&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="HTTP"></category><category term="Scripts"></category><category term="Proxy"></category><category term="PowerShell"></category></entry><entry><title>Extending Yii's Web Application Creation</title><link href="https://blog.backslasher.net/extending-yiis-web-application-creation.html" rel="alternate"></link><published>2012-03-24T18:01:00+01:00</published><updated>2012-03-24T18:01:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-03-24:/extending-yiis-web-application-creation.html</id><summary type="html">&lt;p&gt;I found out that after creating my Yii Applications through &lt;code&gt;Yiic.bat&lt;/code&gt;, I tend to modify the same things in all of them (adding &lt;code&gt;.htaccess&lt;/code&gt; files for pretty urls (no &lt;code&gt;index.php&lt;/code&gt;), adding a reference for my custom modules directory, etc.), so I decided to try and override the WebApp …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I found out that after creating my Yii Applications through &lt;code&gt;Yiic.bat&lt;/code&gt;, I tend to modify the same things in all of them (adding &lt;code&gt;.htaccess&lt;/code&gt; files for pretty urls (no &lt;code&gt;index.php&lt;/code&gt;), adding a reference for my custom modules directory, etc.), so I decided to try and override the WebApp command with one of my own. There might be better methods, but it's also good practice.&lt;br&gt;
My steps were as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Copy the following files from the framework directory to a side
directory (which I named &lt;code&gt;myWebApp&lt;/code&gt;):&lt;code&gt;yiic&lt;/code&gt;,&lt;code&gt;yiic.bat&lt;/code&gt;,&lt;code&gt;yiic.php&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;In &lt;code&gt;yiic.php&lt;/code&gt;, modify &lt;code&gt;require_once&lt;/code&gt; to reference the actual location of &lt;code&gt;yii.php&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Create the following directories in the side directory:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cli/commands&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cli/views/webapp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Copy the file &lt;code&gt;cli/commands/WebAppCommand.php&lt;/code&gt; from the framework directory into your &lt;code&gt;cli/commands&lt;/code&gt; directory. Be sure to rename it. I
chose &lt;code&gt;myWebAppCommand.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open the copied file.&lt;/li&gt;
&lt;li&gt;Change the class name to match the file name. In my case - &lt;code&gt;MyWebAppCommand&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Change it to extend &lt;code&gt;WebAppCommand&lt;/code&gt;, in order to have access to the original application generation code.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Just before the class deceleration, manually import the original
WebAppCommand file (autoload won't find it) using the following statement:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nx"&gt;Yii&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;system.cli.commands.WebAppCommand&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modify the class to your liking. Sadly, the "UI" and the file copy logic are located at the same method (&lt;code&gt;run&lt;/code&gt;), so it's either copying the entire method to your clone, or missing out on the entire logic of the application. Assuming you "steal" the run method, you should do one of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Also copy the template web site, found at &lt;code&gt;cli/views/webapp&lt;/code&gt; to your side directory (at the same path!)&lt;/li&gt;
&lt;li&gt;Modify the line that tells Yii where to find the source files:&lt;br&gt;
  Instead of &lt;code&gt;$sourceDir=realpath(dirname(__FILE__).'/../views/webapp');&lt;/code&gt;&lt;br&gt;
  Use &lt;code&gt;$sourceDir=realpath(Yii::getPathOfAlias('system').'/cli/views/webapp');&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Further customize the file. The most common things to do:&lt;ul&gt;
&lt;li&gt;Copy additional files - Create your own webapp directory and copy it after copying the original one&lt;/li&gt;
&lt;li&gt;Add customization callback - copy one of the &lt;code&gt;generate\*&lt;/code&gt; methods and add appropriate callback in the &lt;code&gt;run&lt;/code&gt; method.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;</content><category term="FOSS"></category><category term="PHP"></category><category term="Yii"></category></entry><entry><title>Fixing Facebook to Google Calendar synchronization</title><link href="https://blog.backslasher.net/fixing-facebook-to-google-calendar.html" rel="alternate"></link><published>2012-03-24T17:39:00+01:00</published><updated>2012-03-24T17:39:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-03-24:/fixing-facebook-to-google-calendar.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It's fixed now. The project itself is still pretty cool&lt;/p&gt;
&lt;p&gt;I recently managed to sync my Facebook events to my Google Calendar (and
thusly to my Android phone). At first the task seemed simple, because
Facebook offers you a link to export your events in
&lt;a href="http://en.wikipedia.org/wiki/ICal"&gt;iCal&lt;/a&gt; format, but once …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It's fixed now. The project itself is still pretty cool&lt;/p&gt;
&lt;p&gt;I recently managed to sync my Facebook events to my Google Calendar (and
thusly to my Android phone). At first the task seemed simple, because
Facebook offers you a link to export your events in
&lt;a href="http://en.wikipedia.org/wiki/ICal"&gt;iCal&lt;/a&gt; format, but once imported to
Google Calendar all you can see from the events is a "busy/free" block,
like this  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/fixing-facebook-to-google-calendar/busycalendar.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Of course it won't do at all, as you want to be able to see all of the
event details!&lt;br&gt;
After some fiddling (with &lt;a href="http://fiddler2.com/"&gt;Fiddler&lt;/a&gt;) I saw that
the iCal events had a field called &lt;code&gt;CLASS&lt;/code&gt;, which was set to &lt;code&gt;PRIVATE&lt;/code&gt;
on all of my Facebook events.  &lt;/p&gt;
&lt;p&gt;Facebook is probably using that field to signify which events are public
and which are invite-only, like mine where.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/fixing-facebook-to-google-calendar/inviteOnly.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Google Calendar must be interpreting the &lt;code&gt;private&lt;/code&gt; as an event which is
sensitive and cannot be fully shown - only the "busy/free" field.&lt;/p&gt;
&lt;p&gt;I didn't have the intention to find which one is using this field
"correctly", but something had to be done. After editing the iCal with
notepad and modifying this field to &lt;code&gt;PUBLIC&lt;/code&gt;, the events showed up fine,
So I knew what I had to do.&lt;/p&gt;
&lt;p&gt;I created another Yii application called
"&lt;a href="http://apps.oneboredadmin.com/eventFix/"&gt;eventFix&lt;/a&gt;" that helps users
feed their Facebook events url and get a proxy url - one that goes
through my application which replaces all instances of &lt;code&gt;CLASS:PRIVATE&lt;/code&gt;
to &lt;code&gt;CLASS:PUBLIC&lt;/code&gt;. I'm using it already!&lt;/p&gt;
&lt;p&gt;If you're worried about me sniffing your precious events, I can probably
tell you that I don't really care / have the db space for that. But if
you're uncomfortable using this applications for that reason, don't.&lt;/p&gt;
&lt;p&gt;I'm sure other people have encountered the same problem and came up with
their own solutions, and I'm sure some of those are better than mine. I
don't care, I did it for the practice.&lt;/p&gt;
&lt;p&gt;Have fun syncing!&lt;/p&gt;</content><category term="Foss"></category><category term="Mysteries Solved"></category><category term="Facebook"></category><category term="iCal"></category><category term="Calendar"></category><category term="Yii"></category></entry><entry><title>Creating a common Yii code directory</title><link href="https://blog.backslasher.net/creating-common-yii-code-directory.html" rel="alternate"></link><published>2012-03-23T20:51:00+01:00</published><updated>2012-03-23T20:51:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-03-23:/creating-common-yii-code-directory.html</id><summary type="html">&lt;p&gt;Yii natively supports code recycling, by allowing you to store common code in modules, widgets etc.&lt;br&gt;
However, to share code between applications, you still have to copy the files from one application to another. Right? &lt;strong&gt;Wrong!&lt;/strong&gt;&lt;br&gt;
I recently created a common code directory (wittingly called "my-yii") where I store all …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yii natively supports code recycling, by allowing you to store common code in modules, widgets etc.&lt;br&gt;
However, to share code between applications, you still have to copy the files from one application to another. Right? &lt;strong&gt;Wrong!&lt;/strong&gt;&lt;br&gt;
I recently created a common code directory (wittingly called "my-yii") where I store all of my common code.&lt;br&gt;
To access it from other applications, I added the following line to the &lt;code&gt;index.php&lt;/code&gt; file (you should add it to your application's &lt;code&gt;yiic.php&lt;/code&gt; if relevant), just before the application creation:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nx"&gt;Yii&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;setPathOfAlias&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;my-yii&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/../my-yii&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you can use all of the code contained in your common directory, as
long as you append "my-yii" to the inclusion directory, thusly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nv"&gt;$mailer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Yii&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;createComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;my-yii.extensions.mailer.EMailer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="FOSS"></category><category term="PHP"></category><category term="Yii"></category></entry><entry><title>RssCache - An RSS Cache / Aggregator</title><link href="https://blog.backslasher.net/rsscache-rss-cache-aggregator.html" rel="alternate"></link><published>2012-02-12T19:28:00+01:00</published><updated>2012-02-12T19:28:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2012-02-12:/rsscache-rss-cache-aggregator.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I'm no longer using this site, and might take it down. Let me know if you want the code.  &lt;/p&gt;
&lt;p&gt;Recently I've decided that I want to use μTorrent's Feed ability to auto
download BitTorrent torrents, after I gave up on Miro (I moved my video
library and discovered that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I'm no longer using this site, and might take it down. Let me know if you want the code.  &lt;/p&gt;
&lt;p&gt;Recently I've decided that I want to use μTorrent's Feed ability to auto
download BitTorrent torrents, after I gave up on Miro (I moved my video
library and discovered that Miro couldn't take it, and to change that
setting without losing all of my preferences I would have to edit some
mini-db... ugh). This minor decision had some interesting effects.&lt;/p&gt;
&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;I'm a member of a certain torrent sharing site, and I tried feeding that
site's feed to uTrorrent.&lt;br&gt;
The problem I discovered - The feed was only showing the latest 100 items, and since a new torrent is uploaded every
10 mins or so, If I leave my client off for a day, some items are bound
to go undiscovered.&lt;br&gt;
I tried leaving my PC on at night, but I couldn't sleep. I considered moving my torrent-box to an "offsite" place (another room), but found it too complex.  &lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;Eventually, I came up with quite an elegant solution - Creating a small
PHP site (which I call RssCache) that'll consume the torrent site's
feed, save the items on its own db, and present the client with a bigger
feed.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;br&gt;
Today I've finished all of the UI using
&lt;a href="http://www.yiiframework.com/"&gt;YII&lt;/a&gt;! You're more than welcome to &lt;a href="http://apps.oneboredadmin.com/rssCache/"&gt;check it out&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;I chose a PHP/MySQL solution, because I have a nice hosting package at
dreamhost.com.&lt;br&gt;
My primary pages are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cron.php&lt;/strong&gt;: Triggered by a cron job (duh) and populates the database
  with the feed items  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Feed.php&lt;/strong&gt;: Given the right key, creates an RSS feed from the db and
presents it  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The coding itself isn't that impressive - it's a very small solution.&lt;br&gt;
However, there are some interesting points I've encountered and wish to
share with you:  &lt;/p&gt;
&lt;h4&gt;Purging items&lt;/h4&gt;
&lt;p&gt;I figured that although I want the list to be beefy, items will have to
die sometime. So I created a &lt;code&gt;created&lt;/code&gt; column and added a little
statement at the start of the cron script to purge the table from items
72 hours old.   &lt;/p&gt;
&lt;h4&gt;Storing feed items in the db&lt;/h4&gt;
&lt;p&gt;I initially started parsing the feed with
&lt;a href="http://magpierss.sourceforge.net/"&gt;MagpieRSS&lt;/a&gt;, but then thought about
what info to store in the db:&lt;br&gt;
&lt;strong&gt;If I use one table column for one item field&lt;/strong&gt;, I won't have room for extra/unexpected item data.&lt;br&gt;
&lt;strong&gt;If I serialize the PHP object&lt;/strong&gt;, I'd have to reconstruct it when I serve the feed.&lt;br&gt;
Eventually I decided to simply store the entire item's XML in
the db.  &lt;/p&gt;
&lt;h4&gt;Detecting duplicates&lt;/h4&gt;
&lt;p&gt;Storing feed items in the db is easy, but avoiding duplicate items is
quite difficult, especially because the RSS structure offers no id or
unique key.&lt;br&gt;
I started comparing rows based on the entire item xml, but
later found out that my particular torrent site changed the item's
description based on the seed/leech ratio, which made the item appear
twice.&lt;br&gt;
I thought about that for a while, and decided that item URLs are
supposed to be unique, so I created a &lt;code&gt;link&lt;/code&gt; column in the item table,
used solely to detect duplicates, combined with the item's parent (the
source feed).&lt;/p&gt;
&lt;h4&gt;Avoiding db-intensive operations&lt;/h4&gt;
&lt;p&gt;Like any decent programmer, I try to avoid overworking the db, because
it's almost always the weak spot in data-driven applications (even tiny
ones like mine).&lt;br&gt;
Unfortunately for my MySQL server, I'm inserting the feed items to the
db one at a time (I know I can add several items with a single &lt;code&gt;INSERT&lt;/code&gt;,
but it'll be more difficult to utilize &lt;code&gt;PDO&lt;/code&gt;'s prepared statements, which
save me the trouble of escaping my data, which can be quite annoying
when messing with xml).&lt;br&gt;
However, I decided that to compensate for the single-item statements,
I'll save the duplicate-checking for later.&lt;br&gt;
Eventually I ended up inserting the items to a temporary table, and adding to the real table the results of a &lt;code&gt;left outer join&lt;/code&gt; between the tables, selecting only the temp rows that have no matching "permanent" rows. The query looks
something like this:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FeedId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RssData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;current_timestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tempitems&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
    &lt;span class="k"&gt;left&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FeedId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FeedId&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;
    &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FeedId&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Sorting items&lt;/h4&gt;
&lt;p&gt;When I started testing my little script, I saw that new items are
appended to the end of the list (rather than the head, where it's placed
at the "real" feed). I considered sorting the items by &lt;code&gt;created&lt;/code&gt;
(descending, of course), but eventually realised that it's not that
important for now, and will consume considerable time when the table
gets larger.  &lt;/p&gt;
&lt;h4&gt;Some sort of security&lt;/h4&gt;
&lt;p&gt;I didn't want to be bothered with authentication on this site (after
all, creating a user management system for two php pages is kind of
stupid), and I don't have https on my hosting, but I still didn't want
my rss to be available for the whole world to see.&lt;br&gt;
In addition to separating the served feeds into "channels" (each channel can aggregate several feeds) and giving each channel a unique int id and a friendly
name (used as a title), I gave each channel its own 20-Character key.
This key is used when fetching the feed, serving as a sort of password.&lt;/p&gt;
&lt;h4&gt;Intelligent Indexing&lt;/h4&gt;
&lt;p&gt;Considering the fact that the item table is expected to be quite large
and have many rows removed from it on an hourly basis, I avoided adding
the almost-mandatory &lt;code&gt;id&lt;/code&gt; column to this table.&lt;br&gt;
The reason is that I'll never be required to identify a single item, and creating a primary key means that the server maintains an index on the table, and has to update it when rows are added and more importantly, removed.&lt;br&gt;
Instead, I created a non-unique index on the &lt;code&gt;created&lt;/code&gt; column, to help the server find expired items.&lt;br&gt;
I also count on the &lt;code&gt;feeds-items&lt;/code&gt; foreign key to assist the server in
looking up items based on feed (useful when serving a specific feed).  &lt;/p&gt;
&lt;h3&gt;The Result&lt;/h3&gt;
&lt;p&gt;I finished coding in about 6 hours and the site is currently very much
alive at
&lt;a href="http://apps.oneboredadmin.com/rssCache"&gt;http://Apps.OneBoredAdmin.com/rssCache&lt;/a&gt;
(fair warning  - at the moment the site has no UI whatsoever). I'll make
it more user-friendly when I feel like it. The important point is - I
can turn my computer off tonight safely!&lt;br&gt;
If you'd like to use my site feel free to comment, message me or
whatever, and I'll try to speed the UI development up.&lt;br&gt;
&lt;strong&gt;Edit:&lt;/strong&gt; Finished! Check top for link&lt;/p&gt;</content><category term="FOSS"></category><category term="MySQL"></category><category term="Programming"></category><category term="PHP"></category><category term="RSS"></category><category term="BitTorrent"></category><category term="Ramblings"></category><category term="SQL"></category></entry><entry><title>Active Directory's Object Specific ACEs and PowerShell</title><link href="https://blog.backslasher.net/active-directory-object-specific-aces.html" rel="alternate"></link><published>2011-11-24T09:36:00+01:00</published><updated>2011-11-24T09:36:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-11-24:/active-directory-object-specific-aces.html</id><summary type="html">&lt;p&gt;I recently checked the option of handing out AD permissions through PowerShell scripts, and I found out that setting object-specific ACEs is not trivial scriptwise.&lt;br&gt;
Active Directory ACE (access control entries) are different from your regular ACEs (for example, NTFS), because they can be used to grant permissions only on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently checked the option of handing out AD permissions through PowerShell scripts, and I found out that setting object-specific ACEs is not trivial scriptwise.&lt;br&gt;
Active Directory ACE (access control entries) are different from your regular ACEs (for example, NTFS), because they can be used to grant permissions only on specific types of objects, and to propagate only to specific types of child objects.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/active-directorys-object-specific-aces/ObjectSpecificACE-UI.png"&gt;&lt;br&gt;
Example - Granting &lt;code&gt;Everyone&lt;/code&gt; the right to create &lt;code&gt;Computer&lt;/code&gt; objects in &lt;code&gt;child OUs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/active-directorys-object-specific-aces/ObjectSpecificACE-UI2.png"&gt;&lt;br&gt;
Example - Granting &lt;code&gt;Everyone&lt;/code&gt; the &lt;code&gt;reset password&lt;/code&gt; right, but only on &lt;code&gt;Computer&lt;/code&gt; objects (rather than user accounts)&lt;/p&gt;
&lt;p&gt;My question is - how do I replicate this in PowerShell?&lt;br&gt;
After granting the "create computer objects in child OUs" right (pic1)
and loading the Active Directory module, If I fetch all of the relevant
permissions thusly:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;get-acl&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;AD:\OU=Domain Controllers,Dc=contoso,DC=com&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;Access&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IdentityReference&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Everyone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I get the following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ActiveDirectoryRights : CreateChild, DeleteChild
InheritanceType       : Descendents
ObjectType            : bf967a86-0de6-11d0-a285-00aa003049e2
InheritedObjectType   : bf967aa5-0de6-11d0-a285-00aa003049e2
ObjectFlags           : ObjectAceTypePresent, InheritedObjectAceTypePresent
AccessControlType     : Allow
IdentityReference     : Everyone
IsInherited           : False
InheritanceFlags      : ContainerInherit
PropagationFlags      : InheritOnly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that the &lt;code&gt;ActiveDirectoryRights&lt;/code&gt; granted are &lt;code&gt;CreateChild&lt;/code&gt; and &lt;code&gt;DeleteChild&lt;/code&gt;, which are generic, NTFS-ish rights. The interesting parts here are &lt;code&gt;ObjectType&lt;/code&gt; and &lt;code&gt;InheritedObjectType&lt;/code&gt;, Both contain well known IDs representing AD object types.&lt;br&gt;
All object type guids are available in the &lt;code&gt;schema&lt;/code&gt; partition, on the property &lt;code&gt;schemaIDGUID&lt;/code&gt;. To look up for the object type matching &lt;code&gt;bf967a86-0de6-11d0-a285-00aa003049e2&lt;/code&gt;, you could use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$RawGuid&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;00299570-246d-11d0-a768-00aa006e0529&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toByteArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nb"&gt;get-adobject&lt;/span&gt; &lt;span class="n"&gt;-fi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;schemaIDGUID&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$rawGuid&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;-SearchBase&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-ADRootDSE&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;schemaNamingContext&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="n"&gt;schemaIDGUID&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Select &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;schemaIDGUID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;={&lt;/span&gt;&lt;span class="no"&gt;[guid]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;schemaIDGUID&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And now we discover that the field &lt;code&gt;ObjectType&lt;/code&gt; contains the &lt;code&gt;SchemaIDGUID&lt;/code&gt; of &lt;code&gt;Computer&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;name                                                        schemaIDGUID
----                                                        ------------
Computer                                                    bf967a86-0de6-11d0-a285-00aa003049e2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In a similar method we can find that "InheritedObjectType" contains "Organizational-Unit". In order to create your own ACE, you simply have to find the right IDs to put in those fields, and continue to set the ACL normally.&lt;br&gt;
Have a safe directory!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Making sure your Audit Collection Server is collecting</title><link href="https://blog.backslasher.net/making-sure-your-audit-collection-server-is-collecting.html" rel="alternate"></link><published>2011-10-22T21:23:00+02:00</published><updated>2011-10-22T21:23:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-10-22:/making-sure-your-audit-collection-server-is-collecting.html</id><summary type="html">&lt;p&gt;A few days ago I wanted to make sure that my ACS (Audit Collection
Server) is collecting events from all of my DCs.&lt;br&gt;
For those unfamiliar with ACS, it's an additional component to SCOM
(System Center Configuration Manager) that allows you to collect events
from the security log of several …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few days ago I wanted to make sure that my ACS (Audit Collection
Server) is collecting events from all of my DCs.&lt;br&gt;
For those unfamiliar with ACS, it's an additional component to SCOM
(System Center Configuration Manager) that allows you to collect events
from the security log of several machines into a dedicated db, for
analysis and reporting.&lt;br&gt;
First of all, to start event collection you have to:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install ACS on SCOM (duh)&lt;/li&gt;
&lt;li&gt;Install SCOM agents on the machines you wish to collect events from&lt;/li&gt;
&lt;li&gt;Enable the windows service called "Operations Manager Audit
    Forwarding Service" (&lt;code&gt;AdtAgent&lt;/code&gt;) on the ACS "clients" and set it to
    automatic. You can do it either manually, using Group Policy or
    through a task in the SCOM console (called "Enable Audit
    Collection").&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To extract data from the ACS database, you can query it directly or use
some reoprts that come included with SCOM &lt;a href="http://www.google.co.il/search?q=scom+reports"&gt;(google to find out how)&lt;/a&gt;.&lt;br&gt;
So how can you check that computers are actually reporting to ACS?&lt;br&gt;
You can query the db, with something like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;Max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CreationTime&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;AgentMachine&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AdtServer&lt;/span&gt;&lt;span class="p"&gt;].[&lt;/span&gt;&lt;span class="n"&gt;dvAll5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;AgentMachine&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or you can use AdtAdmin.exe from your SCOM installation media (&lt;code&gt;acs\i386\AdtAdmin.exe&lt;/code&gt;) and parse it's input with PowerShell thusly:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;AdtAdmin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="n"&gt;-stats&lt;/span&gt; &lt;span class="n"&gt;-collector&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SCOMSERVER&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-CSV&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Last Action&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Of course you don't have to filter all of the other properties, but
these two are the bare necessities.&lt;br&gt;
Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="ACS"></category><category term="PowerShell"></category><category term="SCOM"></category><category term="SQL"></category></entry><entry><title>Google Friendly Apache Domain Migration</title><link href="https://blog.backslasher.net/google-friendly-apache-domain-migration.html" rel="alternate"></link><published>2011-07-26T15:10:00+02:00</published><updated>2011-07-26T15:10:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-07-26:/google-friendly-apache-domain-migration.html</id><summary type="html">&lt;p&gt;I recently migrated a domain for a client, and did it like a noob (as in
simply copying the db and files, making sure everything's working, and
then shutting down the old site). As a result, Google's pageranks were
lost, old links were broken and ghost pages were found on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently migrated a domain for a client, and did it like a noob (as in
simply copying the db and files, making sure everything's working, and
then shutting down the old site). As a result, Google's pageranks were
lost, old links were broken and ghost pages were found on Google
searches.&lt;br&gt;
After googling around, I found out what I &lt;strong&gt;should&lt;/strong&gt; have done, and made
my own action list.&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; While this list contains Apache and Google specific steps, you
can certainly research and replace them with equivalent steps for your
scenario.&lt;br&gt;
Also, Google's change of address only works for root domains (not
bla.othersite.com)  &lt;/p&gt;
&lt;h3&gt;1. Prepare destination environment&lt;/h3&gt;
&lt;p&gt;Copy files, dbs etc from to the new site, and make sure it's working.&lt;br&gt;
Change whatever absolute (http://bla.com/file) URLs you have in your
site to point to the new domain &lt;br&gt;
Before you get to the next stage, make sure your new site is up to date
(dbs updated etc).  &lt;/p&gt;
&lt;h3&gt;2. Prepare to redirect the old&lt;/h3&gt;
&lt;p&gt;site
Make sure &lt;a href="http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html"&gt;mod_rewrite&lt;/a&gt; is
enabled on the old server. Almost all modern Apache hosts have it
enabled.&lt;br&gt;
Rename / wipe the old site's root directory (including deleting sub
directories). Of course you should back up the files if you delete them.&lt;/p&gt;
&lt;h3&gt;3. Preform the actual redirection&lt;/h3&gt;
&lt;p&gt;Create the &lt;code&gt;.htaccess&lt;/code&gt; in the root directory, and set it to contain:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;ifmodule mod_rewrite.c&amp;gt;
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^(.*)$ http://NEWDOMAIN.COM/$1 [R=301,L]
&amp;lt;/ifmodule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will cause &lt;code&gt;mod_rewrite&lt;/code&gt; to redirect all requests to the new domain,
except for files that exist in the old site (that's what the
RewriteConds do, &lt;code&gt;-f&lt;/code&gt; is for files). It's useful because that way you can
keep Google Webmaster Tools' validation file on the old domain, but it
won't be served on the new one.&lt;br&gt;
Test the redirection by:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Trying to access the old site and getting redirected to the new
    (working) site&lt;/li&gt;
&lt;li&gt;Putting a file on the old site (such as &lt;code&gt;test.txt&lt;/code&gt;) and successfully
    downloading it (via &lt;code&gt;oldsite.com/test.txt&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;4. Verify sites in Google Webmaster Tools&lt;/h3&gt;
&lt;p&gt;If you haven't done so already, add both sites to &lt;a href="http://www.google.com/webmasters/tools/"&gt;Google Webmaster Tools&lt;/a&gt; (it's free!) and
validate them according to the site. It's preferable to use the html
file validation.  &lt;/p&gt;
&lt;h3&gt;5. Post a change of address&lt;/h3&gt;
&lt;p&gt;Via Webmaster Tools:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the old site's dashboard&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Site Configuration&amp;gt;  Change of Address&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Verify the checklist. Should be overlapping with mine.&lt;/li&gt;
&lt;li&gt;Select the new site from the dropdown below and submit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it! Make sure to check Webmaster tools every few days to look for
things such as crawl errors or incoming links pointing to the old
domain, and make sure to google the old and new site to see if Google's
db has updated.&lt;br&gt;
&lt;code&gt;.htaccess&lt;/code&gt; code taken from &lt;a href="http://stackoverflow.com/questions/6531188/old-to-new-301-redirect-parameters-for-better-google-migration"&gt;StackOverflow&lt;/a&gt;&lt;br&gt;
Happy migrating!&lt;/p&gt;
&lt;/p&gt;</content><category term="FOSS"></category><category term="Apache"></category><category term="Google"></category></entry><entry><title>Monitoring SharePoint 2010 on SCOM - Minimal Permissions</title><link href="https://blog.backslasher.net/monitoring-sharepoint-2010-on-scom.html" rel="alternate"></link><published>2011-07-18T13:15:00+02:00</published><updated>2011-07-18T13:15:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-07-18:/monitoring-sharepoint-2010-on-scom.html</id><summary type="html">&lt;p&gt;I've recently started monitoring my new SharePoint 2010 farms on SCOM,
and found the management pack's documentation to be rather lacking in
setup instructions, and the required permissions for SCOM's account on
the farm were rather shocking:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Local admin on all SharePoint servers&lt;/li&gt;
&lt;li&gt;Local admin on all SQL servers&lt;/li&gt;
&lt;li&gt;dbowner …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've recently started monitoring my new SharePoint 2010 farms on SCOM,
and found the management pack's documentation to be rather lacking in
setup instructions, and the required permissions for SCOM's account on
the farm were rather shocking:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Local admin on all SharePoint servers&lt;/li&gt;
&lt;li&gt;Local admin on all SQL servers&lt;/li&gt;
&lt;li&gt;dbowner on all SharePoint's databases&lt;/li&gt;
&lt;li&gt;Membership in the Farm Administrators group&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After some experimenting, I managed to reduce the permissions to a
normal level, and create my own (working!) workflow:&lt;br&gt;
(treat FARM as a unique identifier for your farm)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prepare a special AD account (one for every farm) for SCOM's monitoring,
such as &lt;code&gt;SCOM-Sharepoint-FARM&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grant that account:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Membership in the &lt;code&gt;Farm Administrators&lt;/code&gt; group on the SharePoint farm
(via Central Administration)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dbowner&lt;/code&gt; on the farm's DBs (or &lt;code&gt;sysadmin&lt;/code&gt; on the SQL server, if it only
holds this farm's DBs anyway)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using SCOM's console, Create a Windows &lt;code&gt;Run-As account&lt;/code&gt; (under
   administration, be careful) named something like "SP FARM Monitoring"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit the SharePoint MP's xml file thusly:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you installed the MP on the SCOM server (as you should), copy the
"SharePointMP.Config" file from &lt;code&gt;C:\Program Files (x86)\System
Center Management Packs\Microsoft SharePoint 2010 Products OpsMgr
2007 MP en-us\&lt;/code&gt; to &lt;code&gt;C:\Program Files\System Center
Management Packs\&lt;/code&gt;. It should stay there.&lt;/li&gt;
&lt;li&gt;Open the file in your favorite XML editor&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add an Association node like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;Association&lt;/span&gt; &lt;span class="na"&gt;Account=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NAME&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;Type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Agent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/Association&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code&gt;NAME&lt;/code&gt; is SCOM's Run-As account&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside the Association node, add a Machine node for every computer
  inside the farm, like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;Machine&lt;/span&gt; &lt;span class="na"&gt;Name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MACHINE&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add every SharePoint server to SCOM's monitored servers (through
   discovery wizard)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute the task &lt;code&gt;Configure SharePoint Management Pack&lt;/code&gt; (in
   &lt;code&gt;Monitoring &amp;gt; SharePoint 2010 Products &amp;gt; Administration&lt;/code&gt;).
   Change the task credentials to an account with farm administrator privileges (like
yours), otherwise the task will execute with SCOM's default action
account, which might not have enough permissions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wait for about an hour, and check out the Diagram View!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If your servers won't appear, check the &lt;code&gt;unidentified machines&lt;/code&gt; view,
the Agent's health, and the server's event log.  &lt;/p&gt;</content><category term="Microsoft"></category><category term="SharePoint"></category><category term="SCOM"></category></entry><entry><title>"The module ... owssvr.dll could not be loaded due to a configuration problem"</title><link href="https://blog.backslasher.net/module-owssvrdll-could-not-be-loaded.html" rel="alternate"></link><published>2011-07-07T16:09:00+02:00</published><updated>2011-07-07T16:09:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-07-07:/module-owssvrdll-could-not-be-loaded.html</id><summary type="html">&lt;p&gt;Recently, one of my teammates installed ArcGis Server 9.3 on our fresh
SharePoint 2010 box, causing all sites to respond with &lt;code&gt;503 Service
Unavailable&lt;/code&gt;. A quick inspection showed that the application pools have
stopped themselves, and the Windows application event log was spammed
with:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event ID: 2282
Source: Microsoft-Windows-IIS-W3SVC-WP …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Recently, one of my teammates installed ArcGis Server 9.3 on our fresh
SharePoint 2010 box, causing all sites to respond with &lt;code&gt;503 Service
Unavailable&lt;/code&gt;. A quick inspection showed that the application pools have
stopped themselves, and the Windows application event log was spammed
with:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Event ID: 2282
Source: Microsoft-Windows-IIS-W3SVC-WP
Description:
The Module DLL C:\Program Files\Common Files\Microsoft Shared\Web Server Extentions\14\isapi\owssvr.dll&amp;#39; could not be loaded due to a configuration problem. The current configuration only supports loading images built for a x86 processor architecture. The data field contains the error number...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After some investigation, I found out that the installation switched all
of the application pools into 32-bit mode, causing SharePoint's x64 dlls
to fail to load.&lt;br&gt;
The solution I found - go over every pool in the IIS manager under
&lt;code&gt;Application pools&lt;/code&gt;, open &lt;code&gt;advanced settings&lt;/code&gt; and set &lt;code&gt;Enable 32-Bit
Application&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;.&lt;br&gt;
Also, make sure you click &lt;code&gt;Set Application Pool Defaults&lt;/code&gt; and change the
settings there, for your future pools.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="SharePoint"></category><category term="IIS"></category></entry><entry><title>Solving and preventing "Topology Discovery failed, error 0x80040a02"</title><link href="https://blog.backslasher.net/solving-and-preventing-topology-discovery-failed.html" rel="alternate"></link><published>2011-06-05T19:00:00+02:00</published><updated>2011-06-05T19:00:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-06-05:/solving-and-preventing-topology-discovery-failed.html</id><summary type="html">&lt;p&gt;Recently our Exchange 2003 environment broke down when we demoted our
last ancient DCs. We panicked and re-promoted them, but no avail. The
Exchange servers won't finish loading (they'd get stuck on "Applying
computer settings", while actually waiting for the &lt;code&gt;Microsoft Exchange System
Attendant&lt;/code&gt; service to finish starting).&lt;br&gt;
The error …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently our Exchange 2003 environment broke down when we demoted our
last ancient DCs. We panicked and re-promoted them, but no avail. The
Exchange servers won't finish loading (they'd get stuck on "Applying
computer settings", while actually waiting for the &lt;code&gt;Microsoft Exchange System
Attendant&lt;/code&gt; service to finish starting).&lt;br&gt;
The error listed in the event viewer was from &lt;code&gt;MSExchangeDSAccess&lt;/code&gt;,
claiming that "Topology Discovery failed". After some searching, we
found &lt;a href="http://support.microsoft.com/kb/919089"&gt;KB919089&lt;/a&gt;, which
indicated we should run Exchange's &lt;code&gt;setup.exe /domainprep&lt;/code&gt; on every
DC.&lt;br&gt;
While executing it on one DC did solve the problem, I wasn't planning to
add this to my DC construction document. Therefore, my solution was
setting the following setting to all DCs through Group Policy:&lt;br&gt;
Open&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Computer Configuration &amp;gt; Policies &amp;gt; Windows Settings &amp;gt; Security Settings &amp;gt; Local Policies &amp;gt; User Rights Assignment &amp;gt; Manage auditing and security log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And add &lt;code&gt;DOMAIN\Exchange Enterprise Servers&lt;/code&gt; to the list.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Exchange"></category><category term="Active Directory"></category></entry><entry><title>Showing "Mail" icon in control panel through Group Policy</title><link href="https://blog.backslasher.net/showing-mail-icon-in-control-panel-through-group-policy.html" rel="alternate"></link><published>2011-06-05T12:40:00+02:00</published><updated>2011-06-05T12:40:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-06-05:/showing-mail-icon-in-control-panel-through-group-policy.html</id><summary type="html">&lt;p&gt;I recently had to lock down a Windows 2008R2 remote desktop server
(terminal server)&lt;br&gt;
One of the requirements was to show only some control panel items, a
setting that can be achieved using the Group Policy setting "Show only
specified Control Panel items" (under &lt;code&gt;Policies &amp;gt; Administrative
Templates &amp;gt; Control Panel&lt;/code&gt;), but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently had to lock down a Windows 2008R2 remote desktop server
(terminal server)&lt;br&gt;
One of the requirements was to show only some control panel items, a
setting that can be achieved using the Group Policy setting "Show only
specified Control Panel items" (under &lt;code&gt;Policies &amp;gt; Administrative
Templates &amp;gt; Control Panel&lt;/code&gt;), but that setting requires the applet's
&lt;em&gt;canonical name&lt;/em&gt;, like &lt;code&gt;Microsoft.Mouse&lt;/code&gt;. All applets included with
Windows have their own canonical names, found in &lt;a href="http://msdn.microsoft.com/en-us/library/ee330741(VS.85).aspx"&gt;this article&lt;/a&gt;&lt;br&gt;
I couldn't find the mail icon's canonical name anywhere, and eventually
found out that writing down the applet's filename - &lt;code&gt;mlcfg32.cpl&lt;/code&gt; is
enough.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Terminal Server"></category><category term="Office"></category></entry><entry><title>Dumping your MySQL db using PHP</title><link href="https://blog.backslasher.net/dumping-your-mysql-db-using-php.html" rel="alternate"></link><published>2011-05-28T12:54:00+02:00</published><updated>2011-05-28T12:54:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-05-28:/dumping-your-mysql-db-using-php.html</id><summary type="html">&lt;p&gt;Hi.&lt;br&gt;
One of my clients asked me to be able to take manual backups of his DB,
and because he wasn't so technologically-inclined, using the hosting
company's interface wasn't an option. So I created a small PHP page that
uses &lt;strong&gt;mysqldump&lt;/strong&gt; to dump the site's db in a downloadable way …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi.&lt;br&gt;
One of my clients asked me to be able to take manual backups of his DB,
and because he wasn't so technologically-inclined, using the hosting
company's interface wasn't an option. So I created a small PHP page that
uses &lt;strong&gt;mysqldump&lt;/strong&gt; to dump the site's db in a downloadable way. The
interesting part is:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt;
&lt;span class="c1"&gt;// Make sure user is allowed to dump the DB. We don&amp;#39;t want everyone getting a copy of our data!&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UserIsAdmin&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="c1"&gt;// Replace variables with your own values&lt;/span&gt;
 &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SQLUSER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SQLPASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SQLDATABASE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SQLSERVER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nv"&gt;$command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mysqldump --user &lt;/span&gt;&lt;span class="si"&gt;$user&lt;/span&gt;&lt;span class="s2"&gt; --password=&lt;/span&gt;&lt;span class="si"&gt;$password&lt;/span&gt;&lt;span class="s2"&gt; --host &lt;/span&gt;&lt;span class="si"&gt;$host&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
 &lt;span class="s2"&gt;&amp;quot; --create-options &lt;/span&gt;&lt;span class="si"&gt;$db&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
 &lt;span class="nv"&gt;$arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="c1"&gt;// Execute&lt;/span&gt;
 &lt;span class="nb"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nv"&gt;$res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;implode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="c1"&gt;// Make the resulting input look like a downloadable file. Remove these if you wish&lt;/span&gt;
 &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Type: text/plain; charset=utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Disposition: attachment;filename=&amp;quot;backup.sql&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$res&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that's it!&lt;br&gt;
Of course this script only works if you can execute stuff on your host.&lt;br&gt;
You can give it its own page, or make it a part of a bigger one.&lt;br&gt;
Enjoy!&lt;/p&gt;</content><category term="Foss"></category><category term="PHP"></category><category term="SQL"></category><category term="Backups"></category></entry><entry><title>Setting Dynamic RPC Port Ranges</title><link href="https://blog.backslasher.net/setting-dynamic-rpc-port-ranges.html" rel="alternate"></link><published>2011-05-02T20:51:00+02:00</published><updated>2011-05-02T20:51:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-05-02:/setting-dynamic-rpc-port-ranges.html</id><summary type="html">&lt;p&gt;We recently had to manually set the dynamic RPC port range in our
servers, mainly because Exchange 2010 sets the port range so wide that
the firewall guys (rightfully) refused to create a rule with that
range.  &lt;/p&gt;
&lt;h3&gt;Warning - at your own risk!&lt;/h3&gt;
&lt;p&gt;When I found out about those settings, I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We recently had to manually set the dynamic RPC port range in our
servers, mainly because Exchange 2010 sets the port range so wide that
the firewall guys (rightfully) refused to create a rule with that
range.  &lt;/p&gt;
&lt;h3&gt;Warning - at your own risk!&lt;/h3&gt;
&lt;p&gt;When I found out about those settings, I stupidly tried applying these
to my entire environment, which crippled my Hyper-V cluster, for
example. So my conclusion - don't apply it to everything without testing
first!  &lt;/p&gt;
&lt;h3&gt;RP-Wut?&lt;/h3&gt;
&lt;p&gt;For those not familiar with it, RPC (&lt;a href="http://technet.microsoft.com/en-us/library/cc738291%28WS.10%29.aspx"&gt;Remote Procedure
Call&lt;/a&gt;)
is an important part of Windows' communication matchanism that is widely used with Microsoft and non-Microsoft software. A feature of RPC is called dynamic RPC port allocation, allowing server software to be allocated incoming ports dynamically, thus avoiding port conflicts. This feature has a range of
ports to select from, and that is the "dynamic RPC port range".&lt;br&gt;
The default ranges in Windows are:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 2003: 1025-5000&lt;/li&gt;
&lt;li&gt;Windows 2008+: 49152-65535&lt;/li&gt;
&lt;li&gt;Windows + Exchange 2010: 6005-59530 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you can see, passing Exchange's default port range through a firewall
is definitely not a good idea.  &lt;/p&gt;
&lt;p&gt;According to &lt;a href="http://support.microsoft.com/kb/154596"&gt;KB154596&lt;/a&gt;, the 2
ways of doing so is either by using &lt;code&gt;RPCCfg.exe&lt;/code&gt; on the server (yukk) or
by modifying the Registry.&lt;br&gt;
The quick version is:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HKLM\Software\Microsoft\Rpc\Internet&lt;/code&gt; (Key): The key that
    will contain all of the following values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ports&lt;/code&gt; (&lt;code&gt;REG_MULTI_SZ&lt;/code&gt;): A list of ports Windows is allowed to
    use for dynamic port allocation. Can be a single port (1234) or a
    range (5555-5560). Numbers should be between 0 and 65535.&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; If you mess this part up (by entering an invalid value),
    the entire configuration becomes invalid.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;PortsInternetAvailable&lt;/code&gt; (&lt;code&gt;REG_SZ&lt;/code&gt;): Set to &lt;code&gt;Y&lt;/code&gt; (case
    insensitive) to make Windows use the &lt;code&gt;Ports&lt;/code&gt; list as a whitelist (only
    use those ports), and &lt;code&gt;N&lt;/code&gt; to use "Ports" as a blacklist (use all
    other ports). I see no sense in setting this to &lt;code&gt;N&lt;/code&gt;, but...&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UseInternetPorts&lt;/code&gt; (&lt;code&gt;REG_SZ&lt;/code&gt;): Set to &lt;code&gt;Y&lt;/code&gt;. I don't realize what
    setting &lt;code&gt;N&lt;/code&gt; would do, but I assume it won't serve our cause.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can utilize Group Policy Preferences to deploy these settings to
several servers in one hit.&lt;br&gt;
Set these values on your machine, restart it, and you're set! Only
several remarks:   &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;These settings apply to the RPC &lt;em&gt;server&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
   Ports for outgoing connections from the machine will still be
    determined by the RPC server (therefore, the other machine).  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apply ALL settings, and do it right!&lt;/strong&gt;&lt;br&gt;
   Make sure you're using correct values (and not some stupid mistake
    like an extra dash in the &lt;code&gt;Ports&lt;/code&gt; key), because invalid
    configuration will stop the RPC server from handing any outgoing
    ports, which will severely impact many remote-related OS features
    like DCOM, remote event viewer etc.&lt;br&gt;
   For the same reason, if you're using Group Poilcy or some script to
    deploy these settings, make sure ALL of the keys are created,
    because I had an issue of missing keys that crippled both my
    clusters and my remote-management apps. It turns out that Group
    Policy Preferences doesn't create the key with the proper
    permissions, so you have to change the key permissions through
    &lt;code&gt;Policies &amp;gt; Windows Settings &amp;gt; Security Settings &amp;gt; Registry&lt;/code&gt;.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Leave enough ports&lt;/strong&gt;&lt;br&gt;
   Don't give RPC a range of 10 ports to play with, because you'll run
    out pretty fast. A lot of client applications use more than one
    connection, and you'll be surprised how many use RPC. I recommend
    giving &lt;em&gt;at least&lt;/em&gt; 1000 ports  &lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;code&gt;Netsh set dynamicport&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;I recently found out that the Netsh command &lt;code&gt;set dynamicport&lt;/code&gt; mentioned
in &lt;a href="http://support.microsoft.com/kb/929851"&gt;http://support.microsoft.com/kb/929851&lt;/a&gt; does not modify the RPC
server at all, but rather changes the windows firewall exceptions.
Therefor, it's useless when using an external firewall (like we do).&lt;br&gt;
Source:
&lt;a href="http://social.technet.microsoft.com/Forums/en-US/winserverDS/thread/7c2aa64e-84a0-4cc3-b6e8-690bb150a735/"&gt;http://social.technet.microsoft.com/Forums/en-US/winserverDS/thread/7c2aa64e-84a0-4cc3-b6e8-690bb150a735/&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;Validating Configuration&lt;/h3&gt;
&lt;p&gt;I think that the best way to validate the changes is to use a sniffer to
record traffic and use remote WMI (that uses RPC) through PowerShell:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Prepare a test machine and a second one, and make sure the second
    machine can access the test machine in the configured ports and 135
    (the RPC port mapper)&lt;/li&gt;
&lt;li&gt;Install Network Monitor (or another sniffer) on one of the machines
    and record RPC traffic&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute the following PowerShell command from the second machine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;win32_operatingsystem&lt;/span&gt; &lt;span class="n"&gt;-comp&lt;/span&gt; &lt;span class="n"&gt;TEST&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure the call executes successfully (no errors) and the
    recorded traffic is in the port range we configured earlier&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Happy Registry-editing-without-burning-your-servers!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="Firewall"></category><category term="Registry"></category></entry><entry><title>Making your pages more Facebook shareable</title><link href="https://blog.backslasher.net/making-your-pages-more-facebook-shareable.html" rel="alternate"></link><published>2011-04-01T16:44:00+02:00</published><updated>2011-04-01T16:44:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-04-01:/making-your-pages-more-facebook-shareable.html</id><summary type="html">&lt;p&gt;I'm working on a project involving &lt;a href="http://gallery.menalto.com/"&gt;Gallery 3&lt;/a&gt;, and one of my goals was tight Facebook
integration. Today I've wanted to make sure that when someone shares a
page from my gallery on Facebook, it'll show up OK.&lt;br&gt;
After some digging around I found some interesting stuff:  &lt;/p&gt;
&lt;h4&gt;Facebook's URL Linter …&lt;/h4&gt;</summary><content type="html">&lt;p&gt;I'm working on a project involving &lt;a href="http://gallery.menalto.com/"&gt;Gallery 3&lt;/a&gt;, and one of my goals was tight Facebook
integration. Today I've wanted to make sure that when someone shares a
page from my gallery on Facebook, it'll show up OK.&lt;br&gt;
After some digging around I found some interesting stuff:  &lt;/p&gt;
&lt;h4&gt;Facebook's URL Linter&lt;/h4&gt;
&lt;p&gt;Whenever you want to test / troubleshoot your shared URLs, use &lt;a href="http://developers.facebook.com/tools/lint"&gt;this tool&lt;/a&gt; to see what Facebook
makes of it. It'll take a url and display all metadata that Facebook
harvests from the page, like its title, description and thumbnail.  &lt;/p&gt;
&lt;h4&gt;Metadata tags&lt;/h4&gt;
&lt;p&gt;Page metadata can be "force-fed" to Facebook using &lt;code&gt;&amp;lt;Metadata&amp;gt;&lt;/code&gt; tags.&lt;br&gt;
I haven't been able to find a complete list, but these folks will do for
most people:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;title&lt;/li&gt;
&lt;li&gt;description&lt;/li&gt;
&lt;li&gt;image_src&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Open Graph Tags&lt;/h4&gt;
&lt;p&gt;If your page represents a real-life object (such as a celebrity, movie,
restaurant) you might prefer using &lt;a href="http://ogp.me/"&gt;Open Graph&lt;/a&gt;. Don't
be misled by the name, this standard was created for Facebook. It's not
some internet-wide phenomenon (at least for now!)  &lt;/p&gt;
&lt;p&gt;These resources should be enough for you to be able to make your page
Facebook-shareable.&lt;/p&gt;</content><category term="FOSS"></category><category term="Facebook"></category><category term="HTML"></category></entry><entry><title>Lowercasing PTR records in DNS</title><link href="https://blog.backslasher.net/lowercasing-ptr-records-in-dns.html" rel="alternate"></link><published>2011-02-22T18:51:00+01:00</published><updated>2011-02-22T18:51:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-02-22:/lowercasing-ptr-records-in-dns.html</id><summary type="html">&lt;p&gt;Recently, one of the IT crowd informed me that he can't delete some of
his PTR records through the DNS management console (dnsmgmt.msc). The
record would appear to be deleted, but it'll still show up after
refreshing.&lt;br&gt;
After some quick Googling I found &lt;a href="http://support.microsoft.com/kb/842127"&gt;kb842127&lt;/a&gt;, which says that PTR records …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, one of the IT crowd informed me that he can't delete some of
his PTR records through the DNS management console (dnsmgmt.msc). The
record would appear to be deleted, but it'll still show up after
refreshing.&lt;br&gt;
After some quick Googling I found &lt;a href="http://support.microsoft.com/kb/842127"&gt;kb842127&lt;/a&gt;, which says that PTR records with uppercase characters in the host name can't be deleted.&lt;br&gt;
The KB offers a hotfix (included with 2003sp1) that stops Windows from creating such records, but doesn't handle existing ones.&lt;br&gt;
Microsoft suggests using some Middle-Ages method with exporting the records to a file, manually editing it, and scripting the deletion / recreation.&lt;br&gt;
I thought that their method was tiring, so I made this script. It'll
search for PTR records containing uppercase characters, delete them
using dnscmd.exe (because using WMI won't work) and create a lowercase
version.&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; This script won't take into account TTLs, timestamps and other
record attributes.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="c"&gt;# If no DC is specified, find one&lt;/span&gt;
&lt;span class="nv"&gt;$dc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
&lt;span class="no"&gt;[system.directoryservices.activedirectory.domaincontroller]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FindOne&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DirectoryServices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveDirectory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DirectoryContext&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Domain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$forReal&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$reg&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[A-Z]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$recs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="nb"&gt;gwmi &lt;/span&gt;&lt;span class="n"&gt;-comp&lt;/span&gt; &lt;span class="nv"&gt;$dc&lt;/span&gt; &lt;span class="n"&gt;-namespace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root/microsoftdns&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MicrosoftDNS_PTRType&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$reg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecordData&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$recs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$recs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$container&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContainerName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;# 1.in-addr.arpa&lt;/span&gt;
    &lt;span class="nv"&gt;$record&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecordData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;# CompName.contoso.com.&lt;/span&gt;
    &lt;span class="nv"&gt;$lowerRecord&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecordData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nv"&gt;$owner&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OwnerName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;# 4.3.2.1.in-addr.arpa&lt;/span&gt;
    &lt;span class="nv"&gt;$shortOwner&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$owner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$owner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;# 4.3.2&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$forReal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;dnscmd&lt;/span&gt; &lt;span class="nv"&gt;$dc&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;RecordDelete&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$container.&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$shortOwner&lt;/span&gt; &lt;span class="n"&gt;PTR&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$forReal&lt;/span&gt;&lt;span class="p"&gt;){(&lt;/span&gt;&lt;span class="no"&gt;[wmiclass]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\\$dc\root\MicrosoftDNS:MicrosoftDNS_PTRType&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;CreateInstanceFromPropertyData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$DNSServer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$owner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$lowerRecord&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;InArpa&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$owner&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;From&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$record&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;To&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$lowerRecord&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ForReal&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$forReal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ret&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="DNS"></category><category term="Scripts"></category><category term="PowerShell"></category></entry><entry><title>Changing php settings without .htaccess or php.ini</title><link href="https://blog.backslasher.net/changing-php-settings-without-htaccess.html" rel="alternate"></link><published>2011-02-04T14:06:00+01:00</published><updated>2011-02-04T14:06:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-02-04:/changing-php-settings-without-htaccess.html</id><summary type="html">&lt;p&gt;I'm doing a little developing in PHP as a hobby, and I got some task involving free hosting in &lt;a href="http://www.freehostingcloud.com/"&gt;FreeHostingCloud.com&lt;/a&gt;.&lt;br&gt;
Since I'm just starting to learn PHP 5, I have a lot of errors. All kinds of them. And it took me a while to understand that errors aren't …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm doing a little developing in PHP as a hobby, and I got some task involving free hosting in &lt;a href="http://www.freehostingcloud.com/"&gt;FreeHostingCloud.com&lt;/a&gt;.&lt;br&gt;
Since I'm just starting to learn PHP 5, I have a lot of errors. All kinds of them. And it took me a while to understand that errors aren't being displayed onscreen because the &lt;code&gt;display_errors&lt;/code&gt; flag was off.&lt;br&gt;
Google told me that I should change this flag using the &lt;code&gt;.htaccess&lt;/code&gt; file, if it's an Apache module, or the &lt;code&gt;php.ini&lt;/code&gt; file, if it's a FastCGI implementation (which it is).  &lt;/p&gt;
&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;Since it's a free hosting package, I can't access the &lt;code&gt;php.ini&lt;/code&gt; file or change the php-wrapper file, that tells the server where to find &lt;code&gt;php.ini&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;I was beginning to think that I'll have to deal with having no errors on screen at all, until I found &lt;code&gt;ini_set&lt;/code&gt;. It's a function that sets a PHP flag for the duration of the script. So now I've added to my &lt;code&gt;base.php&lt;/code&gt; (the PHP file I include in every page) the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nb"&gt;ini_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;display_errors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As long I set it before every page (even before my &lt;code&gt;phpinfo&lt;/code&gt; page),
everything turns out OK!  &lt;/p&gt;
&lt;h3&gt;One Last Thing&lt;/h3&gt;
&lt;p&gt;For those just starting with PHP, you can find out a lot about your environment (flags, libraries, PHP version...) by creating a page that only contains this instruction (except &lt;code&gt;ini_set&lt;/code&gt;, of course!):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="nb"&gt;phpinfo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You'll get a detailed report of your php environment. Remember to take it off once the site becomes production.&lt;/p&gt;
&lt;p&gt;Happy PHPing!&lt;/p&gt;</content><category term="FOSS"></category><category term="Programming"></category><category term="PHP"></category></entry><entry><title>Enabling Remote Desktop Remotely</title><link href="https://blog.backslasher.net/enabling-remote-desktop-remotely.html" rel="alternate"></link><published>2011-01-13T20:52:00+01:00</published><updated>2011-01-13T20:52:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-01-13:/enabling-remote-desktop-remotely.html</id><summary type="html">&lt;p&gt;According to &lt;a href="http://technet.microsoft.com/en-us/library/cc782195%28v=ws.10%29.aspx"&gt;this Technet article&lt;/a&gt;, to enable remote desktop remotely by using the registry you need to set the key&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server:fDenyTSConnections&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then reboot the server.&lt;br&gt;
Rebooting is actually unnecessary - you can just restart the service &lt;code&gt;TermService&lt;/code&gt;&lt;br&gt;
If you'd like to script it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;According to &lt;a href="http://technet.microsoft.com/en-us/library/cc782195%28v=ws.10%29.aspx"&gt;this Technet article&lt;/a&gt;, to enable remote desktop remotely by using the registry you need to set the key&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server:fDenyTSConnections&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then reboot the server.&lt;br&gt;
Rebooting is actually unnecessary - you can just restart the service &lt;code&gt;TermService&lt;/code&gt;&lt;br&gt;
If you'd like to script it all:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Set registry&lt;/span&gt;
&lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="no"&gt;[Microsoft.Win32.RegistryKey]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OpenRemoteBaseKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LocalMachine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OpenSubKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SYSTEM\CurrentControlSet\Control\Terminal Server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fDenyTSConnections&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c"&gt;# Restart service&lt;/span&gt;
&lt;span class="nb"&gt;Get-Service&lt;/span&gt; &lt;span class="n"&gt;TermService&lt;/span&gt; &lt;span class="n"&gt;-comp&lt;/span&gt; &lt;span class="nv"&gt;$computerName&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Restart-Service&lt;/span&gt; &lt;span class="n"&gt;-force&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="Windows"></category><category term="PowerShell"></category><category term="Terminal Server"></category><category term="Registry"></category><category term="One-Liner"></category></entry><entry><title>Event Log Permissions, With Scripts!</title><link href="https://blog.backslasher.net/event-log-permissions-with-scripts.html" rel="alternate"></link><published>2011-01-13T11:48:00+01:00</published><updated>2011-01-13T11:48:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-01-13:/event-log-permissions-with-scripts.html</id><summary type="html">&lt;p&gt;I'm going to keep it short, because there's a lot of technical background.&lt;br&gt;
So, I'm assuming you know about:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technet.microsoft.com/en-us/library/cc728310%28WS.10%29.aspx"&gt;Assigning permissions to the registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/aa379567%28v=vs.85%29.aspx"&gt;SDDLs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Event Log concepts (sources, logs)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, to business:  &lt;/p&gt;
&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;Event viewer data is stored in &lt;code&gt;.evt&lt;/code&gt;/&lt;code&gt;.evtx&lt;/code&gt; files in &lt;code&gt;%SystemRoot%\System32\Winevt\Logs\&lt;/code&gt;, but as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm going to keep it short, because there's a lot of technical background.&lt;br&gt;
So, I'm assuming you know about:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technet.microsoft.com/en-us/library/cc728310%28WS.10%29.aspx"&gt;Assigning permissions to the registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/aa379567%28v=vs.85%29.aspx"&gt;SDDLs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Event Log concepts (sources, logs)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, to business:  &lt;/p&gt;
&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;Event viewer data is stored in &lt;code&gt;.evt&lt;/code&gt;/&lt;code&gt;.evtx&lt;/code&gt; files in &lt;code&gt;%SystemRoot%\System32\Winevt\Logs\&lt;/code&gt;, but as with any half-decent DB, no one but &lt;code&gt;SYSTEM&lt;/code&gt; is touching the files themselves.&lt;br&gt;
The permissions are basically divided into two interesting parts - event-related permissions (reading / writing / clearing event logs) and source-related permissions (creating / deleting sources).  &lt;/p&gt;
&lt;h4&gt;Other permissions&lt;/h4&gt;
&lt;p&gt;Of course there is also creating / deleting logs themselves, but it
happens so rarely that I just do it with my admin account.&lt;/p&gt;
&lt;h3&gt;Event-Related&lt;/h3&gt;
&lt;p&gt;Event-related permissions are per log (&lt;code&gt;application&lt;/code&gt;/&lt;code&gt;system&lt;/code&gt; etc.) and are stored in an SDDL in &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\services\eventlog\LOGNAME:CustomSD&lt;/code&gt;&lt;br&gt;
To grant or deny principles some privileges, edit the SDDL, using the
following bits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0x01: Read&lt;/li&gt;
&lt;li&gt;0x02: Write&lt;/li&gt;
&lt;li&gt;0x04: Clear&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Restart is required to apply those permissions&lt;/p&gt;
&lt;h4&gt;Scripting Time&lt;/h4&gt;
&lt;p&gt;I use PowerShell to read the registry value, parse the SDDL into an ACL object, edit it, and export the SDDL-equivalent back into the registry.&lt;br&gt;
This stub of a script will grant some principle permissions to read from and write to a certain log:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Principle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Builtin\Remote Desktop Users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Application&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Get SDDL:&lt;/span&gt;
&lt;span class="nv"&gt;$orgSDDL&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gp &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HKLM:\SYSTEM\CurrentControlSet\Services\Eventlog\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;CustomSD&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;-exp&lt;/span&gt; &lt;span class="n"&gt;CustomSD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Before:&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$orgSDDL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;# Create ACL&lt;/span&gt;
&lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegistrySecurity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetSecurityDescriptorSddlForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$orgSDDL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c"&gt;# Create ACE&lt;/span&gt;
&lt;span class="nv"&gt;$ace&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegistryAccessRule&lt;/span&gt; &lt;span class="nv"&gt;$Principle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;allow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;# Combine ACL&lt;/span&gt;
&lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ace&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$newSDDL&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SDDL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;After:&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$newSDDL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;# Store SDDL:&lt;/span&gt;
&lt;span class="nb"&gt;sp &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HKLM:\SYSTEM\CurrentControlSet\Services\Eventlog\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;CustomSD&lt;/span&gt; &lt;span class="nv"&gt;$newSDDL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Source-Related&lt;/h3&gt;
&lt;p&gt;Sources are actually manipulated using the registry (not through some API), and therefore require actual permissions on the registry key of the log itself. For instance, to create a new event source in the &lt;code&gt;Application&lt;/code&gt; log, I would need the privilege to create a key under
&lt;code&gt;HKLM\SYSTEM\CurrentControlSet\services\eventlog\Application&lt;/code&gt;.&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; Consider creating all of the event sources in one concentrated blow as
an admin, to avoid messing with the registry's permissions.&lt;br&gt;
No restart is required to apply these permissions.&lt;/p&gt;
&lt;h4&gt;Scripting Time&lt;/h4&gt;
&lt;p&gt;Granting / denying privileges on the registry is fairly easy with PowerShell. Here's a bit that adds read/write permissions for sources on a specific log to a specific principle:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# Set parameters:&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Principle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Builtin\Remote Desktop Users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Application&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Compose Key:&lt;/span&gt;
&lt;span class="nv"&gt;$LogPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HKLM:\SYSTEM\CurrentControlSet\services\eventlog\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$LogName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt; &lt;span class="nv"&gt;$LogPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$acl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-Acl&lt;/span&gt; &lt;span class="nv"&gt;$LogPath&lt;/span&gt;
    &lt;span class="nv"&gt;$ace&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessControl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegistryAccessRule&lt;/span&gt; &lt;span class="nv"&gt;$Principle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WriteKey, ReadKey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;allow&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$acl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddAccessRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ace&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;#Set-Acl $LogPath $acl&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Write-Error&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Cannot acesss log $LogName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Further Reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/system.security.accesscontrol.aspx"&gt;System.Security.AccessControl
    namespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/aa363661%28VS.85%29.aspx"&gt;Event
    Sources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy messing with the event log!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Security"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Registry"></category><category term="Event Log"></category></entry><entry><title>Speed boosting disconnected environments</title><link href="https://blog.backslasher.net/speed-boosting-disconnected-environments.html" rel="alternate"></link><published>2011-01-06T20:42:00+01:00</published><updated>2011-01-06T20:42:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-01-06:/speed-boosting-disconnected-environments.html</id><summary type="html">&lt;p&gt;Hi there.&lt;br&gt;
Not a while ago, I've created a post about &lt;a href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html"&gt;stsadm.exe / new SPSite() being slow&lt;/a&gt;
in disconnected environments. Just wanted to point out that I've tried
changing the setting on some other servers, and the results were &lt;strong&gt;most
interesting&lt;/strong&gt;. Almost every other MS product, starting from SQL Studio …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi there.&lt;br&gt;
Not a while ago, I've created a post about &lt;a href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html"&gt;stsadm.exe / new SPSite() being slow&lt;/a&gt;
in disconnected environments. Just wanted to point out that I've tried
changing the setting on some other servers, and the results were &lt;strong&gt;most
interesting&lt;/strong&gt;. Almost every other MS product, starting from SQL Studio
and ending in SCOM Console, loaded up faster, probably for being signed
using AuthentiCode. So, if you have a disconnected server hosting some
MS product, try changing this setting too! Remember it might reduce
security when used with applications that actually &lt;strong&gt;can&lt;/strong&gt; access their
CRL listings, so if that's the case (You should know, since it would
probably be an application developed in-house), use the MS application's
&lt;code&gt;.config&lt;/code&gt; file and not the &lt;code&gt;machine.config&lt;/code&gt; one.&lt;br&gt;
Happy boosting!&lt;/p&gt;</content><category term="Microsoft"></category><category term="SCOM"></category><category term="Ramblings"></category><category term="SQL"></category></entry><entry><title>Internet Explorer and SPNs</title><link href="https://blog.backslasher.net/internet-explorer-and-spns.html" rel="alternate"></link><published>2011-01-06T20:33:00+01:00</published><updated>2011-01-06T20:33:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2011-01-06:/internet-explorer-and-spns.html</id><summary type="html">&lt;p&gt;After learning how SPNs work (read my &lt;a href="https://blog.backslasher.net/spns-who-why-where.html"&gt;"Who? Why? Where"&lt;/a&gt;
to learn what's an SPN), I was frustrated to find out that I can't
implement my experience in the real world.&lt;br&gt;
I've created a Sharepoint
Central Admin site on port 1234, and wanted to enable kerberos
authentication for it, so …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After learning how SPNs work (read my &lt;a href="https://blog.backslasher.net/spns-who-why-where.html"&gt;"Who? Why? Where"&lt;/a&gt;
to learn what's an SPN), I was frustrated to find out that I can't
implement my experience in the real world.&lt;br&gt;
I've created a Sharepoint
Central Admin site on port 1234, and wanted to enable kerberos
authentication for it, so I've created an SPN reading &lt;code&gt;http/server:1234&lt;/code&gt;
on the right account, and it didn't work!&lt;br&gt;
The SPN that did work is &lt;code&gt;http/server&lt;/code&gt;, which should work only for the site on port 80 (because
it's the default port for HTTP). Turns out that IE6 had a bug, which
caused it to always request TGS without port numbers (&lt;code&gt;http/server&lt;/code&gt;),
even when navigating to a site in a non-default port. A hotfix
(&lt;a href="http://support.microsoft.com/kb/908209"&gt;kb908209&lt;/a&gt;) was issued and all
was well. Problem is, &lt;strong&gt;we use IE8!&lt;/strong&gt; Surely, someone must have fixed
that behavior in the new browsers?&lt;br&gt;
Apparently, in order to maintain compatibility, new versions of IE(7+)
use the same defected SPN formulation. To switch to the new version, you
have to add this registry key:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;x86:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_INCLUDE_PORT_IN_SPN_KB908209:iexplore.exe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;x64:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_INCLUDE_PORT_IN_SPN_KB908209:iexplore.exe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I used Group Policy Preferences to distribute it to all my servers.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="Mysteries Solved"></category><category term="Internet Explorer"></category><category term="SharePoint"></category></entry><entry><title>Checking for conflicting oIDs</title><link href="https://blog.backslasher.net/checking-for-conflicting-oids.html" rel="alternate"></link><published>2010-12-24T22:16:00+01:00</published><updated>2010-12-24T22:16:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-12-24:/checking-for-conflicting-oids.html</id><summary type="html">&lt;p&gt;I got word that this script was useful for some other IT team, so it's definitely blog-worthy!  &lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I've inherited some AD forests with their schema extended by in-house software, using oIDs belonging to an MS pool, meaning that those numbers might be used by future schema extensions by …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I got word that this script was useful for some other IT team, so it's definitely blog-worthy!  &lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;I've inherited some AD forests with their schema extended by in-house software, using oIDs belonging to an MS pool, meaning that those numbers might be used by future schema extensions by MS and friends.&lt;br&gt;
A very uneasy situation, because whenever I want to extend the schema we have to anticipate oID clashes, requiring forest recovery.&lt;br&gt;
When we prepared the schema for a 2008R2 DC, I've created this nifty script to search for our schema entries and compare their oIDs to the ones in the ldf files that &lt;code&gt;adPrep&lt;/code&gt; is using, to see if there are any
conflicts.&lt;br&gt;
Of course, this script is no replacement to backing up the forest, and maybe extending the schema in a lab before doing the real deal - It'll just help you see if there are obvious conflicts.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;h3&gt;The Script&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Checks for conflicting OIDs in the current AD Schema and some ldf files&lt;/span&gt;
&lt;span class="sd"&gt;.DESCRIPTION&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;This script should be used to examine piratly-extended schemas (ones that were extended with oID not belonging to an isolated pool) before further extending them.&lt;/span&gt;
&lt;span class="cm"&gt;This script collects all oIDs from the schema partition of the current forest, and from all .ldf files in a specified folders, and tries to find conflicting ones.&lt;/span&gt;
&lt;span class="cm"&gt;If found, the conflicting AD object is presented.&lt;/span&gt;
&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Check-ConflictingOIDs.ps1 -objectPattern &amp;#39;MyApp*&amp;#39; -ldfPath &amp;#39;C:\OCS 2007R2\&amp;#39;&lt;/span&gt;
&lt;span class="cm"&gt;Compares all objects starting with &amp;quot;MyApp&amp;quot; with all .ldf files found in &amp;quot;C:\OCS 2007R2\&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;My Blog: http://OneBoredAdmin.blogspot.com&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$objectPattern&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$ldfPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Get all OIDs from AD&lt;/span&gt;
&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;
&lt;span class="nb"&gt;pushd &lt;/span&gt;&lt;span class="n"&gt;ad&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;
&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="n"&gt;schem&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt;
&lt;span class="nv"&gt;$ADIs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="nv"&gt;$objectPattern&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objectClass&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;classSchema&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Get-ADObject&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;governsId&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uID&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;governsId&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="nv"&gt;$ADIs&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-like&lt;/span&gt; &lt;span class="nv"&gt;$objectPattern&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objectClass&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;attributeSchema&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Get-ADObject&lt;/span&gt; &lt;span class="n"&gt;-prop&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;attributeID&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,@{&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attributeID&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="nb"&gt;popd&lt;/span&gt;

&lt;span class="c"&gt;# Get all OIDs from File&lt;/span&gt;
&lt;span class="nb"&gt;pushd &lt;/span&gt;&lt;span class="nv"&gt;$ldfPath&lt;/span&gt;
&lt;span class="nv"&gt;$files&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;*.&lt;/span&gt;&lt;span class="n"&gt;ldf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$FSIs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$files&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Get-Content&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(governsID)|(attributeID):&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^.+: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;popd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;# Compare all AD-OIDs to FS-OIDs&lt;/span&gt;
&lt;span class="nv"&gt;$bFound&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;
&lt;span class="nv"&gt;$ADIs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$FSIs&lt;/span&gt; &lt;span class="o"&gt;-contains&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$bFound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$bFound&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CONFLICT FOUND!&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry><entry><title>Vanishing permissions on AD objects</title><link href="https://blog.backslasher.net/vanishing-permissions-on-ad-objects.html" rel="alternate"></link><published>2010-12-22T22:14:00+01:00</published><updated>2010-12-22T22:14:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-12-22:/vanishing-permissions-on-ad-objects.html</id><summary type="html">&lt;p&gt;I recently managed to solve a problem that bugged me for a ~ year -
permissions on a specific group on AD would vanish, and the change won't
show up on the security logs of any DC (as audit success).  &lt;/p&gt;
&lt;h4&gt;The Story&lt;/h4&gt;
&lt;p&gt;We've made groups for our helpdesk teams, and
gave them …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently managed to solve a problem that bugged me for a ~ year -
permissions on a specific group on AD would vanish, and the change won't
show up on the security logs of any DC (as audit success).  &lt;/p&gt;
&lt;h4&gt;The Story&lt;/h4&gt;
&lt;p&gt;We've made groups for our helpdesk teams, and
gave them appropriate permissions on object in AD (create users, reset
passwords) and made the groups members of some builtin groups. Then,
we've set each helpdesk supervisor as its group's &lt;code&gt;managed by&lt;/code&gt;,
with the additional "Manager can update membership list" (translates to
an ACE on the group).  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://blog.backslasher.net/images/vanishing-permissions-on-ad-objects/Group.png"&gt;&lt;/p&gt;
&lt;p&gt;The problem was that every other day, the supervisor called and
complained he can't add people to the group. We checked the group
properties, and sure enough, the check was gone!  &lt;/p&gt;
&lt;p&gt;After mutual accusations and name calling I've tried:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Auditing all changes to the group. Didn't help. My changes get
    logged, the mystery ones didn't.&lt;/li&gt;
&lt;li&gt;Manually adding permissions through the security tab, giving the guy
    &lt;code&gt;full control&lt;/code&gt; on the group. These ACEs fizzled just the same.&lt;/li&gt;
&lt;li&gt;Changing the group's location. Nothing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The solution&lt;/h3&gt;
&lt;p&gt;Eventually, I've found &lt;a href="http://support.microsoft.com/kb/817433"&gt;this (KB817433)&lt;/a&gt;, that describes some
interesting mechanism called &lt;code&gt;AdminSDHolder&lt;/code&gt;. Apparently, some builtin
objects are considered sensitive, because users in control over these
objects can maliciously elevate themselves to enterprise-adminhood: &lt;br&gt;
Users:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Administrator&lt;/li&gt;
&lt;li&gt;Krbtgt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Groups:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Administrators&lt;/li&gt;
&lt;li&gt;Account Operators&lt;/li&gt;
&lt;li&gt;Server Operators&lt;/li&gt;
&lt;li&gt;Print Operators&lt;/li&gt;
&lt;li&gt;Backup Operators&lt;/li&gt;
&lt;li&gt;Domain Admins&lt;/li&gt;
&lt;li&gt;Schema Admins&lt;/li&gt;
&lt;li&gt;Enterprise Admins&lt;/li&gt;
&lt;li&gt;Cert Publishers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, every hour (by default, can be changed. See KB), the PDC makes sure
these objects' ACLs are identical to the ACL of the object &lt;code&gt;CN=adminSDHolder,CN=System,DC=mydomain,DC=com&lt;/code&gt; and if not, it resets the objects' ACLs (and disables security
inheritance from their container).&lt;br&gt;
The shocker is that &lt;strong&gt;members in these groups are also sensitive&lt;/strong&gt;. As
it happens, we've added the helpdesk group to the builtin "Print
Operators" (for no good reason). Because of that, our helpdesk group was
considered sensitive by the PDC, and so it repeatedly stripped the team
leader's ACE. After removing the group from "Print Operators", the ACE
never disappeared again!&lt;br&gt;
So remember kids, if you add users / groups to the builtin ones, you'll
only have the default boring ACL on these.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Mysteries Solved"></category><category term="Active Directory"></category><category term="Security"></category></entry><entry><title>Stsadm / new SPSite is slow</title><link href="https://blog.backslasher.net/stsadm-new-spsite-is-slow.html" rel="alternate"></link><published>2010-12-14T09:18:00+01:00</published><updated>2010-12-14T09:18:00+01:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-12-14:/stsadm-new-spsite-is-slow.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Get the script &lt;a href="https://blog.backslasher.net/disabling-generate-publisher-evidence.html"&gt;here&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;A couple of days ago, developer extraordinaire &lt;a href="http://blogs.microsoft.co.il/blogs/itaysk/"&gt;Itay
Shakury&lt;/a&gt; was doing
performance tuning on one of our SharePoint applications, and came to me with
a problem - creating a new SPSite object took about 30 secs. The
stranger part was that &lt;strong&gt;only the first …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Get the script &lt;a href="https://blog.backslasher.net/disabling-generate-publisher-evidence.html"&gt;here&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;The Story&lt;/h3&gt;
&lt;p&gt;A couple of days ago, developer extraordinaire &lt;a href="http://blogs.microsoft.co.il/blogs/itaysk/"&gt;Itay
Shakury&lt;/a&gt; was doing
performance tuning on one of our SharePoint applications, and came to me with
a problem - creating a new SPSite object took about 30 secs. The
stranger part was that &lt;strong&gt;only the first creation of SPSite in every
appDomain is slow&lt;/strong&gt;.&lt;br&gt;
We've tried the usual things:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using SQL Profiler to check for DB-delays. Nope, all queries were as
    quick as a fox&lt;/li&gt;
&lt;li&gt;Perfmoning the servers to death, looking for CPU/memory/disk spikes.
    No luck again&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the way, we used this bit of code to check exactly how slow the
SPSite creation is:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;Log-Message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="no"&gt;[DateTime]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[hh:mm:ss.fff]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; $Message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$Url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://SERVER/Url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Log-Message&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Loading Assembly&amp;#39;&lt;/span&gt;
&lt;span class="no"&gt;[Reflection.Assembly]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;LoadWithPartialName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Microsoft.Sharepoint&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-Null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Log-Message&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Creating SPSite&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$Site&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sharepoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SPSite&lt;/span&gt; &lt;span class="nv"&gt;$Url&lt;/span&gt;
&lt;span class="n"&gt;Log-Message&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Finished&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now I did some thinkning. What happens only one time in an AppDomain? I
thought of 3 things:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Poorly written singletons&lt;/strong&gt;. If that were the case, people all
    around the world would be having problems, and not just us.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connections to DBs&lt;/strong&gt;. Using SQL Profiler we found out that the
    connection to the ConfigDB only happens in the last of the 30
    seconds, meaning the DB is not to blame...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lazy loading&lt;/strong&gt;. (Spoiler: This is it) For those of us who forgot
    what it is, lazy loading is "don't look for / load dlls until the
    first time they're actually needed". How can we check that&lt;span
    style="font-size: 125%;"&gt;&lt;span class="Unicode"&gt;‽&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I suddenly remembered some problem I hadn't run into myself, but is
famous in my team:&lt;br&gt;
SQL Server Management Studio was slow to load (&lt;a href="http://support.microsoft.com/?kbid=918644"&gt;KB918644&lt;/a&gt;). It happened
because the studio's assemblies (dlls) were digitally signed by MS using
Authenticode, that uses some sort of SSL-like certificates, and the
studio was trying to check MS's CRL (Certificate Revocation List) to
make sure the digisignature isn't revoked. Because we work in a
disconnected environment, it couldn't succeed.&lt;br&gt;
I've decided to NetMon the sever, and sure enough, my script was
DNS-querying for &lt;code&gt;crl.microsoft.com&lt;/code&gt;, and obviously failing.&lt;br&gt;
After solving this issue, as a bonus, my &lt;code&gt;Stsadm.exe&lt;/code&gt; commands were WAY
faster. Until now, it would take the process about 1 min to tell me I
have the wrong input, and I would die a little bit inside.  &lt;/p&gt;
&lt;h3&gt;Possible Solutions&lt;/h3&gt;
&lt;h4&gt;1. Allow access to crl.microsoft.com&lt;/h4&gt;
&lt;p&gt;If you're lucky(?) enough to be working in a blocked, not disconnected
environment, consider simply allowing traffic to the crl site through
your proxy/firewall/whatever.  &lt;/p&gt;
&lt;h4&gt;2. Stop checking for CRLs&lt;/h4&gt;
&lt;p&gt;If you ouldn't care less if someone stole MS's certificate and created an evil
&lt;code&gt;harepoint.dll&lt;/code&gt; just kidding. We all fear that), you can tell Windows to
stop checking for CRLs altogether.&lt;br&gt;
&lt;strong&gt;The user-specific way:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; This setting affects all software run by that user. You shouldn't use turn it off if this user on this server is used to process smartcard logons, for
example.&lt;br&gt;
Either turn off &lt;code&gt;Inetcpl.cpl &amp;gt; Advanced &amp;gt; Security &amp;gt; Check for publisher's certificate revocation&lt;/code&gt; Or set
this regkey:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;HKCU\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing:State&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;00023e00&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Another note:&lt;/strong&gt; Iv'e seen people scripting something to change the settings for all keys under &lt;code&gt;HKEY_USERS&lt;/code&gt;. While this &lt;strong&gt;seems&lt;/strong&gt; ok, it will actually change settings for all new users (through &lt;code&gt;.DEFAULT&lt;/code&gt;) and for all existing users &lt;strong&gt;with their registry hive currently loaded. Not all users have their hive
loaded at every moment!&lt;/strong&gt; If you're into automation, you're better off
with using Group Policy Preferences (use user preferences, and
server-name-based targeting).
&lt;strong&gt;The machine / app specific way:&lt;/strong&gt;&lt;br&gt;
Use the machine/app/web.config to disable generation of publisher evidence,
the CRL-related process, thusly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;runtime&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;generatePublisherEvidence&lt;/span&gt; &lt;span class="na"&gt;enabled=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/runtime&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(Of course you don't blank your .config files, only add this setting)
&lt;strong&gt;Update (27/12):&lt;/strong&gt; Apparently, on x64 machines, you should change &lt;strong&gt;both&lt;/strong&gt;the x86 and the x64 .config files.&lt;br&gt;
&lt;strong&gt;Update (28/1/14):&lt;/strong&gt; I uploaded &lt;a href="https://blog.backslasher.net/disabling-generate-publisher-evidence.html"&gt;the script&lt;/a&gt; we used  &lt;/p&gt;
&lt;h4&gt;3. Fetch the CRLs yourself&lt;/h4&gt;
&lt;p&gt;If the CRLs stored in the server's certificate store are fresh enough,
it &lt;strong&gt;shouldn't&lt;/strong&gt; dial home for new ones.&lt;br&gt;
Download these:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://crl.microsoft.com/pki/crl/products/CodeSignPCA.crl"&gt;http://crl.microsoft.com/pki/crl/products/CodeSignPCA.crl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://crl.microsoft.com/pki/crl/products/CodeSignPCA2.crl"&gt;http://crl.microsoft.com/pki/crl/products/CodeSignPCA2.crl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add to certificate store:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;certutil -addstore CA CodeSignPCA.crl   
certutil -addstore CA CodeSignPCA2.crl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Could be distributed through Group Policy as well, but I didn't try it.  &lt;/p&gt;
&lt;h4&gt;4. Mess with the process&lt;/h4&gt;
&lt;p&gt;I don't like this option, but If you're feeling malicious, you can just use your
&lt;code&gt;hosts&lt;/code&gt; file to point &lt;code&gt;crl.microsoft.com&lt;/code&gt; into one of your servers (e.g. &lt;code&gt;127.0.0.1&lt;/code&gt;), causing windows to skip the 15-sec timeout issue and fail immediatly, when the server will refuse to hand him the CRLs.  &lt;/p&gt;
&lt;h3&gt;Credit&lt;/h3&gt;
&lt;p&gt;Kudos for &lt;a href="http://dirkvandenberghe.com/2009/01/08/speed-up-sharepoint-spin-up-and-stsadm-execution-time-by-jeroen-ritmeijer.html"&gt;Dirk Van den Berghe&lt;/a&gt; for handing out the methods for solving the issue.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Programming"></category><category term="PKI"></category><category term="Mysteries Solved"></category><category term="SharePoint"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="Performance"></category></entry><entry><title>WindowsIdentity.GetCurrent and changing usernames</title><link href="https://blog.backslasher.net/windowsidentitygetcurrent-and-changing-usernames.html" rel="alternate"></link><published>2010-10-25T10:02:00+02:00</published><updated>2010-10-25T10:02:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-10-25:/windowsidentitygetcurrent-and-changing-usernames.html</id><summary type="html">&lt;p&gt;We've recently encountered an interesting problem:&lt;br&gt;
One of our applications had a service using .net remoting with
impersonation turned on.&lt;br&gt;
Inside this service we had some code using
&lt;a href="http://msdn.microsoft.com/en-us/library/sfs49sw0%28v=vs.110%29.aspx"&gt;WindowsIdentity.GetCurrent()&lt;/a&gt;
to find the user in AD and check some of its properties.&lt;br&gt;
Our issue was thus:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;User &lt;code&gt;X&lt;/code&gt; logs in …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;We've recently encountered an interesting problem:&lt;br&gt;
One of our applications had a service using .net remoting with
impersonation turned on.&lt;br&gt;
Inside this service we had some code using
&lt;a href="http://msdn.microsoft.com/en-us/library/sfs49sw0%28v=vs.110%29.aspx"&gt;WindowsIdentity.GetCurrent()&lt;/a&gt;
to find the user in AD and check some of its properties.&lt;br&gt;
Our issue was thus:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;User &lt;code&gt;X&lt;/code&gt; logs in and uses the service. All is well.&lt;/li&gt;
&lt;li&gt;User &lt;code&gt;X&lt;/code&gt; has its &lt;code&gt;LogonName&lt;/code&gt; and &lt;code&gt;SAMAccountName&lt;/code&gt; changed to &lt;code&gt;Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;User &lt;code&gt;Y&lt;/code&gt; logs on and uses the service.&lt;/li&gt;
&lt;li&gt;When the service is calling &lt;code&gt;WindowsIdentity.GetCurrent()&lt;/code&gt;, the
    username returned is &lt;code&gt;X&lt;/code&gt;, even though the name has changed.&lt;/li&gt;
&lt;li&gt;After restarting the server (not only the service, the entire OS),
    All is well (until the next time a user chnages the LogonName).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We eventually discovered that WindowsIdentity uses
&lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms721799%28v=vs.85%29.aspx"&gt;LsaLookupSids&lt;/a&gt;,
which caches the SID/username mappings instead of asking the DC again.
To prevent that, there is a registry value that can be changed to stop
caching, according to
&lt;a href="http://support.microsoft.com/kb/946358"&gt;kb946358&lt;/a&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;System\CurrentControlSet\Control\Lsa:LsaLookupCacheMaxSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I made it into a little script, that we used as a mid-term solution to
clear the server's cache without disrupting service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[string[]]&lt;/span&gt;&lt;span class="nv"&gt;$servers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$servers&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
 &lt;span class="nv"&gt;$base&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[microsoft.win32.registrykey]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;OpenRemoteBaseKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LocalMachine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$sub&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OpenSubKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;System\CurrentControlSet\Control\Lsa&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LsaLookupCacheMaxSize&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nb"&gt;Start-Sleep&lt;/span&gt; &lt;span class="n"&gt;-Seconds&lt;/span&gt; &lt;span class="n"&gt;5&lt;/span&gt;
 &lt;span class="nv"&gt;$sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeleteValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LsaLookupCacheMaxSize&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nv"&gt;$sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="nv"&gt;$base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Programming"></category><category term="Active Directory"></category><category term="Security"></category><category term="PowerShell"></category></entry><entry><title>A few seconds about psbase</title><link href="https://blog.backslasher.net/few-seconds-about-psbase.html" rel="alternate"></link><published>2010-10-03T22:04:00+02:00</published><updated>2010-10-03T22:04:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-10-03:/few-seconds-about-psbase.html</id><summary type="html">&lt;p&gt;I really like Powershell's dynamic type system, which allows you to, among other things, view XML nodes really easily. For example, to view the connectionStrings stored in your machine.config, all you have to do is something like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;gc &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I really like Powershell's dynamic type system, which allows you to, among other things, view XML nodes really easily. For example, to view the connectionStrings stored in your machine.config, all you have to do is something like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[xml]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;gc &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connectionStrings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And you have a set of working PS objects.&lt;br&gt;
&lt;strong&gt;However&lt;/strong&gt;, when you try to view the properties/methods of the XmlNode object, such as "ParentNode" (using Get-Member, for instance), you only see the data properties of the XML element contained (such as "key").&lt;br&gt;
The answer - &lt;code&gt;PSBase&lt;/code&gt;. It's a hidden member every object has (along with
some other ones, see &lt;a href="http://blogs.msdn.com/b/powershell/archive/2006/11/24/what-s-up-with-psbase-psextended-psadapted-and-psobject.aspx"&gt;here&lt;/a&gt; for greater detail), which displays the raw object, without PowerShell's good-intentioned intervention.&lt;br&gt;
I like to use it while writing scripts, to find the members I need to accomplish stuff. As long as these members aren't hidden by an identically-named member created by PowerShell, they'll behave fine without PSBase if called explicitly (e.g. &lt;code&gt;$bla.ParentNode&lt;/code&gt;).&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category></entry><entry><title>SPNs - Who? Why? Where?</title><link href="https://blog.backslasher.net/spns-who-why-where.html" rel="alternate"></link><published>2010-10-02T22:01:00+02:00</published><updated>2010-10-02T22:01:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-10-02:/spns-who-why-where.html</id><summary type="html">&lt;p&gt;I was making an introduction to a new teammate about SharePoint
infrastructure, and one of the things I had to teach her about was SPNs.
I was surprised to know almost no one at our place knew what SPNs are
actually for. Until my PowerPoint presentation is ready, here is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was making an introduction to a new teammate about SharePoint
infrastructure, and one of the things I had to teach her about was SPNs.
I was surprised to know almost no one at our place knew what SPNs are
actually for. Until my PowerPoint presentation is ready, here is a
(relatively) short explanation:&lt;br&gt;
First of all, SPNs are part of how Kerberos authentication works, and is
used to help encrypt the Client-Server ticket. This a &lt;strong&gt;very&lt;/strong&gt; basic
explanation of what's going on:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When the user logs in to an Active Directory domain, it recives a
    TGT (ticket-granting ticket), allowing the client to request other
    tickets. It's only capable of proving the client's identity to a DC.&lt;/li&gt;
&lt;li&gt;Whenever the client decides to authenticate to a service (for
    example, a web site), the client requests its DC for a CS
    (client-server) ticket, providing the TGT as proof of its identity.&lt;/li&gt;
&lt;li&gt;The DC replies with a CS ticket, &lt;strong&gt;encrypted so that only the
    service can read it&lt;/strong&gt;. This ticket proves to this specific service
    that the ticket's holder is a specific client&lt;/li&gt;
&lt;li&gt;The client passes the CS ticket on (note it can't read it itself) to
    the service.&lt;/li&gt;
&lt;li&gt;The service decrypts the CS ticket, and therefore validates that the
    CS ticket-holder is in fact the user as claimed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The SPN comes in step 3 (if you haven't guessed), to help the DC decide
how to encrypt the CS ticket. Understandably, the only thing that only
the DC and the service know (the &lt;strong&gt;shared secret&lt;/strong&gt;) is the service
user's (the user running the service) password, or any hash derived from
it. So the DC encrypts the CS ticket with a hash of the service user's
password, and sends the ticket onwards.&lt;br&gt;
Let's look at an example:&lt;br&gt;
The user &lt;code&gt;Dom\Nitz&lt;/code&gt; tries to connect to server &lt;code&gt;Dom\Server&lt;/code&gt; in port
&lt;code&gt;81&lt;/code&gt;:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Nitz logs on to the domain and gets a TGT for &lt;code&gt;Dom\Nitz&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Nitz opens his Internet Explorer and connects to
    &lt;code&gt;http://Server:81&lt;/code&gt;.&lt;br&gt;
   The IE and the IIS on the other side negotiate Kerberos
    authentication.&lt;br&gt;
   IE requests from the DC (through windows, of course) a CS ticket for
    the &lt;strong&gt;service&lt;/strong&gt; &lt;code&gt;http/Server:81&lt;/code&gt; (notice the SPN shape)&lt;/li&gt;
&lt;li&gt;The DC creates the CS ticket and encrypts it with the service's
    password.&lt;br&gt;
&lt;strong&gt;Whose password should it use?&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If no SPN is specified, the DC assumes the service user is the server's
account, in our case &lt;code&gt;Dom\Server$,&lt;/code&gt; and uses its password (yes,
computer accounts have passwords). Let's see what happens if the DC is
right:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Client receives the CS ticket, and passes it on to the service
    on port 81.&lt;/li&gt;
&lt;li&gt;The web server (running as &lt;code&gt;Dom\Server$&lt;/code&gt;) decrypts the ticket and
    validates the client's identity. Success!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The problem starts when this assumption is wrong. For example, when the
server is part of a SharePoint farm and port 81 is run from an appPool with
user &lt;code&gt;Dom\Service&lt;/code&gt;. Let's see what happens then:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Client receives the CS ticket, and passes it on to the service
    on port 81.&lt;/li&gt;
&lt;li&gt;The web server (running as &lt;code&gt;Dom\Service&lt;/code&gt;) &lt;strong&gt;tries&lt;/strong&gt; to decrypt the
    ticket, and fails (since its password wasn't the one used to encrypt
    it).&lt;br&gt;
   Kerberos Authentication Error, type &lt;code&gt;KRB_AP_ERR_MODIFIED&lt;/code&gt;. :-(&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The SPN, as you must have guessed, is a way to tell the DC something
like "encrypt all CS tickets for &lt;code&gt;http/Server:81&lt;/code&gt; using &lt;code&gt;Dom\Service&lt;/code&gt;'s
password". That way, CS tickets forwarded to this service will decrypt
correctly. It's done by adding the &lt;strong&gt;Service Principle Name&lt;/strong&gt; (or "the
way the service is called"), composed of &lt;code&gt;Protocol/ServerName[:Port]&lt;/code&gt;
(only specify port for non-defaults, like HTTP ports other than 80) to
the attribute on the service account in the Active Directory.&lt;/p&gt;
&lt;h3&gt;What do I do?&lt;/h3&gt;
&lt;h4&gt;The short answer&lt;/h4&gt;
&lt;p&gt;If you have a service not running as &lt;code&gt;SYSTEM&lt;/code&gt;, but rather as a domain account, you have to use an SPN to allow kerberos authentication to it. Add the right SPN (such as &lt;code&gt;http/Server:81&lt;/code&gt;) to the domain account
running the service. That's it. No restart, no logoff, nothing.&lt;/p&gt;
&lt;h4&gt;Details&lt;/h4&gt;
&lt;p&gt;You can either use &lt;code&gt;adsiedit&lt;/code&gt; (BE CAREFUL!) to write to &lt;code&gt;ServicePrincipalName&lt;/code&gt; of the right domain account, or use &lt;code&gt;SetSpn {SPN} {Domain\\Account}&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Protips&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Always register short (NETBIOS) server name (&lt;code&gt;Server&lt;/code&gt;) and long (DNS) server name (&lt;code&gt;Server.Domain.Com&lt;/code&gt;), to avoid glitches in authentication mechanizes and human errors.  &lt;/li&gt;
&lt;li&gt;Consider cleanups of decommissioned services (see &lt;code&gt;SetSpn&lt;/code&gt; on server 2008+) to avoid duplicate SPNs (same SPN entry, two or more different users). Duplicate SPNs are bad, because the DC doesn't know who's password to use to encrypt the CS
ticket.&lt;/li&gt;
&lt;li&gt;If you're having Kerberos authentication issues, try
&lt;a href="http://technet.microsoft.com/en-us/library/cc728430%28WS.10%29.aspx"&gt;troubleshooting&lt;/a&gt; before giving up and falling back to NTLM for good. Kerberos isn't that
complex to set up! (Only to troubleshoot...).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Pitfalls:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Service account is:  &lt;ul&gt;
&lt;li&gt;Locked out&lt;/li&gt;
&lt;li&gt;Has different password than in AD (did you change the password?)&lt;/li&gt;
&lt;li&gt;Lost &lt;code&gt;User Right Assignments&lt;/code&gt; on the server (faulty Group Policy)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;User account is:&lt;ul&gt;
&lt;li&gt;Locked out&lt;/li&gt;
&lt;li&gt;Has different password than in AD ("Windows needs your current credentials" is usually that)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Machines are:&lt;ul&gt;
&lt;li&gt;With a firewall blocking necessary AD ports (to their respective DCs)&lt;/li&gt;
&lt;li&gt;With a time difference greater than the Kerb tolerance policy (usually 5
mins)&lt;/li&gt;
&lt;li&gt;AD membership is messed up (use &lt;code&gt;NETDOM VERIFY&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Kerberos almost certainly won't work for&lt;ul&gt;
&lt;li&gt;Computers set in different domains without trusts (ask the AD admins)&lt;/li&gt;
&lt;li&gt;Computers outside a domain (duh)&lt;/li&gt;
&lt;li&gt;Services addressed using IP (i.e. &lt;code&gt;http://127.0.0.1/&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Kerberos is a great auth mechanism
for windows-based services, and especially SharePoint (very little farm
config needed). SPNs are required if a non-SYSTEM user is used, or a
multi-FE farm is deployed (and you choose Kerberos).&lt;br&gt;
It's easy to deploy Kerberos auth (after making all possible mistakes), just make sure you're coupled with an AD guy to avoid stupid issues (like replication / incorrect account selection), and most importantly, DON'T PANIC!&lt;br&gt;
I hope this post will save at least one person a night of frustration, learning how to deploy SPNs the hard way.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Kerberos"></category><category term="SharePoint"></category><category term="Active Directory"></category><category term="Security"></category></entry><entry><title>2008 Clusters can't change password</title><link href="https://blog.backslasher.net/2008-clusters-cant-change-password.html" rel="alternate"></link><published>2010-08-23T23:49:00+02:00</published><updated>2010-08-23T23:49:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-08-23:/2008-clusters-cant-change-password.html</id><summary type="html">&lt;p&gt;Last week MS's PFE Moti Bani and me solved a problem that bugged me for ~ a year - since the day we've started deploying 2008 clusters in our production environment:&lt;br&gt;
&lt;strong&gt;2008+ Clusters can't update their CNO and VCO accounts' passwords.&lt;/strong&gt;&lt;br&gt;
The error, as shown in the cluster administrator, was:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Cluster network …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Last week MS's PFE Moti Bani and me solved a problem that bugged me for ~ a year - since the day we've started deploying 2008 clusters in our production environment:&lt;br&gt;
&lt;strong&gt;2008+ Clusters can't update their CNO and VCO accounts' passwords.&lt;/strong&gt;&lt;br&gt;
The error, as shown in the cluster administrator, was:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Cluster network name resource &amp;#39;Cluster Name&amp;#39; cannot be brought online.
The computer object associated with the resource could not be updated in domain &amp;#39;&amp;#39; for the following reason:
Unable to update password for computer account.

The text for the associated error code is: Access is denied.


The cluster identity &amp;#39;&amp;#39; may lack permissions required to update the object. Please work with your domain administrator to ensure that the cluster identity can update computer objects in the domain.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And in the cluster logs:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;????????.????????::2010/??/??-??:??:??.??? ERR   [RES] Network Name : Unable to update password for computer account on DC \\., status 5.&amp;quot;*  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Although this issue isn't critical, it was annoying to see it piling up in the &lt;code&gt;CluAdmin.msc&lt;/code&gt; and the opsMgr console, and it was quite disturbing to know that somewhere, computer accounts are sitting there with year+ passwords, decreasing my domain's overall security.&lt;br&gt;
Last month we've decided this problem is worth some PFE hours, and started troubleshooting it.&lt;br&gt;
Among the actions we've tried were:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding permissions to the cluster/node accounts on the CNO, eventually trying &lt;code&gt;everyone: full control&lt;/code&gt; (only for 5 minutes, I swear!)&lt;/li&gt;
&lt;li&gt;Enabling auditing on the AD and the cluster nodes, trying to study that annoying "access denied". Nothing showed up on our logs&lt;/li&gt;
&lt;li&gt;Activating ADSI auditing and event tracing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eventually, Moti noticed that some of the ACLs on some of my AD containers were messed up:&lt;br&gt;
The &lt;code&gt;authenticated users: read,read permissions, read all properties&lt;/code&gt; ACEs on the domain root, &lt;code&gt;cn=builtin&lt;/code&gt;, &lt;code&gt;cn=computers&lt;/code&gt; and &lt;code&gt;cn=users&lt;/code&gt; were blanked out (not missing, mind you). Within 5 minutes from fixing those ACEs (and replicating), all of the cluster accounts in my production env changed their password! &lt;br&gt;
Our latest theory is that the cluster tried to LDP bind to the AD to check if the account is locked before attempting to change the password through ADSI. The LDP bind destination was one of those containers, and because the LDP bind failed (no read permission or whatever) the cluster gave up on changing the password altogether... What a day.&lt;/p&gt;</content><category term="Microsoft"></category><category term="Failover Cluster"></category><category term="Active Directory"></category><category term="Mysteries Solved"></category><category term="Security"></category><category term="Windows"></category></entry><entry><title>Auto-Sorting Computers in WSUS</title><link href="https://blog.backslasher.net/auto-sorting-computers-in-wsus.html" rel="alternate"></link><published>2010-07-29T20:15:00+02:00</published><updated>2010-07-29T20:15:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-07-29:/auto-sorting-computers-in-wsus.html</id><summary type="html">&lt;p&gt;When I installed my first WSUS server, I liked the idea of auto-assigning computers into different WSUS groups according to domains using the group policy's settings.&lt;br&gt;
However, it's a bummer to find out that you can only assign every computer to &lt;strong&gt;one&lt;/strong&gt; group using GP (and not being able to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I installed my first WSUS server, I liked the idea of auto-assigning computers into different WSUS groups according to domains using the group policy's settings.&lt;br&gt;
However, it's a bummer to find out that you can only assign every computer to &lt;strong&gt;one&lt;/strong&gt; group using GP (and not being able to manually assign), or avoid GP groups &lt;strong&gt;at all&lt;/strong&gt; and assign computers manually.&lt;br&gt;
Eventually I ended up creating this PowerShell script that checks for unassigned computers nightly, and assigns them to the right groups.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Sorts unassigned WSUS clients into domain-matching groups&lt;/span&gt;

&lt;span class="sd"&gt;.Description&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;This scripts loops over all unassigned computer records in WSUS, and assigns each one to the group with a name matching it&amp;#39;s single-lable domain name, if such a group exists.&lt;/span&gt;

&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Sort-WSUSComputers.ps1 &amp;#39;WSUS1&amp;#39;&lt;/span&gt;

&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;My Blog: http://blog.backslasher.net&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$wsusServer&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;$dnsDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$env:USERDNSDOMAIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$Domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$env:USERDOMAIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$topDomain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$dnsDomain&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Domain&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ErrorActionPreference&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="no"&gt;[reflection.assembly]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;LoadWithPartialName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Microsoft.UpdateServices.Administration&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$wsus&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[Microsoft.UpdateServices.Administration.AdminProxy]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetUpdateServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wsusServer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c"&gt;# locate the &amp;quot;unassigned&amp;quot; group&lt;/span&gt;
&lt;span class="nv"&gt;$Unassigned&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wsus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetComputerTargetGroups&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unassigned Computers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="n"&gt;GetComputerTargets&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$Unassigned&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
    &lt;span class="nv"&gt;$Domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FullDomainName&lt;/span&gt; &lt;span class="o"&gt;-replace&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(^[^\.]+\.)|(&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="no"&gt;[regex]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$topDomain&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c"&gt;# Find the matching group&lt;/span&gt;
    &lt;span class="nv"&gt;$Group&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wsus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetComputerTargetGroups&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;?{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$Domain&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c"&gt;# Add the computer&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Group&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$Group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddComputerTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="WSUS"></category></entry><entry><title>Get-BigDirectories</title><link href="https://blog.backslasher.net/get-bigdirectories.html" rel="alternate"></link><published>2010-07-29T10:23:00+02:00</published><updated>2010-07-29T10:23:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-07-29:/get-bigdirectories.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This script is better than just &lt;code&gt;ls -rec | measure&lt;/code&gt;, because measure measures only one field, and when iterating over many files and directories, every iteration counts.&lt;/p&gt;
&lt;p&gt;Whenever our roaming profiles folder gets too big, we have to prune the
profiles that are both old and heavy. Using windows explorer …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This script is better than just &lt;code&gt;ls -rec | measure&lt;/code&gt;, because measure measures only one field, and when iterating over many files and directories, every iteration counts.&lt;/p&gt;
&lt;p&gt;Whenever our roaming profiles folder gets too big, we have to prune the
profiles that are both old and heavy. Using windows explorer, it's easy
enough to see the size of a specific folder, but the &lt;code&gt;last modified&lt;/code&gt;
date is misleading, because files in that folder may have changed while
the folder stayed the same. PowerShell to the rescue!  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Searches and possibly deletes old and big folders&lt;/span&gt;

&lt;span class="sd"&gt;.DESCRIPTION&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;This script recursively checks folders for files, marking for every first-level folder&lt;/span&gt;
&lt;span class="cm"&gt;the sum of all of it&amp;#39;s files size, and the latest WriteTime of a file.&lt;/span&gt;
&lt;span class="cm"&gt;If required, the script deletes folders that are both old enough and big enough.&lt;/span&gt;

&lt;span class="sd"&gt;.PARAMETER&lt;/span&gt;&lt;span class="cm"&gt; Path&lt;/span&gt;
&lt;span class="cm"&gt;The location of the folder to scan. Default is current folder.&lt;/span&gt;

&lt;span class="sd"&gt;.PARAMETER&lt;/span&gt;&lt;span class="cm"&gt; Delete&lt;/span&gt;
&lt;span class="cm"&gt;Whether to delete the matching folders, or just to point them out&lt;/span&gt;

&lt;span class="sd"&gt;.PARAMETER&lt;/span&gt;&lt;span class="cm"&gt; MinSizeMB&lt;/span&gt;
&lt;span class="cm"&gt;The minimum size of a folder to be deleted, in MBs. Default is 5MB&lt;/span&gt;

&lt;span class="sd"&gt;.PARAMETER&lt;/span&gt;&lt;span class="cm"&gt; MinYearsOld&lt;/span&gt;
&lt;span class="cm"&gt;The minimum age of a folder to be deleted, in years. Default is 1 year&lt;/span&gt;

&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;My Blog: http://OneBoredAdmin.blogspot.com&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$Path&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[bool]&lt;/span&gt;&lt;span class="nv"&gt;$Delete&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$MinSizeMB&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$MinYearsOld&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;pushd &lt;/span&gt;&lt;span class="nv"&gt;$Path&lt;/span&gt;
&lt;span class="nv"&gt;$res&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;
&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;

&lt;span class="nv"&gt;$totalSize&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$lastModified&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastWriteTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Recurse&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$totalSize&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$lastModified&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastWriteTime&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nv"&gt;$lastModified&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastWriteTime&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;      
&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;noteproperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;TotalSizeMB&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$totalSize&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;noteproperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;LastModified&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$lastModified&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$del&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TotalSizeMB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-ge&lt;/span&gt; &lt;span class="nv"&gt;$MinSizeMB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastModified&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addYears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$MinYearsOld&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-le&lt;/span&gt; &lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;-MemberType&lt;/span&gt; &lt;span class="n"&gt;noteproperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ShouldDelete&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$del&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Delete&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="nv"&gt;$del&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nb"&gt;rm &lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="n"&gt;-Recurse&lt;/span&gt; &lt;span class="n"&gt;-Force&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;tee &lt;/span&gt;&lt;span class="n"&gt;-var&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;res&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;select &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TotalSizeMB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LastModified&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ShouldDelete&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;out-gridview&lt;/span&gt;
&lt;span class="n"&gt;popd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="FileSystem"></category><category term="PowerShell"></category></entry><entry><title>Querying SQL Servers</title><link href="https://blog.backslasher.net/querying-sql-servers.html" rel="alternate"></link><published>2010-07-27T20:55:00+02:00</published><updated>2010-07-27T20:55:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-07-27:/querying-sql-servers.html</id><summary type="html">&lt;p&gt;Before I had a chance to study Microsoft's SQL Server Management Studio
(SSMS)'s Powershell SnapIn, I needed to grab some data from an SQL DB. I
ended up creating 3 nifty functions for that very thing, and I still use
them today, because I find SQL's SnapIn very slow …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Before I had a chance to study Microsoft's SQL Server Management Studio
(SSMS)'s Powershell SnapIn, I needed to grab some data from an SQL DB. I
ended up creating 3 nifty functions for that very thing, and I still use
them today, because I find SQL's SnapIn very slow and confusing. Please
remember that those are some of my first scripts, so they seem quite
noobish...  &lt;/p&gt;
&lt;h4&gt;Get-SQLConnection&lt;/h4&gt;
&lt;p&gt;Used to create a &lt;code&gt;.net&lt;/code&gt;-ish &lt;code&gt;System.Data.SqlClient.SqlConnection&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;get-SQLConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$database&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;master&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nv"&gt;$goNormal&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$SqlConnection&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlConnection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlConnectionStringBuilder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]=&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InitialCatalog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$database&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;#If we have to impersonate&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$goNormal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegratedSecurity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserID&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegratedSecurity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$SqlConnection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionString&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ConnBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;#return&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="nv"&gt;$SqlConnection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Inovke-SQLCommand&lt;/h4&gt;
&lt;p&gt;Invokes an SQL query on a ready SQL connection, and possibly formats the output using the &lt;code&gt;format-SQLOutput&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;invoke-SQLCommand&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;ValueFromPipeline&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[System.Data.SqlClient.SqlConnection]&lt;/span&gt; &lt;span class="nv"&gt;$Connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[String]&lt;/span&gt; &lt;span class="nv"&gt;$Command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[Switch]&lt;/span&gt; &lt;span class="nv"&gt;$FormatOutput&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="no"&gt;[Switch]&lt;/span&gt; &lt;span class="nv"&gt;$CloseConnection&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$comm&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlCommand&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$comm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$connection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Open&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$Connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$comm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CommandText&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$Command&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$comm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ExecuteReader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$FormatOutput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datatable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Rows&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;format-SQLOutput&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datatable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Rows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$CloseConnection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$Connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Format-SQLOutput&lt;/h4&gt;
&lt;p&gt;I like this one the best.&lt;br&gt;
Gets a tabular &lt;code&gt;.net&lt;/code&gt;-ish result and formats it into a PowerShell object structure by adding &lt;code&gt;NoteProperty&lt;/code&gt; members to a &lt;code&gt;System.Object&lt;/code&gt;.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;format-SQLOutput&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;process&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$tblSrc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$clmTemp&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$tblSrc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$cap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$clmTemp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Caption&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$con&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$clmTemp&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;-inputobject&lt;/span&gt; &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="nv"&gt;$cap&lt;/span&gt; &lt;span class="nv"&gt;$con&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="nv"&gt;$objRet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Have fun!&lt;/p&gt;</content><category term="Microsoft"></category><category term="Scripts"></category><category term="PowerShell"></category><category term="SQL"></category></entry><entry><title>New blog... yay</title><link href="https://blog.backslasher.net/new-blog-yay.html" rel="alternate"></link><published>2010-07-26T21:42:00+02:00</published><updated>2010-07-26T21:42:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-07-26:/new-blog-yay.html</id><summary type="html">&lt;p&gt;Hi.&lt;br&gt;
My name is Nitzan, and I'm a MS-IT guy.&lt;br&gt;
Whenever I run into a problem I can't solve during my work, I almost
always end up finding the answer in some blog.&lt;br&gt;
For that reason, I've decided to place all of the solutions I find in
one place, in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi.&lt;br&gt;
My name is Nitzan, and I'm a MS-IT guy.&lt;br&gt;
Whenever I run into a problem I can't solve during my work, I almost
always end up finding the answer in some blog.&lt;br&gt;
For that reason, I've decided to place all of the solutions I find in
one place, in the hope that someday, someone else will Google them up
and his problem will be solved.   &lt;/p&gt;
&lt;p&gt;The topics that I mess with (at the moment):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PowerShell (can't get enough of!)&lt;/li&gt;
&lt;li&gt;Active directory&lt;/li&gt;
&lt;li&gt;Sharepoint (2007 and 2010)&lt;/li&gt;
&lt;li&gt;Hyper-V (Including VMM)&lt;/li&gt;
&lt;li&gt;WSUS&lt;/li&gt;
&lt;li&gt;SCOM (OpsMgr 2007R2)&lt;/li&gt;
&lt;li&gt;Misc Windows management (Time sync, WMI etc.)&lt;/li&gt;
&lt;li&gt;General .net development&lt;/li&gt;
&lt;/ul&gt;</content><category term="misc"></category><category term="Ramblings"></category></entry><entry><title>Testing stranded group policies</title><link href="https://blog.backslasher.net/testing-stranded-group-policies.html" rel="alternate"></link><published>2010-05-08T16:13:00+02:00</published><updated>2010-05-08T16:13:00+02:00</updated><author><name>Nitz</name></author><id>tag:blog.backslasher.net,2010-05-08:/testing-stranded-group-policies.html</id><summary type="html">&lt;p&gt;Ever had GPO Version differences between the AD and the Sysvol? Sure,
you might have a healthy FRS/DFSR architecture, but the replication takes
time. It's annoying to check if the GP object is now OK on every server,
because one would have to point the GPMC to every DC …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever had GPO Version differences between the AD and the Sysvol? Sure,
you might have a healthy FRS/DFSR architecture, but the replication takes
time. It's annoying to check if the GP object is now OK on every server,
because one would have to point the GPMC to every DC and check the
version numbers...&lt;br&gt;
My soultion - this nifty script. It's essentially grabbing the GP object
through &lt;code&gt;Get-GPO&lt;/code&gt; from every DC there is, and comparing its AD and Sysvol
versions (for both &lt;code&gt;computer&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt;), and pointing out if this DC's version
is mismatched. Run this script once, and you'll know how the GP's doing
on every (accessible) DC.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-not&lt;/span&gt; &lt;span class="nb"&gt;gmo &lt;/span&gt;&lt;span class="n"&gt;GroupPolicy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;ipmo &lt;/span&gt;&lt;span class="n"&gt;GroupPolicy&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="sd"&gt;.SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Gets a GPO object from every DC in the domain, and looks for stranded GPOs&lt;/span&gt;

&lt;span class="sd"&gt;.Description&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;This function discovers all DCs in your domain, gets the GPO specified for every DC, and for every object checks all 4 versions (DS/Sysvol and Computer/User) to see if a gpo is only partially updated on a DC.&lt;/span&gt;

&lt;span class="sd"&gt;.Parameter&lt;/span&gt;&lt;span class="cm"&gt; GPOName&lt;/span&gt;

&lt;span class="sd"&gt;.EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;Test-StrandedGPO &amp;#39;Some Policy Name&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;.LINK&lt;/span&gt;&lt;span class="cm"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;My Blog: http://OneBoredAdmin.blogspot.com&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Test-StrandedGPO&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Mandatory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="no"&gt;[string]&lt;/span&gt;&lt;span class="nv"&gt;$GPOName&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Get all DCs&lt;/span&gt;
    &lt;span class="nv"&gt;$DCs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[directoryservices.directorysearcher]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;(&amp;amp;(&amp;amp;(&amp;amp;(sAMAccountType=805306369)(useraccountcontrol:1.2.840.113556.1.4.804:=67117056))))&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;

    &lt;span class="c"&gt;# For every DC, get the GP object&lt;/span&gt;
    &lt;span class="nv"&gt;$GPObjects&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$DCs&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="nv"&gt;$temp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-GPO&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="nv"&gt;$GPOName&lt;/span&gt; &lt;span class="n"&gt;-Server&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
        &lt;span class="nv"&gt;$temp&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Add-Member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Server&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nv"&gt;$server&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;# For every GP object, check if the version is consistent&lt;/span&gt;
    &lt;span class="nv"&gt;$GPObjects&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;new-object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DisplayName&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DisplayName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Server&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ComputerDS&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DSVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ComputerSys&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SysvolVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;UserDS&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DSVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;UserSys&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SysvolVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="no"&gt;[bool]&lt;/span&gt; &lt;span class="nv"&gt;$VMismatch&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;!((&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DSVersion&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Computer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SysvolVersion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DSVersion&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SysvolVersion&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="nv"&gt;$objRet&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;add-member&lt;/span&gt; &lt;span class="n"&gt;NoteProperty&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;VersionMismatch&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$VMismatch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="nv"&gt;$objRet&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Microsoft"></category><category term="Group Policy"></category><category term="NTFRS"></category><category term="PowerShell"></category><category term="Active Directory"></category></entry></feed>